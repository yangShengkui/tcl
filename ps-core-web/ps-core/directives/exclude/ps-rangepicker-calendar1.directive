<config injector="$filter"
></config>
<template>
    <div class="wrap">
      <input type="text" />
      <span style="color: red;font-size: 12px; margin-left: 10px;"></span>
    </div>,
</template>
<script type="text/javascript">
//  import moment from "moment";
  export default function($filter){
    return {
      scope : {
          ngModel: '=?',
          config: '=?',

      },
      require : '?ngModel',
      link(scope, element, attr, ngModel) {

          var $dom = element.find('input'),
                  dom = $dom[0],
                  $spa = element.find('span'),
                  //用于设置中文
                  locale = {
                      "format": 'YYYY-MM-DD HH:mm:ss', //也可以传入format: 'MM/DD/YYYY h:mm A',
                      "applyLabel": "确定",
                      "cancelLabel": "取消",
                      "fromLabel": "起始时间",
                      "toLabel": "结束时间'",
                      "customRangeLabel": "自定义",
                      "weekLabel": "W",
                      "daysOfWeek": ["日", "一", "二", "三", "四", "五", "六"],
                      "monthNames": ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                      "firstDay": 1
                  },
                  defaultConfig = {
                      placeholder: '---请选择---',
                      timePicker: true,
                      timePickerIncrement: 1,
                      timePicker24Hour: true,
                      separator: " - ",
                      timePickerSeconds: true,
                      opens: 'right',
                      locale: locale,
                      width: '360px',
                      height: '30px',
                      pos: 'center',
                      // startDate: "07/27/2018",
                      // endDate: "08/02/2018",
                      // minDate:"07/27/2016",
                      // maxDate:"07/27/2020",
                      // `timePickerIncrement`: (number) time选择递增数
                      //
                      // `timePicker12Hour`: (boolean) 是否12小时制
                      //
                      // `opens`: (string: 'left'/'right') 显示在元素左边还是右边
                      //
                      // `buttonClasses`: (array) 按钮样式
                      //
                      // `applyClass`: (string) 应用按钮样式
                      //
                      // `cancelClass`: (string) 取消按钮样式
                      //
                      // `format`: (string) date/time格式
                      //
                      // `separator`: (string) 分隔符
                      //
                      // `locale`: (object) 本地设置
                      //
                      // `singleDatePicker`: (boolean) 是否是单个时间选择器
                      //
                      // `parentEl`: (string) 将控件放到哪个元素内，默认body

                  };

          scope.config = $.extend({},defaultConfig,scope.config || {});
          dom.placeholder = scope.config.placeholder;
          scope.config["startDate"] = new Date(scope.ngModel[0]);
          scope.config["endDate"] = new Date(scope.ngModel[1]);

          $dom.css({'width':scope.config.width,'height':scope.config.height,'text-align':scope.config.pos});
//                $dom.daterangepicker(scope.config, function(start, end, label) {
//
//                    console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')');
//                });
          window["require"](['bootstrap-daterangepicker'],function(){
              $dom.daterangepicker(scope.config);
          });
          dom.onchange = function () {
              if(!this.value) {
                  $spa.text('');
                  return;
              }else {
                  ngModel.$setViewValue(this.value);
              }
          }
          ngModel.$render();
          Array.prototype.push.call(ngModel.$parsers,function (n,o) {
              if(!n){
                  return;
              }
              var vals = n.split(' - ');
              var arr = [];
              arr.push(new Date(vals[0]));
              arr.push(new Date(vals[1]));
              console.log(arr);
              return arr;
          });
      }
    }
  }
</script>
<style type="less" scoped="true">
  .wrap{
    margin : 5px;
    padding : 10px;
    color : #333;
    background-color : #eee;
    border : 1px solid #ddd;
  }
</style>