{
  "freeBoardValue": {
    "ROW": {
      "type": "row",
      "source": "ROW",
      "advance": {
        "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      //target.setDimension([6,6]);\n    }\n  }\n};"
      },
      "parameters": {
        "alignment": "bootstrap"
      },
      "style": {},
      "children": [
        {
          "type": "column",
          "col": 12,
          "children": [
            {
              "type": "row",
              "children": []
            }
          ]
        }
      ]
    },
    "TREEMENU2": {
      "label" : "三级目录",
      "type": "treemenu2",
      "source": "TREEMENU2",
      "advance": {
        "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var data = [\n        [\"star\", \"目录1\"],\n        [\"ok\", \"目录2\",\n          [\n            [null,\"子目录1\"],\n            [null,\"子目录2\",\n              [\n                [null,\"三级子目录1\", \"ssurl1\"],\n                [null,\"三级子目录2\", \"ssurl2\"]\n              ]\n            ]\n          ]\n        ],[\"file\", \"目录3\",\n          [\n            [null,\"子目录1\"],\n            [null,\"子目录2\",\n              [\n                [null,\"三级子目录1\", \"ssurl1\"],\n                [null,\"三级子目录2\", \"ssurl2\"]\n              ]\n            ]\n          ]\n        ]\n      ];\n      target.render(data);\n    }\n  }\n};"
      }
    },
    "LISTTWO": {
      "label": "工单列表（列表）",
      "type": "listTable",
      "source": "LISTTABLE",
      "advance": {
        "getListTable": "workorder",
        "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      var ticketNo = event.data.values.ticketNo;\n      event.tools.location.href='../../app-oc/index.html#/workOrderTimeLine/'+ ticketNo;\n     }\n  },  \n  \"format\" : [\n    {\n      \"name\": \"工单号\",\n      \"value\": \"{item:ticketNo}\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"内容\",\n      \"value\": \"{item:message}\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"紧急度\",\n      \"value\": \"{item:priorityCode}\",\n      \"type\": \"priority\"\n    }\n  ]\n}",
        "condition": "[100]"
      },
      "$index": [
        1,
        0
      ],
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "DATATABLE": {
      "label": "列表",
      "type": "dataTable",
      "source": "DATATABLE",
      "parameters": {
        "col": 1,
        "pageSize": 10,
        "listbottom": "standard"
      },
      "advance": {
        "getListTable": "newdevice",
        "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"label\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"创建时间\",\n      \"value\": \"createTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    }\n  ]\n}",
        "condition": "[]"
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      },
      "template": [
        {
          "label": "全部设备列表",
          "type": "image",
          "url": "images/dataTable/qbsblb.png",
          "parameters": {
            "col": 1,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "newdevice",
            "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"label\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"创建时间\",\n      \"value\": \"createTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    }\n  ]\n}",
            "condition": "[]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          }
        }, {
          "label": "全部客户列表",
          "type": "image",
          "parameters": {
            "col": 1,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "",
            "expression": "{\n\t\"on\" : {\n    \"init\" : function(event){\n      \tevent.target.getDomainsByFilter({\n          modelIds : [301]\n        }, function(customers){\n          console.log(customers);\n          event.target.render(customers);\n        });\n    },\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"客户名称\",\n      \"value\": \"label\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"创建时间\",\n      \"value\": \"createTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"width\" : \"180px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    }\n  ]\n}",
            "condition": "[]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "url": "images/dataTable/qbkhlb.png"
        }, {
          "label": "全部项目列表",
          "type": "image",
          "parameters": {
            "col": 1,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "",
            "expression": "{\n\t\"on\" : {\n    \"init\" : function(event){\n      \tevent.target.getDomainsByFilter({\n          modelIds : [302]\n        }, function(customers){\n          console.log(customers);\n          event.target.render(customers);\n        });\n    },\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"项目名称\",\n      \"value\": \"label\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"创建时间\",\n      \"value\": \"createTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"width\" : \"180px\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    }\n  ]\n}",
            "condition": "[]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "url": "images/dataTable/qbxmlb.png"
        }, {
          "label": "当前项目设备列表",
          "type": "image",
          "url": "images/dataTable/dqxmsblb.png",
          "parameters": {
            "col": 1,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "currentDevicesByProject",
            "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"label\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"启动时间\",\n      \"value\": \"activeTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    },\n    {\n      \"name\": \"创建时间\",\n      \"value\": \"createTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    }\n  ]\n}",
            "condition": "[]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          }
        }, {
          "label": "全部告警列表",
          "type": "image",
          "url": "images/dataTable/qbgjlb.png",
          "parameters": {
            "col": 1,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "alert",
            "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"devName\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"告警信息\",\n      \"value\": \"message\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"告警时间\",\n      \"value\": \"arisingTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    },\n    {\n      \"name\": \"告警级别\",\n      \"value\": \"severity\",\n      \"type\": \"priority\"\n    }\n  ]\n}",
            "condition": "[]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          }
        }, {
          "label": "当前设备告警列表",
          "type": "image",
          "url": "images/dataTable/dqsbgjlb.png",
          "parameters": {
            "col": 1,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "currentAlertByDevice",
            "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"devName\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"告警信息\",\n      \"value\": \"message\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"告警时间\",\n      \"value\": \"arisingTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    },\n    {\n      \"name\": \"告警级别\",\n      \"value\": \"severity\",\n      \"type\": \"priority\"\n    }\n  ]\n}",
            "condition": "[]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          }
        }, {
          "label": "当前设备指令列表",
          "type": "image",
          "url": "images/dataTable/dqsbzllb.png",
          "parameters": {
            "col": 2,
            "pageSize": 10,
            "listbottom": "standard"
          },
          "advance": {
            "getListTable": "currentDirectiveByDevice",
            "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"指令名称\",\n      \"value\": \"name\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"指令输入\",\n      \"type\": \"directiveInput\"\n    },\n    {\n      \"name\": \"操作\",\n      \"type\": \"button\"\n    }\n  ]\n}",
            "condition": "[100]"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          }
        }
      ]
    },
    "DATATABLEADVANCE": {
      "label": "高级列表",
      "type": "dataTableAdvance",
      "source": "DATATABLEADVANCE",
      "parameters": {
        "col": 1,
        "pageSize": 10,
        "listbottom": "standard"
      },
      "advance": {
        "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      \tconsole.log(event);\n     }\n  },\n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"label\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"创建时间\",\n      \"value\": \"createTime\",\n      \"type\": \"date\",\n      \"style\": {\n        \"background-color\" : \"#3c8dbc\",\n        \"border-radius\" : \"3px\",\n        \"text-align\" : \"center\",\n        \"color\" : \"#fff\",\n        \"padding\" : \"5px 15px\"\n      }\n    }\n  ]\n}"
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "SCROLLBAR": {
      "label": "滚动条组件",
      "type": "scrollbar",
      "source": "SCROLLBAR",
      "advance": {
        "expression": "expression = {\n  \"on\" : {\n    \"click\" : function(event){\n      console.log(event);\n      console.log(event.data.modelId, event.data.id);\n     \tevent.tools.location.href='../../app-oc/index.html#/facility_panel/'+ event.data.modelId + '/' + event.data.id;\n   }\n  },\n  format : [\n    {\n      \"name\": \"创建日期\",\n      \"value\": \"{item:createTime}\",\n      \"type\": \"date\",\n      \"style\": {\n        \"color\" : \"#FFF\",\n        \"background-color\" : \"#3c8dbc\",\n        \"padding\" : \"2px 10px\",\n        \"border-radius\" : \"3px\"\n      }\n    },\n    {\n      \"name\": \"名称\",\n      \"value\": \"{item:label}\",\n      \"type\": \"text\"\n    }\n  ]\n}"
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "SVGCHART": {
      "label": "SVG视图",
      "type": "svgchart",
      "source": "SVGCHART",
      "advance": {
        "expression": "expression = {\n  \"on\" : {\n    \"click\" : function(event){\n      console.log(event);\n      console.log(event.data.modelId, event.data.id);\n     \tevent.tools.location.href='../../app-oc/index.html#/facility_panel/'+ event.data.modelId + '/' + event.data.id;\n   }\n  },\n  format : [\n    {\n      \"name\": \"创建日期\",\n      \"value\": \"{item:createTime}\",\n      \"type\": \"date\",\n      \"style\": {\n        \"color\" : \"#FFF\",\n        \"background-color\" : \"#3c8dbc\",\n        \"padding\" : \"2px 10px\",\n        \"border-radius\" : \"3px\"\n      }\n    },\n    {\n      \"name\": \"名称\",\n      \"value\": \"{item:label}\",\n      \"type\": \"text\"\n    }\n  ]\n}"
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "TIMEINFO": {
      "label": "时钟组件",
      "type": "timeinfo",
      "source": "TIMEINFO",
      "advance": {
        "expression": "expression = {\n  \"on\" : {\n    \"click\" : function(event){\n      console.log(event);\n      console.log(event.data.modelId, event.data.id);\n     \tevent.tools.location.href='../../app-oc/index.html#/facility_panel/'+ event.data.modelId + '/' + event.data.id;\n   }\n  },\n  format : [\n    {\n      \"name\": \"创建日期\",\n      \"value\": \"{item:createTime}\",\n      \"type\": \"date\",\n      \"style\": {\n        \"color\" : \"#FFF\",\n        \"background-color\" : \"#3c8dbc\",\n        \"padding\" : \"2px 10px\",\n        \"border-radius\" : \"3px\"\n      }\n    },\n    {\n      \"name\": \"名称\",\n      \"value\": \"{item:label}\",\n      \"type\": \"text\"\n    }\n  ]\n}"
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "LISTONE": {
      "label": "最新上线设备(列表)",
      "type": "listTable",
      "source": "LISTTABLE",
      "advance": {
        "getListTable": "newdevice",
        "expression": "{\n  \"on\" : {\n    \"click\" : function(event){\n      console.log(event);\n      console.log(event.data.modelId, event.data.id);\n     \tevent.tools.location.href='../../app-oc/index.html#/facility_panel/'+ event.data.modelId + '/' + event.data.id;\n   }\n  },\n  format : [\n    {\n      \"name\": \"创建日期\",\n      \"value\": \"{item:createTime}\",\n      \"type\": \"date\",\n      \"style\": {\n        \"color\" : \"#FFF\",\n        \"background-color\" : \"#3c8dbc\",\n        \"padding\" : \"2px 10px\",\n        \"border-radius\" : \"3px\"\n      }\n    },\n    {\n      \"name\": \"名称\",\n      \"value\": \"{item:label}\",\n      \"type\": \"text\"\n    }\n  ]\n}",
        "condition": "[]"
      },
      "$index": [
        0,
        0
      ],
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "LISTTHREE": {
      "label": "告警列表(列表)",
      "type": "listTable",
      "source": "LISTTABLE",
      "advance": {
        "getListTable": "alert",
        "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      var ticketNo = event.data.values.ticketNo;\n      event.tools.location.href='../../app-oc/index.html#/workOrderTimeLine/'+ ticketNo;\n     }\n  },  \n  \"format\" : [\n    {\n      \"name\": \"设备名称\",\n      \"value\": \"{item:devName}\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"告警内容\",\n      \"value\": \"{item:message}\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"紧急度\",\n      \"value\": \"{item:severity}\",\n      \"type\": \"priority\"\n    },\n    {\n      \"name\": \"告警状态\",\n      \"value\": \"{item:state}\",\n      \"type\": \"status\"\n    },{\n      \"name\": \"首次告警时间\",\n      \"value\": \"{item:firstArisingTime}\",\n      \"type\": \"date\"\n    },{\n      \"name\": \"最近告警时间\",\n      \"value\": \"{item:arisingTime}\",\n      \"type\": \"date\"\n    },{\n      \"name\": \"关闭告警时间\",\n      \"value\": \"{item:closeTime}\",\n      \"type\": \"date\"\n    }\n  ]\n}",
        "condition": "[100]"
      },
      "$index": [
        1,
        0
      ],
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "MAPCHARTNAVI": {
      "label": "地图分布3",
      "type": "mapchartNavi",
      "source": "MAPCHARTNAVI",
      "attributes": {
        "textcolor": {
          "label": "标题文字颜色",
          "value": "#333",
          "type": "colorPicker"
        },
        "bgcolor": {
          "applied": false,
          "default": "不添加背景色",
          "label": "背景色",
          "value": "#fff",
          "type": "colorPicker"
        },
        "fill": {
          "applied": true,
          "default": "使用默认颜色",
          "label": "填充颜色",
          "value": "#367fa9",
          "type": "colorPicker"
        },
        "highlight": {
          "applied": true,
          "default": "使用默认颜色",
          "label": "高亮颜色",
          "value": "#367fa9",
          "type": "colorPicker"
        },
        "bordercolor": {
          "applied": true,
          "default": "使用默认颜色",
          "label": "边框颜色",
          "value": "#333",
          "type": "colorPicker"
        },
        "scattercolor": {
          "applied": true,
          "default": "使用默认颜色",
          "label": "散点颜色",
          "value": "#367fa9",
          "type": "colorPicker"
        },
        "scattershadow": {
          "applied": true,
          "default": "使用默认颜色",
          "label": "散点颜色",
          "value": "#367fa9",
          "type": "colorPicker"
        }
      }
    },
    "MAPCHARTDIST": {
      "label": "地图分布4",
      "type": "echart",
      "source": "MAPCHARTDIST",
      "category": [
        "time"
      ],
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "legend": {
          "manual": [
            "第一组"
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  console.log(source);return source.scatterMap.getLegend(formatter);\n})"
        },
        "series": {
          "manual": [
            {
              "name": "第一组",
              "data": [[
                  121.31247,
                  31.956039,
                  31
                ],
                [
                  108.85101,
                  18.998161
                ],
                [
                  116.420509,
                  39.925237
                ],
                [
                  112.447525,
                  34.657368
                ],
                [
                  118.778074,
                  32.057236
                ],
                [
                  115.985867,
                  25.921831
                ],
                [
                  121.158978,
                  31.571904
                ],
                [
                  122.233391,
                  40.668651
                ],
                [
                  113.167978,
                  29.441833
                ],
                [
                  118.935664,
                  33.664059
                ],
                [
                  111.802535,
                  34.839691
                ],
                [
                  116.72865,
                  23.383908
                ],
                [
                  117.013943,
                  39.144457
                ],
                [
                  112.954181,
                  37.14005
                ],
                [
                  121.284426,
                  28.179738
                ],
                [
                  119.81942,
                  30.983353
                ],
                [
                  113.557281,
                  34.779474
                ]
              ]
            }
          ],
          "bind": "(function (source){\n  return source.time.getSeries();\n})"
        }
      },
      "advance": {
        "getfunction": "resourceUIService.getResources",
        "category": "time",
        "expression": "",
        "custom_category": "",
        "condition": [
          301
        ]
      },
      "parameters": {
        "title": "主标题",
        "subtitle": "附标题"
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "800px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "text": "地图",
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "item"
        },
        "grid": [
          {
          }
        ],
        "series": [
          {
            "type": "scatter",
            "name": "设备分布",
            "itemStyle": {
              "normal": {
                "color": "#3b8962",
                "opacity": 1
              }
            },
            "symbol": "path://d='M37.1,24.1L37,23.8l-5-9.2l-5,9.2l-0.2,0.3c-0.4,0.8-0.6,1.6-0.6,2.5c0,3.2,2.6\n/,5.7,5.7,5.7s5.7-2.6,5.7-5.7C37.7,25.8,37.5,24.9,37.1,24.1z M32,30.4c-2.1,0-3.8-1.7-3.8-3.8c0-1.5,0.9-2.7,2.1-3.4c-0.3,0.5-0.5,1.1-0.5,1.8c0,1.8,1.4,3.2,3.2,3.2c1.2,0,2.3-0.7,2.8-1.7c0,0,0,0,0,0.1C35.8,28.7,34.1,30.4,32,30.4z',d='M32,0C14.4,0,0,14.4,0,32s14.4,32,32,32s32-14.4,32-32S49.6,0,32,0z M5.6,35.6C3.6,35.6,2,34,2,32c0-2,1.6-3.6,3.6-3.6c2,0,3.6,1.6,3.6,3.6C9.2,34,7.6,35.6,5.6,35.6z M32,2c2,0,3.6,1.6,3.6,3.6S34,9.2,32,9.2s-3.6-1.6-3.6-3.6S30,2,32,2z M10.8,10.8c1.4-1.4,3.7-1.4,5.1,0c1.4,1.4,1.4,3.7,0,5.1s-3.7,1.4-5.1,0S9.4,12.2,10.8,10.8z M15.9,53.2c-1.4,1.4-3.7,1.4-5.1,0s-1.4-3.7,0-5.1s3.7-1.4,5.1,0S17.3,51.8,15.9,53.2z M32,62c-2,0-3.6-1.6-3.6-3.6c0-2,1.6-3.6,3.6-3.6s3.6,1.6,3.6,3.6C35.6,60.4,34,62,32,62z M32,52.8c-11.5,0-20.8-9.3-20.8-20.8S20.5,11.2,32,11.2S52.8,20.5,52.8,32S43.5,52.8,32,52.8z M53.2,53.2c-1.4,1.4-3.7,1.4-5.1,0c-1.4-1.4-1.4-3.7,0-5.1c1.4-1.4,3.7-1.4,5.1,0S54.6,51.8,53.2,53.2zM53.2,15.9c-1.4,1.4-3.7,1.4-5.1,0c-1.4-1.4-1.4-3.7,0-5.1c1.4-1.4,3.7-1.4,5.1,0C54.6,12.2,54.6,14.5,53.2,15.9z M58.4,35.6c-2,0-3.6-1.6-3.6-3.6c0-2,1.6-3.6,3.6-3.6c2,0,3.6,1.6,3.6,3.6C62,34,60.4,35.6,58.4,35.6z',d='M42.3,43.7c-4.1-0.3-7-1.4-10.2-2.6c-3.1-1.2-6.3-2.5-10.9-3c-2-0.2-4-0.2-6.1-0.1c0.4,1,0.8,2,1.3,2.9c1.5-0.1,3,0,4.5,0.2c4.2,0.5,7.2,1.6,10.1,2.8c3.2,1.3,6.5,2.6,11.1,2.8c0.1,0,0.1,0,0.2,0c1.2-0.9,2.3-1.8,3.3-3C44.4,43.7,43.4,43.7,42.3,43.7z',d='M21,43.8c-0.9-0.1-1.7-0.2-2.6-0.2c1.1,1.3,2.3,2.4,3.7,3.3c3.4,0.5,6.1,1.6,8.7,2.6c0.3,0.1,0.6,0.2,0.9,0.4c0.1,0,0.2,0,0.3,0c2.1,0,4.2-0.4,6.1-1.1c-2.2-0.5-4.2-1.3-6.2-2.1C28.8,45.5,25.6,44.3,21,43.8z',d='M42.5,37.9c-4.1-0.3-7-1.4-10.2-2.6c-3.1-1.2-6.3-2.5-10.9-3c-2.4-0.3-4.9-0.3-7.4,0c0,1,0.1,2,0.3,2.9c2.3-0.2,4.5-0.2,6.7,0c4.2,0.5,7.2,1.6,10.1,2.8c3.2,1.3,6.5,2.6,11.1,2.8c0.6,0,1.2,0.1,1.8,0.1c1.1,0,2.3-0.1,3.4-0.2c0.6-1,1-2.1,1.4-3.2C46.8,37.9,44.7,38.1,42.5,37.9z'",
            "symbolSize": 40,
            "coordinateSystem": "bmap"
          }
        ],
        "bmap": {
          "center": [
            118.114129,
            30.550339
          ],
          "zoom": 6,
          "roam": true,
          "mapStyle": {
            "styleJson": [
              {
                "featureType": "background",
                "elementType": "all",
                "stylers": {
                  "color": "#81b6bf"
                }
              }, {
                "featureType": "land",
                "elementType": "all",
                "stylers": {
                  "color": "#f3f3f3"
                }
              }, {
                "featureType": "road",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "poi",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "label",
                "elementType": "labels.icon",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "boundary",
                "elementType": "geometry",
                "stylers": {
                  "color": "#a2c4c9",
                  "weight": "1.1",
                  "lightness": 1
                }
              }, {
                "featureType": "label",
                "elementType": "labels.text.fill",
                "stylers": {
                  "color": "#666666"
                }
              }, {
                "featureType": "label",
                "elementType": "all",
                "stylers": {
                  "color": "#eeeeee",
                  "visibility": "off"
                }
              }
            ]
          }
        }
      },
      "template": [
        {
          "label": "基础线图",
          "type": "image",
          "url": "images/line/line1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "800px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "地图",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "item"
            },
            "grid": [
              {
              }
            ],
            "series": [
              {
                "type": "scatter",
                "name": "设备分布",
                "itemStyle": {
                  "normal": {
                    "color": "#3b8962",
                    "opacity": 1
                  }
                },
                "symbol": "path://d='M37.1,24.1L37,23.8l-5-9.2l-5,9.2l-0.2,0.3c-0.4,0.8-0.6,1.6-0.6,2.5c0,3.2,2.6\n/,5.7,5.7,5.7s5.7-2.6,5.7-5.7C37.7,25.8,37.5,24.9,37.1,24.1z M32,30.4c-2.1,0-3.8-1.7-3.8-3.8c0-1.5,0.9-2.7,2.1-3.4c-0.3,0.5-0.5,1.1-0.5,1.8c0,1.8,1.4,3.2,3.2,3.2c1.2,0,2.3-0.7,2.8-1.7c0,0,0,0,0,0.1C35.8,28.7,34.1,30.4,32,30.4z',d='M32,0C14.4,0,0,14.4,0,32s14.4,32,32,32s32-14.4,32-32S49.6,0,32,0z M5.6,35.6C3.6,35.6,2,34,2,32c0-2,1.6-3.6,3.6-3.6c2,0,3.6,1.6,3.6,3.6C9.2,34,7.6,35.6,5.6,35.6z M32,2c2,0,3.6,1.6,3.6,3.6S34,9.2,32,9.2s-3.6-1.6-3.6-3.6S30,2,32,2z M10.8,10.8c1.4-1.4,3.7-1.4,5.1,0c1.4,1.4,1.4,3.7,0,5.1s-3.7,1.4-5.1,0S9.4,12.2,10.8,10.8z M15.9,53.2c-1.4,1.4-3.7,1.4-5.1,0s-1.4-3.7,0-5.1s3.7-1.4,5.1,0S17.3,51.8,15.9,53.2z M32,62c-2,0-3.6-1.6-3.6-3.6c0-2,1.6-3.6,3.6-3.6s3.6,1.6,3.6,3.6C35.6,60.4,34,62,32,62z M32,52.8c-11.5,0-20.8-9.3-20.8-20.8S20.5,11.2,32,11.2S52.8,20.5,52.8,32S43.5,52.8,32,52.8z M53.2,53.2c-1.4,1.4-3.7,1.4-5.1,0c-1.4-1.4-1.4-3.7,0-5.1c1.4-1.4,3.7-1.4,5.1,0S54.6,51.8,53.2,53.2zM53.2,15.9c-1.4,1.4-3.7,1.4-5.1,0c-1.4-1.4-1.4-3.7,0-5.1c1.4-1.4,3.7-1.4,5.1,0C54.6,12.2,54.6,14.5,53.2,15.9z M58.4,35.6c-2,0-3.6-1.6-3.6-3.6c0-2,1.6-3.6,3.6-3.6c2,0,3.6,1.6,3.6,3.6C62,34,60.4,35.6,58.4,35.6z',d='M42.3,43.7c-4.1-0.3-7-1.4-10.2-2.6c-3.1-1.2-6.3-2.5-10.9-3c-2-0.2-4-0.2-6.1-0.1c0.4,1,0.8,2,1.3,2.9c1.5-0.1,3,0,4.5,0.2c4.2,0.5,7.2,1.6,10.1,2.8c3.2,1.3,6.5,2.6,11.1,2.8c0.1,0,0.1,0,0.2,0c1.2-0.9,2.3-1.8,3.3-3C44.4,43.7,43.4,43.7,42.3,43.7z',d='M21,43.8c-0.9-0.1-1.7-0.2-2.6-0.2c1.1,1.3,2.3,2.4,3.7,3.3c3.4,0.5,6.1,1.6,8.7,2.6c0.3,0.1,0.6,0.2,0.9,0.4c0.1,0,0.2,0,0.3,0c2.1,0,4.2-0.4,6.1-1.1c-2.2-0.5-4.2-1.3-6.2-2.1C28.8,45.5,25.6,44.3,21,43.8z',d='M42.5,37.9c-4.1-0.3-7-1.4-10.2-2.6c-3.1-1.2-6.3-2.5-10.9-3c-2.4-0.3-4.9-0.3-7.4,0c0,1,0.1,2,0.3,2.9c2.3-0.2,4.5-0.2,6.7,0c4.2,0.5,7.2,1.6,10.1,2.8c3.2,1.3,6.5,2.6,11.1,2.8c0.6,0,1.2,0.1,1.8,0.1c1.1,0,2.3-0.1,3.4-0.2c0.6-1,1-2.1,1.4-3.2C46.8,37.9,44.7,38.1,42.5,37.9z'",
                "symbolSize": 40,
                "coordinateSystem": "bmap"
              }
            ],
            "bmap": {
              "center": [
                118.114129,
                30.550339
              ],
              "zoom": 6,
              "roam": true,
              "mapStyle": {
                "styleJson": [
                  {
                    "featureType": "background",
                    "elementType": "all",
                    "stylers": {
                      "color": "#81b6bf"
                    }
                  }, {
                    "featureType": "land",
                    "elementType": "all",
                    "stylers": {
                      "color": "#f3f3f3"
                    }
                  }, {
                    "featureType": "road",
                    "elementType": "all",
                    "stylers": {
                      "visibility": "off"
                    }
                  }, {
                    "featureType": "poi",
                    "elementType": "all",
                    "stylers": {
                      "visibility": "off"
                    }
                  }, {
                    "featureType": "label",
                    "elementType": "labels.icon",
                    "stylers": {
                      "visibility": "off"
                    }
                  }, {
                    "featureType": "boundary",
                    "elementType": "geometry",
                    "stylers": {
                      "color": "#a2c4c9",
                      "weight": "1.1",
                      "lightness": 1
                    }
                  }, {
                    "featureType": "label",
                    "elementType": "labels.text.fill",
                    "stylers": {
                      "color": "#666666"
                    }
                  }, {
                    "featureType": "label",
                    "elementType": "all",
                    "stylers": {
                      "color": "#eeeeee",
                      "visibility": "off"
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "MULTISELECT": {
      "label": "选择器",
      "type": "multiselect",
      "source": "MULTISELECT",
      "advance": {
        "variable": "",
        "getMultiSelect": "devices",
        "category": "ci",
        "condition": [],
        "expression": "{  \n  'on' : {\n    'change' : function(event){\n      console.log(event);\n    }\n  },\n  'formatter' : {  \n    'label' : 'label', \n    'value' : 'id' \n  } \n}"
      }
    },
    "TIMESELECTOR": {
      "label": "时间选择器",
      "help": "../app-free-style/index.html#/help/index%7Ctimeselector/%5B%220%22,%7B%7D%5D",
      "type": "timeselector",
      "source": "TIMESELECTOR",
      "advance": {
        "expression": ""
      }
    },
    "IMAGE": {
      "label": "图片",
      "type": "image",
      "source": "IMAGE",
      "parameters": {
        "imgSrc": "../images/machine/machine2.png"
      },
      "style": {
        "height": 300,
        "margin": "5px",
        "background-color": "rgba(0,0,0,.1)",
        "border": "1px solid #ccc"
      },
      "advance": {
        "expression": {}
      }
    },
    "DATALIST": {
      "label": "数据列表",
      "type": "datalist",
      "source": "DATALIST",
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timespan": {
          "value": 24,
          "unit": "hour"
        },
        "frequency": {
          "value": 30,
          "unit": "minute"
        },
        "format": "年月日",
        "legend": {
          "manual": [
            "第一组",
            "第二组",
            "第三组"
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getSeries(formatter);\n})"
        },
        "xAxisType": "category",
        "xAxis": {
          "manual": [
            [
              "第一个数据",
              "第二个数据",
              "第三个数据",
              "第四个数据",
              "第五个数据",
              "第六个数据"
            ]
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getxAxis(formatter);\n})"
        },
        "series": {
          "manual": [
            {
              "name": "第一组",
              "data": [
                120,
                85,
                64,
                130,
                152,
                87
              ]
            }, {
              "name": "第二组",
              "data": [
                88,
                120,
                180,
                78,
                232,
                140
              ]
            }, {
              "name": "第三组",
              "data": [
                50,
                80,
                140,
                60,
                70,
                90
              ]
            }
          ],
          "bind": "(function (source){\n   var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getSeries(formatter);\n})"
        }
      },
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "category": "time",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ]
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      }
    },
    "KPILIST": {
      "parameters": {
        "colwidth": 2,
        "itemstyle": "normal",
        "webSocket": true
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelType": 0,
        "resfilltype": "manual",
        "series": {
          "manual": [],
          "bind": "(function (source){\n  return source.getResource();\n})"
        }
      },
      "label": "表单",
      "type": "kpilist",
      "source": "KPILIST",
      "advance": {
        "variable": "",
        "getoption": "selected-kpi",
        "expression": {}
      }
    },
    "TOGGLE": {
      "label": "开关",
      "type": "toggle",
      "source": "TOGGLE",
      "style": {
        "margin": "5px"
      },
      "advance": {
        "expression": {}
      }
    },
    "TAB": {
      "label": "TAB标签",
      "type": "tab",
      "source": "TAB",
      "style": {
        "padding": "5px",
        "min-height": "100px"
      },
      "children": [
        {
          "tabName": "新建标签页",
          "tabId": 0,
          "default": true,
          "display": "block",
          "type": "tabItem",
          "children": []
        }
      ]
    },
    "TABSHOW": {
      "label": "显示隐藏标签",
      "type": "tabshow",
      "source": "TABSHOW",
      "style": {
        "padding": "5px",
        "min-height": "100px"
      },
      "children": [
        {
          "tabName": "新建标签页",
          "tabId": 0,
          "default": true,
          "display": "block",
          "type": "tabShowItem",
          "children": []
        }
      ]
    },
    "TREEMENU": {
      "label": "数结构目录",
      "type": "treemenu",
      "source": "TREEMENU",
      "advance": {
        "expression": "var expressiont = {\n  on : {\n    init : function(event){\n      var models = {}\n      var target = event.target;\n      target.getDevicesByCondition({},function(devices){\n        var treeData = {\n          label : \"root\",\n          children :devices.map(function(elem){\n            return {\n              label : elem.label,\n              modelId : elem.modelId,\n              domains : elem.domains,\n              children : [],\n              on : {\n                \"click\" : function(event){\n                  var getKpis = function(kpis){\n                    kpis = kpis.map(function(kpi){\n                      kpi.checkbox = {\n                        value : false\n                      }\n                      return kpi\n                    })\n                    node.addChildren(kpis);\n                    node.update();\n                    node.open();\n                  }\n                  if(!models[elem.modelId]){\n                    var node = event.node;\n                    event.preventdefault();\n                    target.getKpisByModelId(elem.modelId, function(kpis){\n                      models[elem.modelId] = kpis;\n                      getKpis(kpis);\n                    })\n                  }\n\n                }\n              }\n            }\n          })\n        }\n        var treeDataMap = target.treeDataMap(treeData);\n        target.render(treeDataMap);\n        treeDataMap.traverse(function(node){\n          if(node.level > 0){\n            node.close();\n          } else {\n            node.open();\n          }\n        })\n      })\n\n    }\n  }\n}"
      },
      "style": {
        "padding": "5px",
        "min-height": "100px"
      }
    },
    "EXCEL": {
      "label": "表格",
      "type": "excel",
      "source": "EXCEL",
      "advance": {
        "variable": "",
        "expression": {}
      },
      "style": {
        "margin": "5px"
      },
      "parameters": {
        "excelData": [
          [
            "标题1",
            "标题2",
            "标题3",
            "标题4",
            "标题5"
          ],
          [
            "12",
            "14",
            "10",
            "51",
            "5"
          ],
          [
            "9",
            "53",
            "14",
            "12",
            "16"
          ],
          [
            "16",
            "3",
            "4",
            "7",
            "12"
          ]
        ]
      }
    },
    "SLICK": {
      "label": "轮播图片",
      "type": "slick",
      "source": "SLICK",
      "advance": {
        "expression": "{\n  \"on\" : {\n    \"init\" : function(event){\n      var temps = [];\n      for(var i=0; i<10; i++){\n        temps.push({\n          label : \"指标\" + i,\n          value : parseInt(Math.random() * 100),\n          icon : \"proudsmart ps-co2\",\n          status : parseInt(Math.random() * 4)\n        })\n      }\n      event.target.render(temps);\n    }\n  },\n  \"config\" : {\n    slidesToShow : 6,\n    slidesToScroll : 6\n  },\n  \"render\" : function(event){\n    var wrap = $(\"<div></div>\")\n    var p = $(\"<p></p>\");\n    var p2 = $(\"<p></p>\");\n    var dom = $(\"<div></div>\");\n    var i = $(\"<i></i>\");\n    p.css(\"text-align\", \"center\");\n    p2.css(\"text-align\", \"center\");\n    p.text(event.item.value);\n    p2.text(event.item.label);\n    i.addClass(event.item.icon);\n    i.css(\"font-size\", \"48px\");\n    dom.addClass(\"btn btn-primary\");\n    var status = event.item.status;\n    dom.css(\"background-color\", event.target.getAlertColor(status));\n    dom.css(\"border\", \"0\");\n    dom.css(\"width\", \"74px\");\n    dom.css(\"height\", \"67px\");\n    dom.css(\"margin\", \"5px auto\");\n    dom.css(\"display\", \"block\");\n    dom.append(i);\n    wrap.append(p);\n    wrap.append(dom);\n    wrap.append(p2);\n    return wrap;\n  }\n}"
      },
      "style": {
        "margin": "5px"
      },
      "template": [
        {
          "label": "指标状态轮播",
          "advance": {
            "expression": "{\n  \"on\" : {\n    \"init\" : function(event){\n      var temps = [];\n      for(var i=0; i<10; i++){\n        temps.push({\n          label : \"指标\" + i,\n          value : parseInt(Math.random() * 100),\n          icon : \"proudsmart ps-co2\",\n          status : parseInt(Math.random() * 4)\n        })\n      }\n      event.target.render(temps);\n    }\n  },\n  \"config\" : {\n    slidesToShow : 6,\n    slidesToScroll : 6\n  },\n  \"render\" : function(event){\n    var wrap = $(\"<div></div>\")\n    var p = $(\"<p></p>\");\n    var p2 = $(\"<p></p>\");\n    var dom = $(\"<div></div>\");\n    var i = $(\"<i></i>\");\n    p.css(\"text-align\", \"center\");\n    p2.css(\"text-align\", \"center\");\n    p.text(event.item.value);\n    p2.text(event.item.label);\n    i.addClass(event.item.icon);\n    i.css(\"font-size\", \"48px\");\n    dom.addClass(\"btn btn-primary\");\n    var status = event.item.status;\n    dom.css(\"background-color\", event.target.getAlertColor(status));\n    dom.css(\"border\", \"0\");\n    dom.css(\"width\", \"74px\");\n    dom.css(\"height\", \"67px\");\n    dom.css(\"margin\", \"5px auto\");\n    dom.css(\"display\", \"block\");\n    dom.append(i);\n    wrap.append(p);\n    wrap.append(dom);\n    wrap.append(p2);\n    return wrap;\n  }\n}"
          },
          "style": {
            "margin": "5px"
          },
          "url": "images/map/map1.png"
        }
      ]
    },
    "BLOCK": {
      "label": "控制板1",
      "type": "block",
      "source": "BLOCK",
      "style": {
        "padding": "5px",
        "margin": "5px"
      },
      "advance": {
        "expression": {}
      },
      "children": [
        {
          "type": "column",
          "col": 12,
          "children": []
        }
      ],
      "template": [
        {
          "type": "css",
          "style": {
            "padding": "10px",
            "margin": "5px",
            "border": "0",
            "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
            "background-color": "rgba(250,250,250,0)"
          }
        }, {
          "type": "css",
          "style": {
            "padding": "5px",
            "margin": "5px",
            "border": "1px solid #ccc",
            "background-color": "#fff",
            "border-top": "0"
          }
        }, {
          "type": "css",
          "style": {
            "margin": "5px",
            "padding": "5px",
            "background-color": "#efdcaf",
            "border": "1px solid #c2ad7a"
          }
        }, {
          "type": "css",
          "style": {
            "margin": "5px",
            "padding": "5px",
            "background-color": "#f0c0a4",
            "border": "1px solid #e5671b"
          }
        }, {
          "type": "css",
          "style": {
            "margin": "5px",
            "padding": "5px",
            "background-color": "#ffb3b3",
            "border": "1px solid #db2222"
          }
        }
      ]
    },
    "BOX": {
      "label": "控制板2",
      "type": "box",
      "class": "box box-info",
      "source": "BOX",
      "parameters": {
        "title": "标题文字"
      },
      "style": {
        "font-size": "12px",
        "font-weight": "bold",
        "text-align": "left",
        "margin": "5px"
      },
      "children": [
        {
          "class": "box-body",
          "type": "box-body",
          "children": [
            {
              "type": "column",
              "col": 12,
              "children": []
            }
          ]
        }, {
          "class": "box-footer",
          "type": "box-footer",
          "children": [
            {
              "type": "column",
              "col": 12,
              "children": []
            }
          ]
        }
      ]
    },
    "NAVITREE": {
      "label": "数结构导航",
      "type": "navitree",
      "source": "NAVITREE",
      "advance": {
        "expression": ""
      }
    },
    "REPEATER": {
      "label": "重复单元",
      "type": "repeater",
      "source": "REPEATER",
      "parameters": {
        "col": "列数"
      },
      "advance": {
        "getListTable": "allprojects",
        "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            var list = [{\n                label : \"第一个指标\",\n                value : 20,\n            },{\n                label : \"第二个指标\",\n                value : 75,\n            }];\n            target.render(list);\n        }\n    }\n}"
      },
      "children": [
        {
          "type": "column",
          "children": [
            {
              "label": "百分比状态条（控件组）",
              "type": "ctrlgroup",
              "source": "PROGRESS",
              "advance": {
                "expression": "expression = {\n  width : \"100%\",\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var repeatData = target.$repeatData;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : repeatData.label,\n          style : {\n            \"text-align\" : \"left\"\n          },\n          class : \"col-md-6\"\n        },{\n          type : \"label\",\n          value : repeatData.value + \"%\",\n          style : {\n            \"text-align\" : \"right\"\n          },\n          class : \"col-md-6\"\n        }],[{\n          type : \"progressbar\",\n          value : repeatData.value,\n          class : \"col-md-12\",\n          colSpan : 2\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
              },
              "help": "../pdf/ctrlgroup.pdf",
              "id": "TFXSQTmEnJackz2FQzBD7YXiCRTzrhPB",
              "template": [
                {
                  "label": "百分比(两侧数字)",
                  "type": "image",
                  "url": "images/line/line1.png",
                  "advance": {
                    "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : \"第一个指标\",\n          style : {\n            \"text-align\" : \"center\",\n            width : \"100px\"\n          }\n        },{\n          type : \"progressbar\",\n          value : 50,\n          class : \"col-md-8\"\n        },{\n          type : \"label\",\n          value : \"50%\",\n          class : \"col-md-2\"\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                  }
                }, {
                  "label": "百分比（顶部数字）",
                  "type": "image",
                  "url": "images/line/line1.png",
                  "advance": {
                    "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : \"第一个指标\",\n          style : {\n            \"text-align\" : \"left\"\n          },\n          class : \"col-md-6\"\n        },{\n          type : \"label\",\n          value : \"50%\",\n          style : {\n            \"text-align\" : \"right\"\n          },\n          class : \"col-md-6\"\n        }],[{\n          type : \"progressbar\",\n          value : 50,\n          class : \"col-md-12\",\n          colSpan : 2\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                  }
                }
              ]
            }
          ],
          "id": "bNCe3BfSF8ji5BHmisM3wCDcWYkf4h5w",
          "col": null
        }
      ],
      "id": "KJ62JAxea8YA4hY8hPFrZ3sWtcbJYjXN"
    },
    "TEXT": {
      "label": "文字",
      "type": "text",
      "source": "TEXT",
      "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
      "style": {
        "margin": "5px",
        "padding": "0",
        "font-size": "12px",
        "font-weight": "bold"
      },
      "advance": {
        "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"新建文字\")\n        }\n    }\n}"
      },
      "template": [
        {
          "type": "text",
          "style": {
            "margin": "auto",
            "padding": "0",
            "font-size": "10px",
            "font-weight": "bold",
            "color": "#333"
          }
        }, {
          "type": "text",
          "style": {
            "margin": "auto",
            "padding": "0",
            "font-size": "16px",
            "font-weight": "bold",
            "color": "#666",
            "text-align": "center"
          }
        }, {
          "type": "text",
          "style": {
            "width": "60px",
            "height": "60px",
            "margin": "auto",
            "padding": "0",
            "font-size": "12px",
            "line-height": "60px",
            "font-weight": "bold",
            "color": "#fff",
            "text-align": "center",
            "border-radius": "50%",
            "background-color": "#3c8dbc"
          }
        }, {
          "type": "text",
          "style": {
            "width": "140px",
            "height": "60px",
            "margin": "auto",
            "padding": "0",
            "font-size": "12px",
            "line-height": "60px",
            "font-weight": "bold",
            "color": "#fff",
            "text-align": "center",
            "border-radius": "4px",
            "background-color": "#3c8dbc"
          }
        }, {
          "type": "text",
          "style": {
            "width": "140px",
            "height": "60px",
            "margin": "auto",
            "padding": "0",
            "font-size": "12px",
            "line-height": "60px",
            "font-weight": "bold",
            "color": "#444",
            "text-align": "center",
            "border-radius": "4px",
            "background-color": "#eee"
          }
        }, {
          "type": "text",
          "style": {
            "margin": "auto",
            "padding": "5px",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "#444",
            "text-align": "center",
            "border-radius": "0px",
            "background-color": "#eee"
          }
        }
      ]
    },
    "VIDEO": {
      "label": "视频嵌入",
      "type": "video",
      "source": "VIDEO",
      "parameters": {
        "autostart": true,
        "videotype": "video",
        "url": "http://hzhls01.ys7.com:7885/hcnp/472637161_1_1_1_0_www.ys7.com_6500.m3u8?bfb21d8f3dc74745a97a2d85cdccbbd9",
        "username": "",
        "password": ""
      },
      "style": {
        "margin": "5px",
        "padding": "0",
        "height": "200px",
        "font-size": "12px",
        "font-weight": "bold"
      },
      "advance": {
        "geturl": "none",
        "expression": {}
      }
    },
    "ACEEDITOR": {
      "label": "代码编辑器",
      "type": "aceeditor",
      "source": "ACEEDITOR",
      "style": {
        "margin": "5px",
        "padding": "0",
        "height": "300px"
      },
      "advance": {
        "expression": {}
      }
    },
    "LIST": {
      "label": "列表",
      "type": "list",
      "source": "LIST",
      "data": {
        "applied": false,
        "model": null,
        "modelType": 0,
        "resfilltype": "manual",
        "resource": [
          null
        ],
        "series": {
          "manual": [],
          "bind": "(function (source){\n  return source.getLegend();\n})"
        }
      },
      "style": {
        "margin": "5px",
        "padding": "0",
        "font-size": "12px"
      },
      "advance": {
        "variable": "",
        "getfunction": "kpiDataService.getValueList",
        "category": "ci",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": ""
      }
    },
    "INPUTBOX": {
      "label": "输入框",
      "type": "inputBox",
      "source": "INPUTBOX",
      "parameters": {
        "title": ""
      },
      "advance": {
        "variable": "",
        "expression": "",
        "condition": ""
      },
      "style": {
        "margin": "5px"
      }
    },
    "CTRLGROUP": {
      "label": "控件组",
      "type": "ctrlgroup",
      "source": "CTRLGROUP",
      "parameters": {
        "cgroupstyle": "table"
      },
      "advance": {
        "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"button\",\n          value : \"按钮\",\n          icon : \"glyphicon glyphicon-search\",\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          on : {\n            click : function(elem){\n              target.console(elem);\n            }\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      },
      "help": "../pdf/ctrlgroup.pdf",
      "template": [
        {
          "label": "测点选择器",
          "type": "ctrlgroup",
          "source": "CTRLGROUP",
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var sensors = [];\n      var render = function(){\n          var ctrlGroups = [\n           [{\n              type : \"button\",\n              value : \"测点选择器[已选择\" + sensors.length + \"个测点]\", \n              icon : \"glyphicon glyphicon-dashboard\",\n              btnclass : \"btn btn-default\",\n              class : \"col-md-12\",\n              on : {\n                click : function(elem){\n                  target.createSystemPopupByJsonName(\"nodeciSelector\", {\n                      title : \"测点选择器\",\n                      message : \"\",\n                      on : {\n                          submit : function(data){\n                              sensors = data;\n                              console.log(sensors);\n                              render();\n                          }\n                      }\n                  },sensors)\n                }\n              }\n            }]\n          ];\n          event.target.render(ctrlGroups);\n      }\n      render();\n    }\n  }\n}"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "parameters": {},
          "url": "images/map/map1.png"
        }, {
          "label": "普通按钮",
          "type": "ctrlgroup",
          "source": "CTRLGROUP",
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"button\",\n          value : \"按钮\",\n          icon : \"glyphicon glyphicon-search\",\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          on : {\n            click : function(elem){\n              target.console(elem);\n            }\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "parameters": {},
          "url": "images/map/map1.png"
        }, {
          "label": "页面导航",
          "type": "ctrlgroup",
          "source": "CTRLGROUP",
          "advance": {
            "expression": "expression = {\n    width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var pages = target.getPages();\n      var ctrlGroups = [];\n      var tr = [];\n      ctrlGroups.push(tr)\n      var createPage = function(i, page){\n          return {\n              type : \"label\",\n              linkage : true,\n              value : page.tabLabel || \"标签\",\n              on : {\n                  click : function(event){\n                      target.moveTo(page.path);\n                  }\n              }\n          }\n      }\n      for(var i in pages){\n          tr.push(createPage(i, pages[i]));\n          if(i < pages.length - 1){\n             tr.push({\n                type : \"label\",\n                value : \" > \"\n             }); \n          };\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "parameters": {},
          "url": "images/map/map1.png"
        }, {
          "label": "设备，项目，客户下拉",
          "type": "ctrlgroup",
          "source": "CTRLGROUP",
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n\n      var target = event.target;\n      var global = event.global;\n      event.target.getDomainsByFilter({\n        modelIds : [301,302]\n      }, function(obj){\n        var projects = obj.filter(function(elem){\n          return elem.modelId == 302;\n        })\n        var customers = obj.filter(function(elem){\n          return elem.modelId == 301;\n        })\n        event.target.getDevicesByCondition({}, function(devices){\n          var ctrlGroups = [\n            [{\n              type : \"label\",\n              value : \"设备下拉列表\"\n            },{\n              type : \"select\",\n              value : \"\",\n              on : {\n                change : function(elem){\n                  console.log(elem);\n                }\n              },\n              options : devices,\n              format : {\n                \"id\" : \"id\",\n                \"label\" : \"label\"\n              }\n            }],[{\n              type : \"label\",\n              value : \"客户下拉列表\"\n            },{\n              type : \"select\",\n              value : \"\",\n              on : {\n                change : function(elem){\n                  console.log(elem);\n                }\n              },\n              options : customers,\n              format : {\n                \"id\" : \"id\",\n                \"label\" : \"label\"\n              }\n            }],[{\n              type : \"label\",\n              value : \"项目下拉列表1\"\n            },{\n              type : \"select\",\n              value : \"\",\n              on : {\n                change : function(elem){\n                  console.log(elem);\n                }\n              },\n              options : projects,\n              format : {\n                \"id\" : \"id\",\n                \"label\" : \"label\"\n              }\n            }],[{\n              type : \"label\",\n              value : \"\"\n            },{\n              type : \"button\",\n              value : \"按钮\",\n              icon : \"glyphicon glyphicon-search\",\n              class : \"btn-primary\",\n              on : {\n                click : function(elem){\n                  console.log(elem);\n                }\n              }\n            }]\n          ];\n          event.target.render(ctrlGroups);\n        });\n      });\n    }\n  }\n}"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "parameters": {},
          "url": "images/map/map1.png"
        }, {
          "label": "竖排组件功能组件",
          "type": "ctrlgroup",
          "source": "CTRLGROUP",
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : \"普通输入框\"\n        },{\n          type : \"input\",\n          value : \"普通输入框\",\n          on : {\n            change : function(elem){\n              console.log(elem);\n            }\n          }\n        }],[{\n          type : \"label\",\n          value : \"普通下拉列表\"\n        },{\n          type : \"select\",\n          value : \"普通下拉列表\",\n          on : {\n            change : function(elem){\n              console.log(elem);\n            }\n          },\n          options : [{\n            id : 0,\n            label : \"项目1\"\n          },{\n            id : 1,\n            label : \"项目名称2\"\n          },{\n            id : 2,\n            label : \"名称3\"\n          }],\n          format : {\n            \"id\" : \"id\",\n            \"label\" : \"label\"\n          }\n        }],[{\n          type : \"label\",\n          value : \"日期选择器\"\n        },{\n          type : \"datePicker\",\n          value : \"普通输入框\",\n          on : {\n            change : function(elem){\n              console.log(elem);\n            }\n          }\n        }],[{\n          type : \"label\",\n          value : \"输入选择器\"\n        },{\n          type : \"autoComplete\",\n          value : \"search\",\n          options : [{\n            id : 0,\n            label : \"项目1\"\n          },{\n            id : 1,\n            label : \"项目名称2\"\n          },{\n            id : 2,\n            label : \"名称3\"\n          }],\n          on : {\n            change : function(elem){\n              console.log(elem);\n            }\n          },\n          format : {\n            \"id\" : \"id\",\n            \"label\" : \"label\",\n            \"searchkey\" : \"label\"\n          }\n        }],[{\n          type : \"label\",\n          value : \"树状选择器\"\n        },{\n          type : \"dropdowntree\",\n          value : \"search\",\n          options : {\n            \"children\" : [{\n              id : 0,\n              label : \"根节点\",\n              children : [{\n                id : 1,\n                label : \"子节点1\"\n              },{\n                id : 2,\n                label : \"子节点2\"\n              }]\n            }]\n          },\n          on : {\n            change : function(elem){\n              console.log(elem)\n            }\n          },\n          format : {\n            \"children\" : \"children\"\n          }\n        }],[{\n          type : \"label\",\n          value : \"\"\n        },{\n          type : \"button\",\n          value : \"按钮\",\n          icon : \"glyphicon glyphicon-search\",\n          class : \"btn-primary\",\n          on : {\n            click : function(elem){\n              console.log(elem);\n            }\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "项目，管理域,提交按钮",
          "type": "ctrlgroup",
          "source": "CTRLGROUP",
          "advance": {
            "expression": "{\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      event.target.queryDomainTree(function(domaintree){\n        event.target.getDomainsByFilter({\n          modelIds : [302]\n        }, function(projects){\n          event.target.setValue(\"projectName\", \"\");\n          event.target.setValue(\"domainPath\", \"\")\n          var ctrlGroups = [\n            [{\n              type : \"label\",\n              value : \"项目名称\"\n            },{\n              type : \"autoComplete\",\n              value : \"search\",\n              options : projects,\n              on : {\n                change : function(elem){\n                  var projectName = elem.value;\n                  target.setValue(\"projectName\", projectName);\n                }\n              },\n              format : {\n                \"id\" : \"id\",\n                \"label\" : \"label\",\n                \"searchkey\" : \"label\"\n              }\n            }],[{\n              type : \"label\",\n              value : \"管理域\"\n            },{\n              type : \"dropdowntree\",\n              value : \"search\",\n              options : {\n                \"domainInfos\" : domaintree\n              },\n              on : {\n                change : function(elem){\n                  var domain = elem.value;\n                  target.setValue(\"domainPath\", domain.domainPath);\n                }\n              },\n              format : {\n                \"children\" : \"domainInfos\"\n              }\n            }],[{\n              type : \"label\",\n              value : \"\"\n            },{\n              type : \"button\",\n              value : \"搜索\",\n              icon : \"glyphicon glyphicon-search\",\n              class : \"btn-primary\",\n              on : {\n                click : function(elem){\n                  global.fire(\"refresh\")\n                }\n              }\n            }]\n          ];\n          event.target.render(ctrlGroups);\n        });\n      });\n    }\n  }\n}"
          },
          "style": {
            "margin": "5px",
            "font-size": "12px",
            "width": "100%"
          },
          "url": "images/map/map1.png"
        }
      ]
    },
    "LISTTABLE": {
      "label": "列表",
      "type": "listTable",
      "source": "LISTTABLE",
      "advance": {
        "getListTable": "newdevice",
        "variable": "",
        "getfunction": "",
        "expression": "",
        "condition": ""
      },
      "style": {
        "margin": "5px",
        "font-size": "12px"
      }
    },
    "PROJECTTOP": {
      "label": "组态视图嵌入",
      "type": "topo",
      "source": "PROJECTTOP",
      "advance": {
        "variable": "",
        "expression": "{\n  init : function(event){\n    var callback = function(project){\n      if(project){\n        event.self.setResource([project]);\n        event.self.render();\n      }\n    }\n    event.self.getCurrentProject(callback)\n  },\n  click : function(event){\n    event.window.location.href='../../app-oc/index.html#/resource_type';\n  }\n}"
      },
      "style": {
        "margin": "5px",
        "height": "400px",
        "font-size": "12px",
        "background-size": "contain",
        "background-position": "center",
        "background-repeat": "no-repeat"
      }
    },
    "TOPO": {
      "label": "组态视图",
      "type": "topo",
      "source": "TOPO",
      "advance": {
        "variable": "",
        "expression": "{\n\t\"on\" : {\n    \"click\" : function(event){\n      console.log(event);\n    }\n    }\n}"
      },
      "style": {
        "margin": "5px",
        "height": "400px",
        "font-size": "12px",
        "background-size": "contain",
        "background-position": "center",
        "background-repeat": "no-repeat"
      }
    },
    "BAIDUMAP": {
      "label": "地图展示",
      "type": "baidumap",
      "source": "BAIDUMAP",
      "style": {
        "padding": "0",
        "font-size": "12px",
        "height": "calc(100vh - 200px)",
        "margin": "5px"
      },
      "parameters": {
        "mapStyle": "[]"
      },
      "help": "../pdf/baidumap.pdf",
      "advance": {
        "expression": "{\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getCurrentProjects(function(projects){\n        event.target.queryDomainTree(function(domains){\n          var markers = [];\n          var loopProject = function(project){\n            return {\n              id : project.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : project.values.longitude,\n              lat : project.values.latitude,\n              infoWindow : {\n                html : project.label\n              },\n              rotation : 0,\n              minZoom : 7,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  console.log(project);\n                }\n              }\n            }\n          };\n          var loopDomain = function(domain){\n            return {\n              id : domain.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : domain.values.longitude,\n              lat : domain.values.latitude,\n              infoWindow : {\n                html : domain.label\n              },\n              rotation : 0,\n              minZoom : 0,\n              maxZoom : 7,\n              on : {\n                click : function(){\n                  target.setCenter([domain.values.longitude,domain.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          }\n          for(var i in domains[0].domainInfos){\n            markers.push(loopDomain(domains[0].domainInfos[i]));\n          };\n          for(var i in projects){\n            markers.push(loopProject(projects[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        });\n      })\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}",
        "stylejson": {}
      },
      "template": [
        {
          "label": "只显示管理域",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.queryDomainTree(function(domains){\n          var markers = [];\n          var loopDomain = function(domain){\n            return {\n              id : domain.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : domain.values.longitude,\n              lat : domain.values.latitude,\n              infoWindow : {\n                html : domain.label\n              },\n              rotation : 0,\n              minZoom : 0,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  target.setCenter([domain.values.longitude,domain.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          }\n          for(var i in domains[0].domainInfos){\n            markers.push(loopDomain(domains[0].domainInfos[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        });\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "只显示设备",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "{\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getDevicesByCondition({}, function(devices){\n        var markers = [];\n        var loopDevice = function(device){\n          return {\n            id : device.id,\n            icon : {\n              normal : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 30,\n                height : 30\n              },\n              highlight : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 50,\n                height : 50\n              }\n            },\n            data : device,\n            type : \"device\",\n            lng : device.values.longitude,\n            lat : device.values.latitude,\n            infoWindow : {\n              html : device.label\n            },\n            rotation : 0,\n            minZoom : 0,\n            maxZoom : 19,\n            on : {\n              click : function(){\n                target.navigateTo(\"panel\", {\n                  modelId : device.modelId,\n                  resourceId : device.id\n                });\n              }\n            }\n          }\n        };\n        for(var i in devices){\n          markers.push(loopDevice(devices[i]));\n        };\n        event.target.render({\n          center : [116.404, 33.915],\n          markers : markers,\n          zoom : 6\n        });\n      });\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "只显示项目",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getResourceByModelId(302, function(projects){\n        var markers = [];\n        var loopProject = function(project){\n          return {\n            id : project.id,\n            icon : {\n              normal : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 30,\n                height : 30\n              },\n              highlight : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 50,\n                height : 50\n              }\n            },\n            data : project,\n            type : \"project\",\n            lng : project.values.longitude,\n            lat : project.values.latitude,\n            infoWindow : {\n              html : project.label\n            },\n            rotation : 0,\n            minZoom : 1,\n            maxZoom : 19,\n            on : {\n              click : function(){\n                target.navigateTo(\"panel\", {\n                  resourceId : project.id\n                });\n              }\n            }\n          }\n        };\n        for(var i in projects){\n          markers.push(loopProject(projects[i]));\n        };\n        event.target.render({\n          center : [116.404, 33.915],\n          markers : markers,\n          zoom : 6\n        });\n      });\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "只显示客户",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getResourceByModelId(301, function(customers){\n        var markers = [];\n        var loopCustomer = function(customer){\n          return {\n            id : customer.id,\n            icon : {\n              normal : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 30,\n                height : 30\n              },\n              highlight : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 50,\n                height : 50\n              }\n            },\n            data : customer,\n            type : \"customer\",\n            lng : customer.values.longitude,\n            lat : customer.values.latitude,\n            infoWindow : {\n              html : customer.label\n            },\n            rotation : 0,\n            minZoom : 1,\n            maxZoom : 19,\n            on : {\n              click : function(){\n                target.navigateTo(\"panel\", {\n                  resourceId : customer.id\n                });\n              }\n            }\n          }\n        };\n        for(var i in customers){\n          markers.push(loopCustomer(customers[i]));\n        };\n        event.target.render({\n          center : [116.404, 33.915],\n          markers : markers,\n          zoom : 6\n        });\n      });\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "管理域，项目两层显示",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "{\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getCurrentProjects(function(projects){\n        event.target.queryDomainTree(function(domains){\n          var markers = [];\n          var loopProject = function(project){\n            return {\n              id : project.id,\n              type : \"project\",\n              data : project,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : project.values.longitude,\n              lat : project.values.latitude,\n              infoWindow : {\n                html : project.label\n              },\n              rotation : 0,\n              minZoom : 7,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  console.log(project);\n                }\n              }\n            }\n          };\n          var loopDomain = function(domain){\n            return {\n              id : domain.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              data : domain,\n              lng : domain.values.longitude,\n              lat : domain.values.latitude,\n              infoWindow : {\n                html : domain.label\n              },\n              rotation : 0,\n              minZoom : 0,\n              maxZoom : 7,\n              on : {\n                click : function(){\n                  target.setCenter([domain.values.longitude,domain.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          }\n          for(var i in domains[0].domainInfos){\n            markers.push(loopDomain(domains[0].domainInfos[i]));\n          };\n          for(var i in projects){\n            markers.push(loopProject(projects[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        });\n      })\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "管理域，客户两层显示",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "{\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getCurrentProjects(function(projects){\n        event.target.queryDomainTree(function(domains){\n          var markers = [];\n          var loopProject = function(project){\n            return {\n              id : project.id,\n              type : \"project\",\n              data : project,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : project.values.longitude,\n              lat : project.values.latitude,\n              infoWindow : {\n                html : project.label\n              },\n              rotation : 0,\n              minZoom : 7,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  console.log(project);\n                }\n              }\n            }\n          };\n          var loopDomain = function(domain){\n            return {\n              id : domain.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              data : domain,\n              lng : domain.values.longitude,\n              lat : domain.values.latitude,\n              infoWindow : {\n                html : domain.label\n              },\n              rotation : 0,\n              minZoom : 0,\n              maxZoom : 7,\n              on : {\n                click : function(){\n                  target.setCenter([domain.values.longitude,domain.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          }\n          for(var i in domains[0].domainInfos){\n            markers.push(loopDomain(domains[0].domainInfos[i]));\n          };\n          for(var i in projects){\n            markers.push(loopProject(projects[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        });\n      })\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "管理域，设备两层显示",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getDevicesByCondition({}, function(devices){\n        event.target.queryDomainTree(function(domains){\n          var markers = [];\n          var loopDevice = function(device){\n            return {\n              id : device.id,\n              type : \"device\",\n              data : device,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : device.values.longitude,\n              lat : device.values.latitude,\n              infoWindow : {\n                html : device.label\n              },\n              rotation : 0,\n              minZoom : 7,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  console.log(device);\n                }\n              }\n            }\n          };\n          var loopDomain = function(domain){\n            return {\n              id : domain.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              data : domain,\n              lng : domain.values.longitude,\n              lat : domain.values.latitude,\n              infoWindow : {\n                html : domain.label\n              },\n              rotation : 0,\n              minZoom : 0,\n              maxZoom : 7,\n              on : {\n                click : function(){\n                  target.setCenter([domain.values.longitude,domain.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          }\n          for(var i in domains[0].domainInfos){\n            markers.push(loopDomain(domains[0].domainInfos[i]));\n          };\n          for(var i in devices){\n            markers.push(loopDevice(devices[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        });\n      })\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "客户，项目两层显示",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      event.target.getDomainsByFilter({\n        modelIds : [301, 302]\n      }, function(data){\n        var projects = data.filter(function(elem){\n          return elem.modelId == 302;\n        })\n        var customers = data.filter(function(elem){\n          return elem.modelId == 301;\n        })\n        var markers = [];\n        var loopProject = function(project){\n          return {\n            id : project.id,\n            type : \"device\",\n            data : project,\n            icon : {\n              normal : {\n                url : \"../images/ouke/oukeIcon2.svg\",\n                width : 30,\n                height : 30\n              },\n              highlight : {\n                url : \"../images/ouke/oukeIcon2.svg\",\n                width : 50,\n                height : 50\n              }\n            },\n            lng : project.values.longitude,\n            lat : project.values.latitude,\n            infoWindow : {\n              html : project.label\n            },\n            rotation : 0,\n            minZoom : 7,\n            maxZoom : 19,\n            on : {\n              click : function(){\n                console.log(project);\n              }\n            }\n          }\n        };\n        var loopCustomer = function(customer){\n          return {\n            id : customer.id,\n            icon : {\n              normal : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 30,\n                height : 30\n              },\n              highlight : {\n                url : \"../images/ouke/oukeIcon1.svg\",\n                width : 50,\n                height : 50\n              }\n            },\n            data : customer,\n            lng : customer.values.longitude,\n            lat : customer.values.latitude,\n            infoWindow : {\n              html : customer.label\n            },\n            rotation : 0,\n            minZoom : 0,\n            maxZoom : 7,\n            on : {\n              click : function(){\n                target.setCenter([customer.values.longitude,customer.values.latitude]);\n                target.setZoom(8);\n              }\n            }\n          }\n        }\n        for(var i in customers){\n          markers.push(loopCustomer(customers[0]));\n        };\n        for(var i in projects){\n          markers.push(loopProject(projects[i]));\n        };\n        event.target.render({\n          center : [116.404, 33.915],\n          markers : markers,\n          zoom : 6\n        });\n      })\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "项目，设备两层显示",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      target.getDevicesByCondition({}, function(devices){\n        event.target.getDomainsByFilter({\n          modelIds : [302]\n        }, function(projects){\n            var loopDevice = function(device){\n            return {\n              id : device.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              data : device,\n              lng : device.values.longitude,\n              lat : device.values.latitude,\n              infoWindow : {\n                html : device.label\n              },\n              rotation : 0,\n              minZoom : 7,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  console.log(\"click\")\n                }\n              }\n            }\n          }\n          var loopProject = function(project){\n            return {\n              id : project.id,\n              type : \"device\",\n              data : project,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : project.values.longitude,\n              lat : project.values.latitude,\n              infoWindow : {\n                html : project.label\n              },\n              rotation : 0,\n              minZoom : 1,\n              maxZoom : 7,\n              on : {\n                click : function(){\n                  target.setCenter([project.values.longitude,project.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          };\n          for(var i in devices){\n            markers.push(loopDevice(devices[i]));\n          };\n          for(var i in projects){\n            markers.push(loopProject(projects[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        })\n      });\n    },\n    highlight : function(event){\n      var project = event.params.project;\n      event.target.setCenter([project.values.longitude,project.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(project.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }, {
          "label": "客户，设备两层显示",
          "style": {
            "padding": "0",
            "font-size": "12px",
            "height": "calc(100vh - 200px)",
            "margin": "5px"
          },
          "advance": {
            "expression": "expression = {\n  on : {\n    init : function(event){\n      var markers = [];\n      var target = event.target;\n      target.getDevicesByCondition({}, function(devices){\n        event.target.getDomainsByFilter({\n          modelIds : [301]\n        }, function(customers){\n            var loopDevice = function(device){\n            return {\n              id : device.id,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon2.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              data : device,\n              lng : device.values.longitude,\n              lat : device.values.latitude,\n              infoWindow : {\n                html : device.label\n              },\n              rotation : 0,\n              minZoom : 7,\n              maxZoom : 19,\n              on : {\n                click : function(){\n                  console.log(\"click\")\n                }\n              }\n            }\n          }\n          var loopCustomer = function(customer){\n            return {\n              id : customer.id,\n              type : \"customer\",\n              data : customer,\n              icon : {\n                normal : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 30,\n                  height : 30\n                },\n                highlight : {\n                  url : \"../images/ouke/oukeIcon1.svg\",\n                  width : 50,\n                  height : 50\n                }\n              },\n              lng : customer.values.longitude,\n              lat : customer.values.latitude,\n              infoWindow : {\n                html : customer.label\n              },\n              rotation : 0,\n              minZoom : 1,\n              maxZoom : 7,\n              on : {\n                click : function(){\n                  target.setCenter([customer.values.longitude,customer.values.latitude]);\n                  target.setZoom(8);\n                }\n              }\n            }\n          };\n          for(var i in devices){\n            markers.push(loopDevice(devices[i]));\n          };\n          for(var i in customers){\n            markers.push(loopCustomer(customers[i]));\n          };\n          event.target.render({\n            center : [116.404, 33.915],\n            markers : markers,\n            zoom : 6\n          });\n        })\n      });\n    },\n    highlight : function(event){\n      var customer = event.params.customer;\n      event.target.setCenter([customer.values.longitude,customer.values.latitude]);\n      event.target.setZoom(8);\n      event.target.setHighlightByMakerId(customer.id);\n    }\n  }\n}"
          },
          "url": "images/map/map1.png"
        }
      ]
    },
    "RESOURCELIST": {
      "label": "列表",
      "type": "resourcelist",
      "source": "RESOURCELIST",
      "data": {
        "applied": true,
        "model": null,
        "modelType": 0,
        "resfilltype": "manual",
        "resource": [
          null
        ],
        "series": {
          "manual": [],
          "bind": "(function (source){\n  return source.getResource();\n})"
        }
      },
      "style": {
        "margin": "5px",
        "padding": "0",
        "font-size": "12px"
      },
      "advance": {
        "variable": "",
        "getfunction": "serviceCenterService.resources.getAll",
        "category": "ci",
        "condition": [],
        "events": ""
      }
    },
    "BMAP": {
      "label": "地图分布1",
      "type": "echart",
      "source": "BMAP",
      "advance": {
        "getfunction": "resourceUIService.statDeviceByStandardAddress",
        "category": "scatter",
        "condition": [],
        "expression": "{}"
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "series": {
          "manual": [
            {
              "name": "第一组",
              "data": [
                [
                  121.31247,
                  31.956039,
                  31
                ],
                [
                  108.85101,
                  18.998161
                ],
                [
                  116.420509,
                  39.925237
                ],
                [
                  112.447525,
                  34.657368
                ],
                [
                  118.778074,
                  32.057236
                ],
                [
                  115.985867,
                  25.921831
                ],
                [
                  121.158978,
                  31.571904
                ],
                [
                  122.233391,
                  40.668651
                ],
                [
                  113.167978,
                  29.441833
                ],
                [
                  118.935664,
                  33.664059
                ],
                [
                  111.802535,
                  34.839691
                ],
                [
                  116.72865,
                  23.383908
                ],
                [
                  117.013943,
                  39.144457
                ],
                [
                  112.954181,
                  37.14005
                ],
                [
                  121.284426,
                  28.179738
                ],
                [
                  119.81942,
                  30.983353
                ],
                [
                  113.557281,
                  34.779474
                ]
              ]
            }
          ],
          "bind": "(function (source){\n  return source.scatter.getSeries();\n})"
        }
      },
      "parameters": {
        "title": "",
        "subtitle": ""
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "450px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "text": "地图",
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "item"
        },
        "grid": [
          {
          }
        ],
        "series": [
          {
            "type": "scatter",
            "name": "设备分布",
            "itemStyle": {
              "normal": {
                "color": "#ffcc00",
                "opacity": 1
              }
            },
            "symbol": "circle",
            "symbolSize": 10,
            "coordinateSystem": "bmap"
          }
        ],
        "bmap": {
          "center": [
            107.114129,
            34.550339
          ],
          "zoom": 5,
          "roam": true,
          "mapStyle": {
            "styleJson": [
              {
                "featureType": "water",
                "elementType": "all",
                "stylers": {
                  "color": "#044161"
                }
              }, {
                "featureType": "land",
                "elementType": "all",
                "stylers": {
                  "color": "#004981"
                }
              }, {
                "featureType": "boundary",
                "elementType": "geometry",
                "stylers": {
                  "color": "#064f85"
                }
              }, {
                "featureType": "railway",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "highway",
                "elementType": "geometry",
                "stylers": {
                  "color": "#004981"
                }
              }, {
                "featureType": "highway",
                "elementType": "geometry.fill",
                "stylers": {
                  "color": "#005b96",
                  "lightness": 1
                }
              }, {
                "featureType": "highway",
                "elementType": "labels",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "arterial",
                "elementType": "geometry",
                "stylers": {
                  "color": "#004981"
                }
              }, {
                "featureType": "arterial",
                "elementType": "geometry.fill",
                "stylers": {
                  "color": "#00508b"
                }
              }, {
                "featureType": "poi",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "green",
                "elementType": "all",
                "stylers": {
                  "color": "#056197",
                  "visibility": "off"
                }
              }, {
                "featureType": "subway",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "manmade",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "local",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "arterial",
                "elementType": "labels",
                "stylers": {
                  "visibility": "off"
                }
              }, {
                "featureType": "boundary",
                "elementType": "geometry.fill",
                "stylers": {
                  "color": "#029fd4"
                }
              }, {
                "featureType": "building",
                "elementType": "all",
                "stylers": {
                  "color": "#1a5787"
                }
              }, {
                "featureType": "label",
                "elementType": "all",
                "stylers": {
                  "visibility": "off"
                }
              }
            ]
          }
        }
      }
    },
    "MAP": {
      "label": "地图分布2",
      "type": "echart",
      "source": "MAP",
      "advance": {
        "custom_category": "",
        "getfunction": "resourceUIService.statDeviceByStandardAddress",
        "expression": "{on : { click : function(){} }}",
        "category": "scatter",
        "condition": [],
        "events": "function(){\n return {\n  click : function(event){\n    console.log(event);\n  }\n}\n}"
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "aggregate_rule": 0,
        "aggregate_instance": [],
        "aggregate_period": 15,
        "aggregate_type": [
          1
        ],
        "autoFillBlank": true,
        "format": "年月日",
        "series": {
          "manual": "[\n  {\n    \"name\": \"设备数量统计\",\n    \"data\": [{name: '北京',value: 60 },\n\t\t\t{name: '天津',value: 85 },\n      {name: '上海',value: 77 },\n      {name: '重庆',value: 23 },\n      {name: '河北',value: 86 },\n      {name: '河南',value: 93 },\n      {name: '云南',value: 56 },\n      {name: '辽宁',value: 75 },\n      {name: '黑龙江',value: 88 },\n      {name: '湖南',value: 86 },\n      {name: '安徽',value: 53 },\n      {name: '山东',value: 79 },\n      {name: '新疆',value: 32 },\n      {name: '江苏',value: 47 },\n      {name: '浙江',value: 75 },\n      {name: '江西',value: 54 },\n      {name: '湖北',value: 31 },\n      {name: '广西',value: 24 },\n      {name: '甘肃',value: 16 },\n      {name: '山西',value: 87 },\n      {name: '内蒙古',value: 52 },\n      {name: '陕西',value: 98 },\n      {name: '吉林',value: 62 },\n      {name: '福建',value: 89 },\n      {name: '贵州',value: 25 },\n      {name: '广东',value: 56},\n      {name: '青海',value: 76 },\n      {name: '西藏',value: 37 },\n      {name: '四川',value: 88 },\n      {name: '宁夏',value: 25 },\n      {name: '海南',value: 32 },\n      {name: '台湾',value: 54 },\n      {name: '香港',value: 31 },\n      {name: '澳门',value: 17 }]\n  }\n]",
          "bind": "(function (source){\n  return source.time.getSeries();\n})"
        }
      },
      "parameters": {
        "title": "",
        "subtitle": ""
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "450px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "text": "地图",
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "item"
        },
        "grid": [
          {
          }
        ],
        "series": [
          {
            "type": "map",
            "name": "设备分布",
            "mapType": "china",
            "itemStyle": {
              "normal": {
                "color": "#ffcc00",
                "opacity": 1
              }
            }
          }
        ],
        "geo": {
          "map": "china",
          "roam": true
        },
        "visualMap": [
          {
            "orient": "vertical",
            "left": "right",
            "top": "center",
            "min": 0,
            "max": 2500
          }
        ]
      },
      "template": [
        {
          "label": "基础地图",
          "type": "image",
          "url": "images/map/map1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "地图",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "item"
            },
            "grid": [
              {
              }
            ],
            "series": [
              {
                "type": "map",
                "name": "设备分布",
                "itemStyle": {
                  "normal": {
                    "color": "#ffcc00",
                    "opacity": 1
                  }
                }
              }
            ],
            "geo": {
              "map": "china",
              "roam": true
            },
            "visualMap": [
              {
                "orient": "vertical",
                "left": "right",
                "top": "center",
                "min": 0,
                "max": 2500
              }
            ]
          }
        }
      ]
    },
    "FAKETAB": {
      "label": "伪TAB样式",
      "type": "faketab",
      "source": "FAKETAB",
      "advance": {
        "getfunction": "",
        "category": "ci",
        "customCategory": "",
        "condition": [],
        "expression": "{\n  \"on\" : {\n    \"init\" : function(event){\n      var tabs = [];\n      for(var i=0; i<4; i++){\n        tabs.push({\n          id : i,\n        \tlabel : \"标签页\" + i\n        })\n      }\n      event.target.render(tabs);\n    },\n    \"click\" : function(event){\n      console.log(event);\n    }\n  },\n  \"format\" : {\n    \"id\" : \"id\",\n    \"label\" : \"label\"\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      },
      "template": [
        {
          "label": "默认模板",
          "type": "faketab",
          "source": "FAKETAB",
          "advance": {
            "getfunction": "",
            "category": "ci",
            "condition": [],
            "expression": "{\n  \"on\" : {\n    \"init\" : function(event){\n      var tabs = [];\n      for(var i=0; i<4; i++){\n        tabs.push({\n          id : i,\n        \tlabel : \"标签页\" + i\n        })\n      }\n      event.target.render(tabs);\n    },\n    \"click\" : function(event){\n      console.log(event);\n    }\n  },\n  \"format\" : {\n    \"id\" : \"id\",\n    \"label\" : \"label\"\n  }\n}"
          },
          "style": {
            "color": "#fff",
            "background-color": "#3c8dbc",
            "margin": "5px"
          },
          "tabInx": 0,
          "url": "images/map/map1.png"
        }, {
          "label": "可删减TAB模板",
          "type": "faketab",
          "source": "FAKETAB",
          "advance": {
            "expression": "{\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var data = [];\n      for(var i=0; i<4; i++) {\n        data.push({\n          id: i,\n          label: \"标签页\" + i\n        })\n      };\n      var render = function(){\n        var tabs = [];\n        var createItem = function(inx, item){\n          var rs = {\n            id : item.id,\n            label : item.label,\n            on : {\n              click : function(event){\n                target.tabInx = inx;\n                render();\n              }\n            },\n            addOn : [{\n              icon : \"glyphicon glyphicon-remove\",\n              on : {\n                click  : function(event){\n                  data.splice(inx, 1);\n                  if(target.tabInx > data.length - 1){\n                      target.tabInx = data.length - 1;\n                  };\n                  render();\n                }\n              }\n            }]\n          };\n          return rs;\n        };\n        for(var i in data){\n          tabs.push(createItem(i, data[i]))\n        };\n        event.target.render(tabs);\n      };\n      render();\n    }\n  },\n  \"format\" : {\n    \"id\" : \"id\",\n    \"label\" : \"label\"\n  }\n}"
          },
          "style": {
            "color": "#fff",
            "background-color": "#3c8dbc",
            "margin": "5px"
          },
          "tabInx": 0,
          "url": "images/map/map1.png"
        }, {
          "label": "自动加载项目模板",
          "type": "faketab",
          "source": "FAKETAB",
          "advance": {
            "getfunction": "",
            "category": "ci",
            "condition": [],
            "expression": "{\n  \"on\" : {\n    \"init\" : function(event){\n      event.target.getDomainsByFilter({\n        modelIds : [302]\n      }, function(projects){\n        event.target.render(projects);\n      })\n    },\n    \"click\" : function(event){\n      console.log(event);\n    }\n  },\n  \"format\" : {\n    \"id\" : \"id\",\n    \"label\" : \"label\"\n  }\n}"
          },
          "style": {
            "color": "#fff",
            "background-color": "#3c8dbc",
            "margin": "5px"
          },
          "tabInx": 0,
          "url": "images/map/map1.png"
        }, {
          "label": "可选仪表板视图模板",
          "type": "faketab",
          "source": "FAKETAB",
          "advance": {
            "getfunction": "",
            "category": "choselist",
            "condition": [],
            "expression": "expression = {\n  \"on\": {\n    \"init\": function(event) {\n      debugger\n      var target = event.target;\n      var ROLE = -1; //-1表示不启用任何原来的配置\n      target.setValue(\"global/ROLE\", ROLE);\n      var tabs = [];\n      //如果存在choselist和配置，则使用该内容\n      if(target.advance.category == \"choselist\" && target.advance.condition) {\n        tabs = JSONparse(target.advance.condition);\n      }\n      //没有的话设置一个\n      if(!tabs || tabs.length == 0) {\n        tabs = [];\n        tabs.push({\n          id: 0,\n          label: \"我的首页\",\n          default: \"baogang/alert/home\"\n        })\n      }\n\n      var CACHEDVALUENAME = \"controlPanelLevel1Navigation\";\n      var CHANGENAVEEVENT = \"lv1viewchange\";\n      var MOVETOEVENT = \"lv1moveTo\";\n      var NAVIGATETO = \"navigateTo\";\n      // ------------------- 初始化内容在这里设置\n\n      target.setScopeValue(\"CACHEDVALUENAME\", CACHEDVALUENAME);\n      target.setScopeValue(\"CHANGENAVEEVENT\", CHANGENAVEEVENT);\n      target.setScopeValue(\"MOVETOEVENT\", MOVETOEVENT);\n\n      var param = target.getParameter(\"main\");\n      var main, path, temp_view;\n      if(param instanceof Array) {\n        main = param[0];\n        path = param[1];\n        if(path.indexOf(\"viewId:\") != -1) {\n          temp_view = {\n            viewId: path.split(\"viewId:\")[1]\n          }\n        }\n      } else {\n        main = param\n      }\n\n      var editMode = true;\n      var subTabs = [];\n      var updateNaviList = function() {\n        var obj = {\n          tabs: tabs,\n          subTabs: subTabs,\n          editMode: editMode\n        };\n        target.saveEditorStatus(CACHEDVALUENAME, obj);\n      }\n\n      var select = function(item, path) {\n        var viewId = item.viewId;\n        if(temp_view) {\n          target.setScopeValue(\"INITPARAMS\", {\n            item: temp_view,\n            path: \"index\"\n          });\n        } else {\n          target.setScopeValue(\"INITPARAMS\", {\n            item: item,\n            path: path\n          });\n        }\n        target.trigger(CHANGENAVEEVENT, target.getScopeValue(\"INITPARAMS\"));\n      };\n      var saveView = function(item, callback) {\n        var viewTitle = item.label;\n        var viewType = \"dashboard\";\n        var viewId = item.viewId;\n        if(viewId) {\n          target.updateView({\n            viewId: viewId,\n            viewTitle: item.label,\n            viewType: \"dashboard\"\n          }, function(data) {\n            callback(data);\n          })\n        } else {\n          var run = function(json) {\n            var viewTitle = item.label + \"(\" + (item.default || \"自定义\") + \")\";\n            target.getAllMyViews(function(views) {\n              var find = views.find(function(view) {\n                viewTitle == view.viewTitle;\n              });\n              if(find) {\n                item.viewId = find.viewId;\n                callback(find);\n              } else {\n                target.addView({\n                  viewTitle: item.label + \"(\" + (item.default || \"自定义\") + \")\",\n                  viewType: \"dashboard\",\n                  content: json ? json : null,\n                }, function(data) {\n                  item.viewId = data.data.viewId;\n                  callback(data);\n                })\n              }\n            });\n          };\n          if(item.default) {\n            target.Info(\"../../localdb/echartTemplate/\" + item.default+\".json\", function(json) {\n              run(JSON.stringify(json));\n            })\n          } else {\n            run();\n          }\n        }\n      };\n\n      var deleteView = function(item) {\n        if(item.viewId) {\n          target.deleteView(item.viewId);\n        };\n      }\n\n      var render = function(view) {\n        var tabFilter = tabs.filter(function(elem) {\n          return elem.show != false //|| editMode;\n        })\n        var tabsClone = tabFilter.map(function(elem) {\n          var clone = elem.$clone();\n          clone.on = {\n            click: function(el) {\n              target.navigateTo(\"index\", {\n                main: elem.id\n              }, \"self\");\n            }\n          };\n          if(editMode) {\n            clone.addOn = [{\n              icon: \"glyphicon glyphicon-scale\",\n              on: {\n                click: function(el) {\n                  var run = function() {\n                    var viewId = elem.viewId;\n                    target.linkTo(\"../app-freeboard/index.html#/freeboard/view/dashboard/\" + elem.viewId + \"/0\");\n                  }\n                  if(!elem.viewId) {\n                    saveView(elem, function() {\n                      updateNaviList();\n                      run();\n                    });\n                  } else {\n                    run();\n                  }\n                }\n              }\n            }, {\n              icon: \"glyphicon glyphicon-edit\",\n              on: {\n                click: function(event) {\n                  target.createPopupBypath(\"info\", {\n                    title: \"工作台信息\",\n                    theme: \"system\",\n                    width: 500,\n                    on: {\n                      submit: function(item) {\n\n                      }\n                    }\n                  }, elem);\n                }\n              }\n            }]\n          };\n          return clone;\n        });\n\n        var subTabsFilter = subTabs.filter(function(elem) {\n          return elem.show //|| editMode;\n        })\n\n        var subTabsClone = subTabsFilter.map(function(elem) {\n          var clone = elem.$clone();\n          clone.on = {\n            click: function(el) {\n              target.tabInx = tabFilter.length + subTabsFilter.indexOf(elem);\n              render();\n            }\n          }\n          if(editMode) {\n            clone.$extension({\n              addOn: [{\n                icon: \"glyphicon glyphicon-edit\",\n                on: {\n                  click: function() {\n                    target.createPopupBypath(\"popup\", {\n                      title: \"编辑工作台\",\n                      theme: \"system\",\n                      width: 500,\n                      on: {\n                        submit: function(item) {\n                          elem.label = item.name;\n                          elem.id = item.id;\n                          saveView(elem, function() {\n                            updateNaviList();\n                            render();\n                          });\n                        }\n                      }\n                    }, elem);\n                  }\n                }\n              }, {\n                icon: \"glyphicon glyphicon-scale\",\n                on: {\n                  click: function(event) {\n                    target.linkTo(\"../app-freeboard/index.html#/freeboard/view/dashboard/\" + elem.viewId + \"/0\");\n                  }\n                }\n              }, {\n                icon: \"proudsmart ps-delete-02\",\n                on: {\n                  click: function(event) {\n                    var inx = subTabs.indexOf(elem);\n                    subTabs.splice(inx, 1);\n                    deleteView(elem);\n                    updateNaviList();\n                    render();\n                  }\n                }\n              }]\n            });\n          }\n          return clone;\n        });\n\n        var concat = tabFilter.concat(subTabsFilter);\n        if(view) {\n          target.tabInx = concat.indexOf(view);\n        };\n\n        var find = concat.find(function(elem) {\n          return elem.id == main;\n        });\n\n        if(find) {\n          target.tabInx = concat.indexOf(find);\n        };\n\n        if(target.tabInx > concat.length - 1) {\n          target.tabInx = concat.length - 1;\n        };\n\n        select(concat[target.tabInx], path);\n\n        if(editMode) {\n          var clist = tabsClone.concat(subTabsClone).concat([/**{\n            id: -1,\n            label: \"\",\n            icon: \"glyphicon glyphicon-plus\",\n            on: {\n              click: function(elem) {\n                target.createPopupBypath(\"popup\", {\n                  title: \"新建工作台\",\n                  theme: \"system\",\n                  width: 500,\n                  on: {\n                    submit: function(item) {\n                      var item = {\n                        id: item.id,\n                        label: item.name\n                      };\n                      saveView(item, function() {\n                        subTabs.push(item);\n                        updateNaviList();\n                        render();\n                      });\n                    }\n                  }\n                });\n              }\n            }\n          }, {\n            id: -1,\n            label: \"\",\n            icon: \"glyphicon glyphicon-cog\",\n            on: {\n              click: function(elem) {\n                target.createPopupBypath(\"setting\", {\n                  title: \"设置\",\n                  theme: \"system\",\n                  width: 500,\n                  on: {\n                    submit: function(data) {\n                      tabs = data.tabs;\n                      editMode = data.editMode;\n                      subTabs = data.subTabs;\n                      updateNaviList();\n                      render();\n                    }\n                  }\n                }, {\n                  editMode: editMode,\n                  tabs: tabs,\n                  subTabs: subTabs\n                });\n              }\n            }\n          }, */{\n            id: -2,\n            label: \"\",\n            icon: \"glyphicon glyphicon-transfer\",\n            on: {\n              click: function(elem) {\n                target.createPopupBypath(\"viewpare\", {\n                  title: \"配置区域，产线，设备对应的组太视图\",\n                  theme: \"system\",\n                  width: 700,\n                  on: {\n                    submit: function(data) {\n\n                    }\n                  }\n                });\n              }\n            }\n          }])\n        } else {\n          var clist = tabsClone.concat(subTabsClone).concat([{\n            id: -1,\n            label: \"\",\n            icon: \"glyphicon glyphicon-cog\",\n            on: {\n              click: function(elem) {\n                target.createPopupBypath(\"setting\", {\n                  title: \"设置\",\n                  theme: \"system\",\n                  width: 500,\n                  on: {\n                    submit: function(data) {\n                      tabs = data.tabs;\n                      editMode = data.editMode;\n                      subTabs = data.subTabs;\n                      updateNaviList();\n                      render();\n                    }\n                  }\n                }, {\n                  editMode: editMode,\n                  tabs: tabs,\n                  subTabs: subTabs\n                });\n              }\n            }\n          }]);\n        }\n        target.render(clist, {\n          class: \"steelNavi\"\n        });\n      };\n      target.on(\"navigateTo\", function(id) {\n        var concat = tabs.concat(subTabs);\n        var find = concat.find(function(elem) {\n          return elem.id == id;\n        });\n        render(find);\n        if(find) {\n          select(find);\n        }\n      })\n      render();\n    }\n  },\n  \"format\": {\n    \"id\": \"id\",\n    \"label\": \"label\"\n  }\n};"
          },
          "style": {
            "color": "#fff",
            "background-color": "#3c8dbc",
            "margin": "5px"
          },
          "tabInx": 0,
          "url": "images/map/map1.png"
        }
      ]
    },
    "NEWITEM": {
      "label": "为TAB样式",
      "type": "newitem",
      "source": "NEWITEM",
      "parameters": {
        "icon": {
          "id": 0,
          "perfix": "ion",
          "css": "ion-ios-gear-outline"
        }
      },
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "category": "ci",
        "customCategory": "",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": "{\n  click : function(event){\n    console.log(event);\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      }
    },
    "INJECTOR": {
      "label": "视图嵌入",
      "type": "injector",
      "source": "INJECTOR",
      "parameters": {
        "icon": {
          "id": 0,
          "perfix": "ion",
          "css": "ion-ios-gear-outline"
        }
      },
      "advance": {
        "getfunction": "",
        "expression": "expression = {\n  on : {\n      init : function(event){\n          var target = event.target;\n          var viewId = 88880712760004;\n          target.getViewById(viewId, function(view){\n              if(view.content){\n                  var json = JSON.parse(view.content);\n                  target.render(json)\n              }\n          });\n      }\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      }
    },
    "TOTALITEM": {
      "label": "数据统计标签",
      "type": "totalItem",
      "source": "TOTALITEM",
      "parameters": {
        "icon": {
          "id": 0,
          "perfix": "ion",
          "css": "ion-ios-gear-outline"
        }
      },
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "category": "ci",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": "{\n  click : function(event){\n    event.window.location.href='../../app-oc/index.html#/resource_type';\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "multipleCi": false,
        "multipleKpi": false,
        "series": {
          "manual": [
            {
              "name": "工厂A产量",
              "data": [
                {
                  "name": "指标",
                  "value": 3300,
                  "unit": "个"
                }
              ]
            }
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.ci.getSeries(formatter);\n})"
        }
      }
    },
    "WEATHER": {
      "label": "天气信息",
      "type": "weather",
      "source": "WEATHER",
      "help": "../pdf/weather.pdf",
      "parameters": {
        "city": "北京"
      },
      "advance": {
        "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      target.setCity(\"上海\");\n      target.render();\n    }\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      }
    },
    "HISTORY": {
      "label": "时间轴",
      "type": "history",
      "source": "HISTORY",
      "help": "../pdf/weather.pdf",
      "parameters": {
        "data": [
          {
            "time": "2017-11-12 12:30:10",
            "icon": "fa fa-user bg-aqua",
            "disList": [
              "<a  href='#'>用户任务</a>",
              "处理人:分析员"
            ]
          }
        ]
      },
      "advance": {
        "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n    var ctrlGroups = [\n{\ntime:\"2017-11-12 12:30:10\",\nicon:\"fa fa-user bg-aqua\",\ndisList:[\n{\nvalue : \"<a href='#'>用户任务</a>\"\n},{\nvalue : \"处理人:分析员\"\n}\n]}\n];   event.target.render(ctrlGroups);\n    }\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      }
    },
    "AXIS": {
      "label": "横向时间轴",
      "type": "axis",
      "source": "AXIS",
      "help": "../pdf/weather.pdf",
      "parameters": {
        "data": [
          {
            "time": "2017-11-12 12:30:10",
            "icon": "fa fa-user bg-aqua",
            "disList": [
              "<a  href='#'>用户任务</a>",
              "处理人:分析员"
            ]
          }
        ]
      },
      "advance": {
        "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n    var ctrlGroups = [\n{\ntime:\"2017-11-12 12:30:10\",\nicon:\"fa fa-user bg-aqua\",\ndisList:[\n{\nvalue : \"<a href='#'>用户任务</a>\"\n},{\nvalue : \"处理人:分析员\"\n}\n]}\n];   event.target.render(ctrlGroups);\n    }\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      }
    },
    "BUTTON": {
      "label": "按钮",
      "type": "button",
      "source": "BUTTON",
      "parameters": {
        "text": "按钮",
        "icon": {
          "id": 0,
          "perfix": "ion",
          "css": "ion-ios-gear-outline"
        }
      },
      "advance": {
        "expression": "{\n  on : {\n    click : function(event){\n      console.log(event);\n      event.element.linkTo('http://www.baidu.com');\n    }\n  }\n}"
      },
      "style": {
        "color": "#fff",
        "background-color": "#3c8dbc",
        "margin": "5px"
      }
    },
    "IFRAME": {
      "label": "IFRAME框架",
      "type": "iframe",
      "source": "IFRAME",
      "parameters": {
        "url": "http://www.baidu.com"
      },
      "advance": {
        "expression": "{\n  on : {\n    click : function(event){\n      console.log(event);\n      event.element.linkTo('http://www.baidu.com');\n    }\n  }\n}"
      },
      "style": {
        "border": "0",
        "height": "calc(100vh - 100px)",
        "width": "100%"
      }
    },
    "WARNING": {
      "label": "厂区告警示意",
      "type": "warning",
      "source": "WARNING",
      "parameters": {
        "background": "../images/factory/workhouse1.png",
        "radius": 20
      },
      "style": {
        "margin": "5px",
        "height": "400px"
      },
      "attributes": {
        "background": {
          "label": "厂区背景图",
          "value": "../images/factory/workhouse1.png",
          "type": "select",
          "option": [
            {
              "label": "厂区1",
              "value": "../images/factory/workhouse1.png"
            }, {
              "label": "厂区2",
              "value": "../images/factory/workhouse2.png"
            }
          ]
        },
        "radius": {
          "label": "闪烁区半径",
          "value": 20,
          "type": "slider",
          "min": 0,
          "max": 100,
          "unit": "px"
        },
        "height": {
          "label": "高度",
          "applied": true,
          "default": "自适应高度",
          "value": 400,
          "type": "numberInput",
          "unit": "px"
        }
      },
      "position": {
        "x": 100,
        "y": 100,
        "width": 50
      }
    },
    "PROGRESS": {
      "label": "百分比状态条（控件组）",
      "type": "ctrlgroup",
      "source": "PROGRESS",
      "advance": {
        "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : \"第一个指标\",\n          style : {\n            \"text-align\" : \"center\",\n            width : \"100px\"\n          }\n        },{\n          type : \"progressbar\",\n          value : 50,\n          class : \"col-md-8\"\n        },{\n          type : \"label\",\n          value : \"50%\",\n          class : \"col-md-2\"\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
      },
      "help": "../pdf/ctrlgroup.pdf",
      "id": "eseCfSmfXnYKb4dG4sbbnQP7QsGwYkPn",
      "template": [
        {
          "label": "百分比(两侧数字)",
          "type": "image",
          "url": "images/template/progressbar/progressbar1.jpg",
          "advance": {
            "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : \"第一个指标\",\n          style : {\n            \"text-align\" : \"center\",\n            width : \"100px\"\n          }\n        },{\n          type : \"progressbar\",\n          value : 50,\n          class : \"col-md-8\"\n        },{\n          type : \"label\",\n          value : \"50%\",\n          class : \"col-md-2\"\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
          }
        }, {
          "label": "百分比（顶部数字）",
          "type": "image",
          "url": "images/template/progressbar/progressbar2.jpg",
          "advance": {
            "expression": "expression = {\n  width : \"100%\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n        [{\n          type : \"label\",\n          value : \"第一个指标\",\n          style : {\n            \"text-align\" : \"left\"\n          },\n          class : \"col-md-6\"\n        },{\n          type : \"label\",\n          value : \"50%\",\n          style : {\n            \"text-align\" : \"right\"\n          },\n          class : \"col-md-6\"\n        }],[{\n          type : \"progressbar\",\n          value : 50,\n          class : \"col-md-12\",\n          colSpan : 2\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
          }
        }
      ]
    },
    "SPARKLINE": {
      "label": "迷你柱图",
      "type": "sparkline",
      "source": "SPARKLINE",
      "advance": {
        "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.render({\n                title : '迷你柱图',\n                color : \"#666\",\n                data : [1,5,2,5,7,8,3]\n            })\n        }\n    }\n}"
      }
    },
    "DOWNTAB": {
      "label": "环比标签",
      "type": "downTab",
      "source": "DOWNTAB",
      "data": {
        "applied": false,
        "model": null,
        "multipleCi": false,
        "multipleKpi": false,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "series": {
          "manual": [
            {
              "name": "指标",
              "data": [
                60,
                70,
                80,
                90,
                100
              ]
            }
          ],
          "bind": "(function (source){\n  return source.time.getSeries();\n})"
        }
      }
    },
    "LINECHART": {
      "label": "线图",
      "type": "echart",
      "source": "LINECHART",
      "help": "../app-free-style/index.html#/help/index%7Cechart/%5B%220%22,%7B%7D%5D",
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timespan": {
          "value": 24,
          "unit": "hour"
        },
        "frequency": {
          "value": 30,
          "unit": "minute"
        },
        "aggregate_rule": 0,
        "aggregate_instance": [],
        "aggregate_period": 15,
        "aggregate_type": [
          1
        ],
        "autoFillBlank": true,
        "format": "年月日",
        "grid": [
          {
          }
        ],
        "legend": {
          "manual": [
            "第一组",
            "第二组",
            "第三组"
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getSeries(formatter);\n})"
        },
        "xAxisType": "category",
        "xAxis": {
          "manual": [
            [
              "第一个数据",
              "第二个数据",
              "第三个数据",
              "第四个数据",
              "第五个数据",
              "第六个数据"
            ]
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getxAxis(formatter);\n})"
        },
        "yAxisType": "value",
        "yAxis": {
          "manual": [
            [
              "第一个数据",
              "第二个数据",
              "第三个数据",
              "第四个数据",
              "第五个数据",
              "第六个数据"
            ]
          ],
          "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getxAxis(formatter);\n})"
        },
        "series": {
          "manual": [
            {
              "name": "第一组",
              "data": [
                120,
                85,
                64,
                130,
                152,
                87
              ]
            }, {
              "name": "第二组",
              "data": [
                88,
                120,
                180,
                78,
                232,
                140
              ]
            }, {
              "name": "第三组",
              "data": [
                50,
                80,
                140,
                60,
                70,
                90
              ]
            }
          ],
          "bind": "(function (source){\n   var formatter=function(elem){\n    return elem.kpi\n   }\n  return source.time.getSeries(formatter);\n})"
        }
      },
      "advance": {
        "variable": "",
        "getfunction": "kpiDataService.getValueList",
        "category": "time",
        "custom_category": "",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": {}
      },
      "parameters": {
        "title": "主标题",
        "subtitle": "附标题"
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "text": "草莓大棚温度变化",
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "axis"
        },
        "legend": {
          "data": [
            "数据1",
            "数据2",
            "数据3"
          ]
        },
        "grid": [
          {
          }
        ],
        "xAxis": [
          {
            "type": "category",
            "boundaryGap": false,
            "axisLine": {
              "lineStyle": {
                "color": "#b0b0b0",
                "width": 1
              }
            },
            "splitLine": {
              "lineStyle": {
                "color": "rgb(239, 239, 239)",
                "width": 1
              }
            }
          }
        ],
        "yAxis": [
          {
            "show": true,
            "max": "auto",
            "min": "auto",
            "type": "value",
            "boundaryGap": false,
            "axisLine": {
              "lineStyle": {
                "color": "#b0b0b0",
                "width": 1
              }
            },
            "splitLine": {
              "lineStyle": {
                "color": "rgb(239, 239, 239)",
                "width": 1
              }
            },
            "axisLabel": {
              "show": true,
              "textStyle": {}
            },
            "axisTick": {
              "show": true,
              "lineStyle": {}
            }
          }
        ],
        "series": [
          {
            "name": "数据1",
            "type": "line",
            "markPoint": {
              "data": [
                {
                  "name": "最大值",
                  "type": "max"
                }, {
                  "name": "最小值",
                  "type": "min"
                }
              ]
            }
          }, {
            "name": "数据2",
            "type": "line",
            "markPoint": {
              "data": [
                {
                  "name": "最大值",
                  "type": "max"
                }, {
                  "name": "最小值",
                  "type": "min"
                }
              ]
            }
          }, {
            "name": "数据3",
            "type": "line",
            "markPoint": {
              "data": [
                {
                  "name": "最大值",
                  "type": "max"
                }, {
                  "name": "最小值",
                  "type": "min"
                }
              ]
            }
          }
        ],
        "visualMap": []
      },
      "template": [
        {
          "label": "基础线图",
          "type": "image",
          "url": "images/line/line1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "草莓大棚温度变化",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "toolbox": {},
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "grid": [
              {
              }
            ],
            "tooltip": {
              "trigger": "axis"
            },
            "xAxis": [
              {
                "type": "category",
                "boundaryGap": false,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                }
              }
            ],
            "yAxis": [
              {
                "show": true,
                "max": "auto",
                "min": "auto",
                "type": "value",
                "boundaryGap": false,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                },
                "axisLabel": {
                  "show": true,
                  "textStyle": {}
                },
                "axisTick": {
                  "show": true,
                  "lineStyle": {}
                }
              }
            ],
            "series": [
              {
                "name": "数据1",
                "type": "line",
                "markPoint": {
                  "data": [
                    {
                      "name": "最大值",
                      "type": "max"
                    }, {
                      "name": "最小值",
                      "type": "min"
                    }
                  ]
                }
              }, {
                "name": "数据2",
                "type": "line",
                "markPoint": {
                  "data": [
                    {
                      "name": "最大值",
                      "type": "max"
                    }, {
                      "name": "最小值",
                      "type": "min"
                    }
                  ]
                }
              }, {
                "name": "数据3",
                "type": "line",
                "markPoint": {
                  "data": [
                    {
                      "name": "最大值",
                      "type": "max"
                    }, {
                      "name": "最小值",
                      "type": "min"
                    }
                  ]
                }
              }
            ]
          }
        }, {
          "label": "堆积线图",
          "type": "image",
          "url": "images/line/line2.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {},
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "grid": [
              {
              }
            ],
            "xAxis": [
              {
                "boundaryGap": false,
                "type": "category"
              }
            ],
            "yAxis": [
              {
                "type": "value"
              }
            ],
            "series": [
              {
                "stack": "总量",
                "name": "数据1",
                "type": "line"
              }, {
                "stack": "总量",
                "name": "数据2",
                "type": "line"
              }
            ],
            "toolbox": {},
            "tooltip": {}
          }
        }, {
          "label": "对数轴",
          "type": "image",
          "url": "images/line/line3.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {},
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "grid": [
              {
              }
            ],
            "xAxis": [
              {
                "boundaryGap": false,
                "type": "category"
              }
            ],
            "yAxis": [
              {
                "type": "log"
              }
            ],
            "series": [
              {
                "name": "数据1",
                "type": "line"
              }, {
                "name": "数据2",
                "type": "line"
              }, {
                "name": "数据3",
                "type": "line"
              }
            ],
            "toolbox": {},
            "tooltip": {}
          }
        }, {
          "label": "面积线图",
          "type": "image",
          "url": "images/line/line4.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "草莓大棚温度变化",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "axis"
            },
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "xAxis": [
              {
                "type": "category",
                "boundaryGap": false,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                }
              }
            ],
            "yAxis": [
              {
                "show": true,
                "max": "auto",
                "min": "auto",
                "type": "value",
                "boundaryGap": false,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                },
                "axisLabel": {
                  "show": true,
                  "textStyle": {}
                },
                "axisTick": {
                  "show": true,
                  "lineStyle": {}
                }
              }
            ],
            "series": [
              {
                "name": "数据1",
                "type": "line",
                "areaStyle": {
                  "normal": {
                    "show": true
                  }
                }
              }, {
                "name": "数据2",
                "type": "line",
                "areaStyle": {
                  "normal": {
                    "show": true
                  }
                }
              }, {
                "name": "数据3",
                "type": "line",
                "areaStyle": {
                  "normal": {
                    "show": true
                  }
                }
              }
            ]
          }
        }, {
          "label": "面堆积线图",
          "type": "image",
          "url": "images/line/line5.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "草莓大棚温度变化",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "axis"
            },
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "grid": [
              {
              }
            ],
            "xAxis": [
              {
                "type": "category",
                "boundaryGap": false,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                }
              }
            ],
            "yAxis": [
              {
                "show": true,
                "max": "auto",
                "min": "auto",
                "type": "value",
                "boundaryGap": false,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                },
                "axisLabel": {
                  "show": true,
                  "textStyle": {}
                },
                "axisTick": {
                  "show": true,
                  "lineStyle": {}
                }
              }
            ],
            "series": [
              {
                "stack": "总量",
                "name": "数据1",
                "type": "line",
                "areaStyle": {
                  "normal": {
                    "show": true
                  }
                }
              }, {
                "stack": "总量",
                "name": "数据2",
                "type": "line",
                "areaStyle": {
                  "normal": {
                    "show": true
                  }
                }
              }, {
                "stack": "总量",
                "name": "数据3",
                "type": "line",
                "areaStyle": {
                  "normal": {
                    "show": true
                  }
                }
              }
            ]
          }
        }, {
          "label": "双坐标轴图",
          "type": "image",
          "url": "images/line/line6.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "600px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "草莓大棚温度变化",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "legend": {},
            "grid": [
              {
                "left": 50,
                "right": 50,
                "height": "35%"
              }, {
                "left": 50,
                "right": 50,
                "top": "55%",
                "height": "35%"
              }
            ],
            "toolbox": {},
            "tooltip": {
              "trigger": "axis"
            },
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "xAxis": [
              {
                "type": "category",
                "boundaryGap": false
              }, {
                "gridIndex": 1,
                "type": "category",
                "boundaryGap": false,
                "position": "top"
              }
            ],
            "yAxis": [
              {
                "name": "流量(m^3/s)",
                "type": "value"
              }, {
                "gridIndex": 1,
                "name": "降雨量(mm)",
                "type": "value",
                "inverse": true
              }
            ],
            "series": [
              {
                "name": "数据1",
                "type": "line",
                "symbolSize": 16
              }, {
                "name": "数据2",
                "type": "line",
                "xAxisIndex": 1,
                "yAxisIndex": 1,
                "symbolSize": 16
              }, {
                "name": "数据3",
                "type": "line",
                "xAxisIndex": 1,
                "yAxisIndex": 1,
                "symbolSize": 16
              }
            ]
          }
        }
      ]
    },
    "BARCHART": {
      "label": "柱图",
      "type": "echart",
      "source": "BARCHART",
      "help": "../pdf/bar.pdf",
      "attributes": {
        "anchor": {
          "default": "没有设置锚点",
          "applied": false,
          "label": "锚点",
          "value": "multiSelect",
          "type": "standardInput",
          "maxlength": 30,
          "placeholder": "锚点名称最多30英文字符",
          "__onChange__": "anchorChange"
        },
        "linkData": {
          "label": "链接锚点",
          "value": "none",
          "type": "select",
          "disable": false
        },
        "value": {
          "label": "数值",
          "value": "22,10,5,10,4,8,3",
          "type": "standardInput",
          "data": {
            "value": "none",
            "option": [
              {
                "label": "自定义",
                "value": "none"
              }, {
                "label": "(数据源)数据列 ",
                "value": "value"
              }, {
                "label": "(设备)末位数据 ",
                "value": "last"
              }
            ]
          }
        },
        "xAxis": {
          "label": "X轴",
          "value": "2016/6/1,2016/6/2,2016/6/3,2016/6/4,2016/6/5,2016/6/6,2016/6/7",
          "type": "standardInput",
          "data": {
            "value": "none",
            "option": [
              {
                "label": "自定义",
                "value": "none"
              }, {
                "label": "(数据源)时间 ",
                "value": "timeline"
              }, {
                "label": "(设备)设备名 ",
                "value": "resource"
              }, {
                "label": "(设备)指标 ",
                "value": "kpi"
              }, {
                "label": "(设备)设备+指标 ",
                "value": "resourcekpi"
              }
            ]
          }
        },
        "title": {
          "applied": true,
          "default": "隐藏主标题",
          "label": "主标题",
          "value": "主标题",
          "type": "standardInput"
        },
        "subtitle": {
          "applied": true,
          "label": "副标题",
          "default": "隐藏副标题",
          "value": "副标题",
          "type": "standardInput"
        },
        "color": {
          "label": "柱体颜色",
          "value": "",
          "type": "colorPicker"
        },
        "height": {
          "label": "视图高度",
          "value": 300,
          "applied": false,
          "default": "默认高度300px",
          "type": "numberInput"
        },
        "minTimespan": {
          "label": "采样周期",
          "value": 86400,
          "applied": true,
          "default": "默认采样时间86400（24小时）",
          "type": "numberInput",
          "min": 0,
          "maxlength": 7,
          "unit": "秒",
          "replace": {
            "0": "自动设定"
          }
        },
        "timespan": {
          "label": "时间段",
          "value": 168,
          "type": "numberInput",
          "min": 0,
          "maxlength": 5,
          "unit": "小时"
        },
        "format": {
          "label": "时间模式",
          "value": "年月日",
          "type": "select",
          "option": [
            {
              "label": "年月日",
              "value": "年月日"
            }, {
              "label": "年月日时分",
              "value": "年月日时分"
            }, {
              "label": "年月日时分秒",
              "value": "年月日时分秒"
            }, {
              "label": "月日",
              "value": "月日"
            }, {
              "label": "时分",
              "value": "时分"
            }, {
              "label": "时分秒",
              "value": "时分秒"
            }
          ]
        },
        "range": {
          "label": "Y坐标轴区间",
          "value": [
            -1,
            3
          ],
          "applied": false,
          "default": "自动取值",
          "min": -10,
          "step": 100,
          "max": 10,
          "type": "sliderbyunit",
          "range": true,
          "option": [
            {
              "label": "X1",
              "value": 1
            }, {
              "label": "X10",
              "value": 10
            }, {
              "label": "X100",
              "value": 100
            }, {
              "label": "X1000",
              "value": 1000
            }
          ]
        },
        "showxAxis": {
          "label": "显示X轴坐标",
          "value": true,
          "type": "select",
          "option": [
            {
              "label": "显示",
              "value": true
            }, {
              "label": "隐藏",
              "value": false
            }
          ]
        },
        "showyAxis": {
          "label": "显示Y轴坐标",
          "value": true,
          "type": "select",
          "option": [
            {
              "label": "显示",
              "value": true
            }, {
              "label": "隐藏",
              "value": false
            }
          ]
        },
        "orderType": {
          "applied": false,
          "default": "不排列",
          "label": "升降顺序",
          "value": "asc",
          "type": "select",
          "option": [
            {
              "label": "升序",
              "value": "asc"
            }, {
              "label": "降序",
              "value": "desc"
            }
          ]
        },
        "topN": {
          "applied": false,
          "default": "不限制",
          "label": "数据最大个数",
          "value": 10,
          "type": "slider"
        },
        "orderConf": {
          "applied": false,
          "default": "自动调节采样条件",
          "label": "采样条件",
          "value": "device",
          "type": "select",
          "option": [
            {
              "label": "设备",
              "value": "device"
            }, {
              "label": "区域",
              "value": "area"
            }
          ]
        }
      },
      "advance": {
        "variable": "",
        "getfunction": "kpiDataService.getValueList",
        "category": "time",
        "custom_category": "",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": {}
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timespan": {
          "value": 24,
          "unit": "hour"
        },
        "frequency": {
          "value": 30,
          "unit": "minute"
        },
        "aggregate_rule": 0,
        "aggregate_instance": [
          "instance1"
        ],
        "aggregate_period": 15,
        "aggregate_type": [
          1
        ],
        "autoFillBlank": true,
        "format": "年月日",
        "legend": {},
        "legend": {
          "manual": [
            "第一组",
            "第二组",
            "第三组"
          ],
          "bind": "(function (source){\n  return source.time.getLegend();\n})"
        },
        "xAxisType": "category",
        "xAxis": {
          "manual": [
            [
              "第一个数据",
              "第二个数据",
              "第三个数据",
              "第四个数据",
              "第五个数据",
              "第六个数据"
            ]
          ],
          "bind": "(function (source){\n  return source.time.getxAxis();\n})"
        },
        "series": {
          "manual": [
            {
              "name": "第一组",
              "data": [
                120,
                85,
                64,
                130,
                152,
                87
              ]
            }, {
              "name": "第二组",
              "data": [
                88,
                120,
                180,
                78,
                232,
                140
              ]
            }, {
              "name": "第三组",
              "data": [
                50,
                80,
                140,
                60,
                70,
                90
              ]
            }
          ],
          "bind": "(function (source){\n  return source.time.getSeries();\n})"
        },
        "yAxisType": "value",
        "yAxis": {
          "manual": [
            [
              "第一个数据",
              "第二个数据",
              "第三个数据",
              "第四个数据",
              "第五个数据",
              "第六个数据"
            ]
          ],
          "bind": "(function (source){\n  return source.time.getxAxis();\n})"
        }
      },
      "parameters": {
        "title": "基础柱状图",
        "subtitle": ""
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "text": "草莓大棚温度变化",
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "axis"
        },
        "legend": {
          "data": [
            "数据1",
            "数据2",
            "数据3"
          ]
        },
        "grid": [
          {
          }
        ],
        "xAxis": [
          {
            "type": "category",
            "boundaryGap": true,
            "axisLine": {
              "lineStyle": {
                "color": "#b0b0b0",
                "width": 1
              }
            },
            "splitLine": {
              "lineStyle": {
                "color": "rgb(239, 239, 239)",
                "width": 1
              }
            }
          }
        ],
        "yAxis": [
          {
            "show": true,
            "max": "auto",
            "min": "auto",
            "type": "value",
            "boundaryGap": true,
            "axisLine": {
              "lineStyle": {
                "color": "#b0b0b0",
                "width": 1
              }
            },
            "splitLine": {
              "lineStyle": {
                "color": "rgb(239, 239, 239)",
                "width": 1
              }
            },
            "axisLabel": {
              "show": true,
              "textStyle": {}
            },
            "axisTick": {
              "show": true,
              "lineStyle": {}
            }
          }
        ],
        "series": [
          {
            "name": "数据1",
            "type": "bar"
          }, {
            "name": "数据2",
            "type": "bar"
          }, {
            "name": "数据3",
            "type": "bar"
          }
        ]
      },
      "template": [
        {
          "label": "基础柱图",
          "type": "image",
          "url": "images/bar/bar1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "草莓大棚温度变化",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "axis"
            },
            "legend": {
              "data": [
                "数据1",
                "数据2",
                "数据3"
              ]
            },
            "grid": [
              {
              }
            ],
            "xAxis": [
              {
                "type": "category",
                "boundaryGap": true,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                }
              }
            ],
            "yAxis": [
              {
                "show": true,
                "max": "auto",
                "min": "auto",
                "type": "value",
                "boundaryGap": true,
                "axisLine": {
                  "lineStyle": {
                    "color": "#b0b0b0",
                    "width": 1
                  }
                },
                "splitLine": {
                  "lineStyle": {
                    "color": "rgb(239, 239, 239)",
                    "width": 1
                  }
                },
                "axisLabel": {
                  "show": true,
                  "textStyle": {}
                },
                "axisTick": {
                  "show": true,
                  "lineStyle": {}
                }
              }
            ],
            "series": [
              {
                "name": "数据1",
                "type": "bar"
              }, {
                "name": "数据2",
                "type": "bar"
              }, {
                "name": "数据3",
                "type": "bar"
              }
            ]
          }
        }
      ]
    },
    "ADVANCEECHART": {
      "label": "Echart图",
      "type": "advanceEchart",
      "source": "ADVANCEECHART",
      "parameters": {
        "theme": "default"
      },
      "advance": {
        "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var option = {\n            title: {\n                text: 'ECharts 入门示例'\n            },\n            tooltip: {},\n            legend: {\n                data:['销量']\n            },\n            xAxis: {\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n            },\n            yAxis: {},\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: [5, 20, 36, 10, 10, 20]\n            }]\n        };\n      event.target.render(option);\n    }\n  }\n}"
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      },
      "template": [
        {
          "label": "Echart图",
          "type": "advanceEchart",
          "source": "ADVANCEECHART",
          "type": "image",
          "url": "images/gauge/gauge1.png",
          "advance": {
            "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var option = {\n            title: {\n                text: 'ECharts 入门示例'\n            },\n            tooltip: {},\n            legend: {\n                data:['销量']\n            },\n            xAxis: {\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n            },\n            yAxis: {},\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: [5, 20, 36, 10, 10, 20]\n            }]\n        };\n      event.target.render(option);\n    }\n  }\n}"
          },
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          }
        }
      ]
    },
    "ECHARTGALLERY": {
      "label": "EchartGL图",
      "type": "echartGallery",
      "source": "ECHARTGALLERY",
      "advance": {
        "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a','7a', '8a', '9a', '10a', '11a',\n          '12p', '1p', '2p', '3p', '4p', '5p','6p', '7p', '8p', '9p', '10p', '11p'];\n      var days = ['1', '2', '3','4', '5', '6', '7'];\n      var data = [[12, 0, 10], [3, 3, 15], [4, 3, 20], [10, 1, 12], [3, 0, 14]]\n      var option = {\n        tooltip: {},\n        visualMap: {\n            max: 20,\n            inRange: {\n                color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n            }\n        },\n        xAxis3D: {\n            type: 'category',\n            data: hours\n        },\n        yAxis3D: {\n            type: 'category',\n            data: days\n        },\n        zAxis3D: {\n            type: 'value'\n        },\n        grid3D: {\n            boxWidth: 200,\n            boxHeight: 40,\n            boxDepth: 90,\n            light: {\n                main: {\n                    intensity: 1.2\n                },\n                ambient: {\n                    intensity: 0.3\n                }\n            }\n        },\n        series: [{\n            type: 'bar3D',\n            data: data.map(function (item) {\n                return {\n                    value: [item[1], item[0], item[2]]\n                }\n            }),\n            shading: 'color',\n\n            label: {\n                show: false,\n                textStyle: {\n                    fontSize: 16,\n                    borderWidth: 1\n                }\n            },\n\n            itemStyle: {\n                opacity: 0.8\n            },\n\n            emphasis: {\n                label: {\n                    textStyle: {\n                        fontSize: 20,\n                        color: '#900'\n                    }\n                },\n                itemStyle: {\n                    color: '#900'\n                }\n            }\n        }]\n    }\n    //   target.line3DOption()  3D 折线图\n    //   target.bar3DOption()  3D  柱状图\n    //   target.scatter3DOption()  3D 散点图\n      event.target.render(option);\n    }\n  }\n}"
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      },
      "template": [
        {
          "label": "EchartGL图",
          "type": "echartGallery",
          "source": "ECHARTGALLERY",
          "type": "image",
          "url": "images/gauge/gauge1.png",
          "advance": {
            "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a','7a', '8a', '9a', '10a', '11a',\n          '12p', '1p', '2p', '3p', '4p', '5p','6p', '7p', '8p', '9p', '10p', '11p'];\n      var days = ['1', '2', '3','4', '5', '6', '7'];\n      var data = [[12, 0, 10], [3, 3, 15], [4, 3, 20], [10, 1, 12], [3, 0, 14]]\n      var option = {\n        tooltip: {},\n        visualMap: {\n            max: 20,\n            inRange: {\n                color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n            }\n        },\n        xAxis3D: {\n            type: 'category',\n            data: hours\n        },\n        yAxis3D: {\n            type: 'category',\n            data: days\n        },\n        zAxis3D: {\n            type: 'value'\n        },\n        grid3D: {\n            boxWidth: 200,\n            boxHeight: 40,\n            boxDepth: 90,\n            light: {\n                main: {\n                    intensity: 1.2\n                },\n                ambient: {\n                    intensity: 0.3\n                }\n            }\n        },\n        series: [{\n            type: 'bar3D',\n            data: data.map(function (item) {\n                return {\n                    value: [item[1], item[0], item[2]]\n                }\n            }),\n            shading: 'color',\n\n            label: {\n                show: false,\n                textStyle: {\n                    fontSize: 16,\n                    borderWidth: 1\n                }\n            },\n\n            itemStyle: {\n                opacity: 0.8\n            },\n\n            emphasis: {\n                label: {\n                    textStyle: {\n                        fontSize: 20,\n                        color: '#900'\n                    }\n                },\n                itemStyle: {\n                    color: '#900'\n                }\n            }\n        }]\n    }\n    //   target.line3DOption()  3D 折线图\n    //   target.bar3DOption()  3D  柱状图\n    //   target.scatter3DOption()  3D 散点图\n      event.target.render(option);\n    }\n  }\n}"
          },
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          }
        }
      ]
    },
    "SANKEYCHART": {
      "label": "自定义视图",
      "type": "echart2",
      "source": "SANKEYCHART",
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "explainer": "function(data){}",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": {}
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timespan": {
          "value": 24,
          "unit": "hour"
        },
        "frequency": {
          "value": 30,
          "unit": "minute"
        },
        "aggregate_rule": 0,
        "aggregate_instance": [
          "instance1"
        ],
        "aggregate_period": 15,
        "aggregate_type": [
          1
        ],
        "autoFillBlank": true,
        "format": "年月日",
        "series": {
          "manual": {
            "links": [],
            "nodes": []
          },
          "bind": "(function (source){\n  return source.time.getSeries();\n})"
        }
      },
      "parameters": {
        "title": "桑基图",
        "subtitle": ""
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "text": "基础桑基图",
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "axis"
        },
        "grid": [
          {
          }
        ],
        "series": [
          {
            "name": "数据1",
            "type": "sankey"
          }
        ]
      }
    },
    "GAUGECHART": {
      "label": "仪表盘",
      "type": "echart",
      "source": "GAUGECHART",
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "category": "ci",
        "custom_category": "",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": ""
      },
      "parameters": {
        "title": "基础柱状图",
        "subtitle": ""
      },
      "data": {
        "applied": false,
        "model": null,
        "multipleCi": true,
        "multipleKpi": false,
        "resource": [
          null
        ],
        "modelType": 0,
        "resfilltype": "manual",
        "series": {
          "manual": [
            {
              "name": "仪表盘1",
              "data": [
                {
                  "name": "",
                  "value": 50
                }
              ]
            }, {
              "name": "仪表盘2",
              "data": [
                {
                  "name": "",
                  "value": 90
                }
              ]
            }, {
              "name": "仪表盘3",
              "data": [
                {
                  "name": "",
                  "value": 22
                }
              ]
            }
          ],
          "bind": "(function (source){\n  return source.ci.getSeries();\n})"
        }
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "500px"
      },
      "echart": {
        "general": {},
        "title": {
          "show": false,
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          },
          "textAlign": "middle",
          "padding": 30,
          "left": "50%",
          "text": "基础饼图",
          "subtext": ""
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "item"
        },
        "series": [
          {
            "type": "gauge",
            "center": [
              "50%",
              "50%"
            ],
            "label": {
              "normal": {
                "show": false
              }
            },
            "markPoint": {
              "data": []
            }
          }, {
            "type": "gauge",
            "radius": "55%",
            "startAngle": "315",
            "endAngle": "45",
            "center": [
              "30%",
              "50%"
            ],
            "markPoint": {
              "data": []
            }
          }, {
            "type": "gauge",
            "radius": "55%",
            "startAngle": "135",
            "endAngle": "-135",
            "center": [
              "70%",
              "50%"
            ],
            "markPoint": {
              "data": []
            }
          }
        ]
      },
      "template": [
        {
          "label": "基础仪表",
          "type": "image",
          "url": "images/gauge/gauge1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "500px"
          },
          "echart": {
            "general": {},
            "title": {
              "show": false,
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              },
              "textAlign": "middle",
              "padding": 30,
              "left": "50%",
              "text": "基础饼图",
              "subtext": ""
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "item"
            },
            "series": [
              {
                "type": "gauge",
                "center": [
                  "50%",
                  "50%"
                ],
                "label": {
                  "normal": {
                    "show": false
                  }
                },
                "markPoint": {
                  "data": []
                }
              }, {
                "type": "gauge",
                "radius": "55%",
                "startAngle": "315",
                "endAngle": "45",
                "center": [
                  "30%",
                  "50%"
                ],
                "markPoint": {
                  "data": []
                }
              }, {
                "type": "gauge",
                "radius": "55%",
                "startAngle": "135",
                "endAngle": "-135",
                "center": [
                  "70%",
                  "50%"
                ],
                "markPoint": {
                  "data": []
                }
              }
            ]
          }
        }
      ]
    },
    "PIECHART": {
      "label": "饼图",
      "type": "echart",
      "source": "PIECHART",
      "help": "../pdf/pie.pdf",
      "advance": {
        "variable": "",
        "getfunction": "kpiDataService.getValueList",
        "category": "ci",
        "custom_category": "",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ],
        "expression": ""
      },
      "data": {
        "applied": false,
        "aggregate_rule": 0,
        "aggregate_instance": [],
        "aggregate_type": [
          1
        ],
        "autoFillBlank": true,
        "model": null,
        "resource": [
          null
        ],
        "modelType": 0,
        "resfilltype": "manual",
        "legend": {
          "manual": [
            "A车间",
            "B车间",
            "C车间",
            "A车间－零件1",
            "A车间－零件2",
            "A车间－零件3",
            "B车间－零件1",
            "B车间－零件2",
            "C车间－零件1",
            "C车间－零件2",
            "C车间－零件3",
            "C车间－零件4"
          ],
          "bind": "(function (source){\n console.log(source)\n return source.ci.getSeries();\n})"
        },
        "series": {
          "manual": [
            {
              "name": "工厂A产量",
              "data": [
                {
                  "name": "A车间",
                  "value": 3300
                }, {
                  "name": "B车间",
                  "value": 2700
                }, {
                  "name": "C车间",
                  "value": 4100
                }
              ]
            }, {
              "name": "具体产量",
              "data": [
                {
                  "name": "A车间－零件1",
                  "value": 1500
                }, {
                  "name": "A车间－零件2",
                  "value": 1200
                }, {
                  "name": "A车间－零件3",
                  "value": 600
                }, {
                  "name": "B车间－零件1",
                  "value": 900
                }, {
                  "name": "B车间－零件2",
                  "value": 1800
                }, {
                  "name": "C车间－零件1",
                  "value": 600
                }, {
                  "name": "C车间－零件2",
                  "value": 900
                }, {
                  "name": "C车间－零件3",
                  "value": 1200
                }, {
                  "name": "C车间－零件4",
                  "value": 1400
                }
              ]
            }
          ],
          "bind": "(function (source){\n  return source.ci.getSeries();\n})"
        }
      },
      "parameters": {
        "title": "基础饼图",
        "subtitle": ""
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "400px"
      },
      "echart": {
        "general": {},
        "title": {
          "show": false,
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          },
          "textAlign": "middle",
          "padding": 30,
          "left": "50%",
          "text": "基础饼图",
          "subtext": ""
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "item"
        },
        "legend": {
          "left": "1%",
          "top": "2%",
          "orient": "vertical"
        },
        "series": [
          {
            "name": "数据1",
            "center": [
              "30%",
              "50%"
            ],
            "radius": [
              0,
              "75%"
            ],
            "type": "pie"
          }, {
            "name": "数据2",
            "center": [
              "70%",
              "50%"
            ],
            "radius": [
              0,
              "75%"
            ],
            "type": "pie"
          }
        ]
      },
      "template": [
        {
          "label": "基础饼图",
          "type": "image",
          "url": "images/pie/pie1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "400px"
          },
          "echart": {
            "general": {},
            "title": {
              "show": false,
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              },
              "textAlign": "middle",
              "padding": 30,
              "left": "50%",
              "text": "基础饼图",
              "subtext": ""
            },
            "tooltip": {
              "trigger": "axis"
            },
            "legend": {
              "left": "1%",
              "top": "2%",
              "orient": "vertical"
            },
            "series": [
              {
                "name": "数据1",
                "center": [
                  "30%",
                  "50%"
                ],
                "radius": [
                  0,
                  "75%"
                ],
                "type": "pie"
              }, {
                "name": "数据2",
                "center": [
                  "70%",
                  "50%"
                ],
                "radius": [
                  0,
                  "75%"
                ],
                "type": "pie"
              }
            ]
          }
        }, {
          "label": "基础饼图",
          "type": "image",
          "url": "images/pie/pie3.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "400px"
          },
          "echart": {
            "general": {},
            "title": {
              "show": false,
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              },
              "textAlign": "middle",
              "padding": 30,
              "left": "50%",
              "text": "基础饼图",
              "subtext": ""
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "item"
            },
            "legend": {
              "left": "1%",
              "top": "2%",
              "orient": "vertical"
            },
            "series": [
              {
                "name": "数据1",
                "center": [
                  "50%",
                  "50%"
                ],
                "radius": [
                  0,
                  "35%"
                ],
                "label": {
                  "normal": {
                    "position": "inside"
                  }
                },
                "type": "pie"
              }, {
                "name": "数据2",
                "center": [
                  "50%",
                  "50%"
                ],
                "radius": [
                  "45%",
                  "75%"
                ],
                "type": "pie"
              }
            ]
          }
        }, {
          "label": "基础饼图",
          "type": "image",
          "url": "images/pie/pie2.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "400px"
          },
          "echart": {
            "general": {},
            "title": {
              "show": false,
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              },
              "textAlign": "middle",
              "padding": 30,
              "left": "50%",
              "text": "基础饼图",
              "subtext": ""
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "item"
            },
            "legend": {
              "left": "1%",
              "top": "2%",
              "orient": "vertical"
            },
            "series": [
              {
                "name": "数据1",
                "avoidLabelOverlap": false,
                "center": [
                  "30%",
                  "50%"
                ],
                "radius": [
                  "45%",
                  "75%"
                ],
                "label": {
                  "normal": {
                    "show": false,
                    "position": "center"
                  },
                  "emphasis": {
                    "show": true,
                    "textStyle": {
                      "fontSize": 30,
                      "fontWeight": "bold"
                    }
                  }
                },
                "type": "pie"
              }, {
                "name": "数据2",
                "avoidLabelOverlap": false,
                "center": [
                  "70%",
                  "50%"
                ],
                "radius": [
                  "45%",
                  "75%"
                ],
                "label": {
                  "normal": {
                    "show": false,
                    "position": "center"
                  },
                  "emphasis": {
                    "show": true,
                    "textStyle": {
                      "fontSize": 30,
                      "fontWeight": "bold"
                    }
                  }
                },
                "type": "pie"
              }
            ]
          }
        }, {
          "label": "南丁格尔图",
          "type": "image",
          "url": "images/pie/pie4.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "400px"
          },
          "echart": {
            "general": {},
            "title": {
              "show": false,
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              },
              "textAlign": "middle",
              "padding": 30,
              "left": "50%",
              "text": "基础饼图",
              "subtext": ""
            },
            "toolbox": {},
            "tooltip": {
              "trigger": "item"
            },
            "legend": {
              "left": "1%",
              "top": "2%",
              "orient": "vertical"
            },
            "series": [
              {
                "name": "数据1",
                "avoidLabelOverlap": false,
                "center": [
                  "30%",
                  "50%"
                ],
                "radius": [
                  "20%",
                  "75%"
                ],
                "roseType": "radius",
                "type": "pie"
              }, {
                "name": "数据2",
                "avoidLabelOverlap": false,
                "center": [
                  "70%",
                  "50%"
                ],
                "radius": [
                  "20%",
                  "75%"
                ],
                "roseType": "radius",
                "type": "pie"
              }
            ]
          }
        }
      ]
    },
    "SCATTERCHART": {
      "general": {},
      "label": "散点图",
      "type": "echart",
      "source": "SCATTERCHART",
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "category": "scatter",
        "custom_category": "scatter_normal",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ]
      },
      "data": {
        "applied": false,
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timespan": {
          "value": 24,
          "unit": "hour"
        },
        "frequency": {
          "value": 30,
          "unit": "minute"
        },
        "aggregate_rule": 0,
        "aggregate_instance": [
          "instance1"
        ],
        "aggregate_period": 15,
        "aggregate_type": [
          1
        ],
        "autoFillBlank": true,
        "format": "年月日",
        "legend": {
          "manual": [
            "第一组",
            "第二组"
          ],
          "bind": "(function (source){\n  return source.scatter.getLegend();\n})"
        },
        "xAxisType": "value",
        "xAxis": {
          "manual": [],
          "bind": ""
        },
        "yAxisType": "value",
        "yAxis": {
          "manual": [],
          "bind": ""
        },
        "series": {
          "manual": [
            {
              "name": "第一组",
              "data": [[
                  161.2,
                  51.6
                ], [
                  167.5,
                  59.0
                ], [
                  159.5,
                  49.2
                ], [
                  157.0,
                  63.0
                ], [
                  155.8,
                  53.6
                ],
                [
                  170.0,
                  59.0
                ], [
                  159.1,
                  47.6
                ], [
                  166.0,
                  69.8
                ], [
                  176.2,
                  66.8
                ], [
                  160.2,
                  75.2
                ],
                [
                  172.5,
                  55.2
                ], [
                  170.9,
                  54.2
                ], [
                  172.9,
                  62.5
                ], [
                  153.4,
                  42.0
                ], [
                  160.0,
                  50.0
                ],
                [
                  147.2,
                  49.8
                ], [
                  168.2,
                  49.2
                ], [
                  175.0,
                  73.2
                ], [
                  157.0,
                  47.8
                ], [
                  167.6,
                  68.8
                ],
                [
                  159.5,
                  50.6
                ], [
                  175.0,
                  82.5
                ], [
                  166.8,
                  57.2
                ], [
                  176.5,
                  87.8
                ], [
                  170.2,
                  72.8
                ],
                [
                  174.0,
                  54.5
                ], [
                  173.0,
                  59.8
                ], [
                  179.9,
                  67.3
                ], [
                  170.5,
                  67.8
                ], [
                  160.0,
                  47.0
                ],
                [
                  154.4,
                  46.2
                ], [
                  162.0,
                  55.0
                ], [
                  176.5,
                  83.0
                ], [
                  160.0,
                  54.4
                ], [
                  152.0,
                  45.8
                ],
                [
                  162.1,
                  53.6
                ], [
                  170.0,
                  73.2
                ], [
                  160.2,
                  52.1
                ], [
                  161.3,
                  67.9
                ], [
                  166.4,
                  56.6
                ],
                [
                  168.9,
                  62.3
                ], [
                  163.8,
                  58.5
                ], [
                  167.6,
                  54.5
                ], [
                  160.0,
                  50.2
                ], [
                  161.3,
                  60.3
                ],
                [
                  167.6,
                  58.3
                ], [
                  165.1,
                  56.2
                ], [
                  160.0,
                  50.2
                ], [
                  170.0,
                  72.9
                ], [
                  157.5,
                  59.8
                ],
                [
                  167.6,
                  61.0
                ], [
                  160.7,
                  69.1
                ], [
                  163.2,
                  55.9
                ], [
                  152.4,
                  46.5
                ], [
                  157.5,
                  54.3
                ],
                [
                  168.3,
                  54.8
                ], [
                  180.3,
                  60.7
                ], [
                  165.5,
                  60.0
                ], [
                  165.0,
                  62.0
                ], [
                  164.5,
                  60.3
                ],
                [
                  156.0,
                  52.7
                ], [
                  160.0,
                  74.3
                ], [
                  163.0,
                  62.0
                ], [
                  165.7,
                  73.1
                ], [
                  161.0,
                  80.0
                ],
                [
                  162.0,
                  54.7
                ], [
                  166.0,
                  53.2
                ], [
                  174.0,
                  75.7
                ], [
                  172.7,
                  61.1
                ], [
                  167.6,
                  55.7
                ],
                [
                  151.1,
                  48.7
                ], [
                  164.5,
                  52.3
                ], [
                  163.5,
                  50.0
                ], [
                  152.0,
                  59.3
                ], [
                  169.0,
                  62.5
                ],
                [
                  164.0,
                  55.7
                ], [
                  161.2,
                  54.8
                ], [
                  155.0,
                  45.9
                ], [
                  170.0,
                  70.6
                ], [
                  176.2,
                  67.2
                ],
                [
                  170.0,
                  69.4
                ], [
                  162.5,
                  58.2
                ], [
                  170.3,
                  64.8
                ], [
                  164.1,
                  71.6
                ], [
                  169.5,
                  52.8
                ],
                [
                  163.2,
                  59.8
                ], [
                  154.5,
                  49.0
                ], [
                  159.8,
                  50.0
                ], [
                  173.2,
                  69.2
                ], [
                  170.0,
                  55.9
                ],
                [
                  161.4,
                  63.4
                ], [
                  169.0,
                  58.2
                ], [
                  166.2,
                  58.6
                ], [
                  159.4,
                  45.7
                ], [
                  162.5,
                  52.2
                ],
                [
                  159.0,
                  48.6
                ], [
                  162.8,
                  57.8
                ], [
                  159.0,
                  55.6
                ], [
                  179.8,
                  66.8
                ], [
                  162.9,
                  59.4
                ],
                [
                  161.0,
                  53.6
                ], [
                  151.1,
                  73.2
                ], [
                  168.2,
                  53.4
                ], [
                  168.9,
                  69.0
                ], [
                  173.2,
                  58.4
                ],
                [
                  171.8,
                  56.2
                ], [
                  178.0,
                  70.6
                ], [
                  164.3,
                  59.8
                ], [
                  163.0,
                  72.0
                ], [
                  168.5,
                  65.2
                ],
                [
                  166.8,
                  56.6
                ], [
                  172.7,
                  105.2
                ], [
                  163.5,
                  51.8
                ], [
                  169.4,
                  63.4
                ], [
                  167.8,
                  59.0
                ],
                [
                  159.5,
                  47.6
                ], [
                  167.6,
                  63.0
                ], [
                  161.2,
                  55.2
                ], [
                  160.0,
                  45.0
                ], [
                  163.2,
                  54.0
                ],
                [
                  162.2,
                  50.2
                ], [
                  161.3,
                  60.2
                ], [
                  149.5,
                  44.8
                ], [
                  157.5,
                  58.8
                ], [
                  163.2,
                  56.4
                ],
                [
                  172.7,
                  62.0
                ], [
                  155.0,
                  49.2
                ], [
                  156.5,
                  67.2
                ], [
                  164.0,
                  53.8
                ], [
                  160.9,
                  54.4
                ],
                [
                  162.8,
                  58.0
                ], [
                  167.0,
                  59.8
                ], [
                  160.0,
                  54.8
                ], [
                  160.0,
                  43.2
                ], [
                  168.9,
                  60.5
                ],
                [
                  158.2,
                  46.4
                ], [
                  156.0,
                  64.4
                ], [
                  160.0,
                  48.8
                ], [
                  167.1,
                  62.2
                ], [
                  158.0,
                  55.5
                ],
                [
                  167.6,
                  57.8
                ], [
                  156.0,
                  54.6
                ], [
                  162.1,
                  59.2
                ], [
                  173.4,
                  52.7
                ], [
                  159.8,
                  53.2
                ],
                [
                  170.5,
                  64.5
                ], [
                  159.2,
                  51.8
                ], [
                  157.5,
                  56.0
                ], [
                  161.3,
                  63.6
                ], [
                  162.6,
                  63.2
                ],
                [
                  160.0,
                  59.5
                ], [
                  168.9,
                  56.8
                ], [
                  165.1,
                  64.1
                ], [
                  162.6,
                  50.0
                ], [
                  165.1,
                  72.3
                ],
                [
                  166.4,
                  55.0
                ], [
                  160.0,
                  55.9
                ], [
                  152.4,
                  60.4
                ], [
                  170.2,
                  69.1
                ], [
                  162.6,
                  84.5
                ],
                [
                  170.2,
                  55.9
                ], [
                  158.8,
                  55.5
                ], [
                  172.7,
                  69.5
                ], [
                  167.6,
                  76.4
                ], [
                  162.6,
                  61.4
                ],
                [
                  167.6,
                  65.9
                ], [
                  156.2,
                  58.6
                ], [
                  175.2,
                  66.8
                ], [
                  172.1,
                  56.6
                ], [
                  162.6,
                  58.6
                ],
                [
                  160.0,
                  55.9
                ], [
                  165.1,
                  59.1
                ], [
                  182.9,
                  81.8
                ], [
                  166.4,
                  70.7
                ], [
                  165.1,
                  56.8
                ],
                [
                  177.8,
                  60.0
                ], [
                  165.1,
                  58.2
                ], [
                  175.3,
                  72.7
                ], [
                  154.9,
                  54.1
                ], [
                  158.8,
                  49.1
                ],
                [
                  172.7,
                  75.9
                ], [
                  168.9,
                  55.0
                ], [
                  161.3,
                  57.3
                ], [
                  167.6,
                  55.0
                ], [
                  165.1,
                  65.5
                ],
                [
                  175.3,
                  65.5
                ], [
                  157.5,
                  48.6
                ], [
                  163.8,
                  58.6
                ], [
                  167.6,
                  63.6
                ], [
                  165.1,
                  55.2
                ],
                [
                  165.1,
                  62.7
                ], [
                  168.9,
                  56.6
                ], [
                  162.6,
                  53.9
                ], [
                  164.5,
                  63.2
                ], [
                  176.5,
                  73.6
                ],
                [
                  168.9,
                  62.0
                ], [
                  175.3,
                  63.6
                ], [
                  159.4,
                  53.2
                ], [
                  160.0,
                  53.4
                ], [
                  170.2,
                  55.0
                ],
                [
                  162.6,
                  70.5
                ], [
                  167.6,
                  54.5
                ], [
                  162.6,
                  54.5
                ], [
                  160.7,
                  55.9
                ], [
                  160.0,
                  59.0
                ],
                [
                  157.5,
                  63.6
                ], [
                  162.6,
                  54.5
                ], [
                  152.4,
                  47.3
                ], [
                  170.2,
                  67.7
                ], [
                  165.1,
                  80.9
                ],
                [
                  172.7,
                  70.5
                ], [
                  165.1,
                  60.9
                ], [
                  170.2,
                  63.6
                ], [
                  170.2,
                  54.5
                ], [
                  170.2,
                  59.1
                ],
                [
                  161.3,
                  70.5
                ], [
                  167.6,
                  52.7
                ], [
                  167.6,
                  62.7
                ], [
                  165.1,
                  86.3
                ], [
                  162.6,
                  66.4
                ],
                [
                  152.4,
                  67.3
                ], [
                  168.9,
                  63.0
                ], [
                  170.2,
                  73.6
                ], [
                  175.2,
                  62.3
                ], [
                  175.2,
                  57.7
                ],
                [
                  160.0,
                  55.4
                ], [
                  165.1,
                  104.1
                ], [
                  174.0,
                  55.5
                ], [
                  170.2,
                  77.3
                ], [
                  160.0,
                  80.5
                ],
                [
                  167.6,
                  64.5
                ], [
                  167.6,
                  72.3
                ], [
                  167.6,
                  61.4
                ], [
                  154.9,
                  58.2
                ], [
                  162.6,
                  81.8
                ],
                [
                  175.3,
                  63.6
                ], [
                  171.4,
                  53.4
                ], [
                  157.5,
                  54.5
                ], [
                  165.1,
                  53.6
                ], [
                  160.0,
                  60.0
                ],
                [
                  174.0,
                  73.6
                ], [
                  162.6,
                  61.4
                ], [
                  174.0,
                  55.5
                ], [
                  162.6,
                  63.6
                ], [
                  161.3,
                  60.9
                ],
                [
                  156.2,
                  60.0
                ], [
                  149.9,
                  46.8
                ], [
                  169.5,
                  57.3
                ], [
                  160.0,
                  64.1
                ], [
                  175.3,
                  63.6
                ],
                [
                  169.5,
                  67.3
                ], [
                  160.0,
                  75.5
                ], [
                  172.7,
                  68.2
                ], [
                  162.6,
                  61.4
                ], [
                  157.5,
                  76.8
                ],
                [
                  176.5,
                  71.8
                ], [
                  164.4,
                  55.5
                ], [
                  160.7,
                  48.6
                ], [
                  174.0,
                  66.4
                ], [
                  163.8,
                  67.3
                ]
              ]
            }, {
              "name": "第二组",
              "data": [[
                  174.0,
                  65.6
                ], [
                  175.3,
                  71.8
                ], [
                  193.5,
                  80.7
                ], [
                  186.5,
                  72.6
                ], [
                  187.2,
                  78.8
                ],
                [
                  181.5,
                  74.8
                ], [
                  184.0,
                  86.4
                ], [
                  184.5,
                  78.4
                ], [
                  175.0,
                  62.0
                ], [
                  184.0,
                  81.6
                ],
                [
                  180.0,
                  76.6
                ], [
                  177.8,
                  83.6
                ], [
                  192.0,
                  90.0
                ], [
                  176.0,
                  74.6
                ], [
                  174.0,
                  71.0
                ],
                [
                  184.0,
                  79.6
                ], [
                  192.7,
                  93.8
                ], [
                  171.5,
                  70.0
                ], [
                  173.0,
                  72.4
                ], [
                  176.0,
                  85.9
                ],
                [
                  176.0,
                  78.8
                ], [
                  180.5,
                  77.8
                ], [
                  172.7,
                  66.2
                ], [
                  176.0,
                  86.4
                ], [
                  173.5,
                  81.8
                ],
                [
                  178.0,
                  89.6
                ], [
                  180.3,
                  82.8
                ], [
                  180.3,
                  76.4
                ], [
                  164.5,
                  63.2
                ], [
                  173.0,
                  60.9
                ],
                [
                  183.5,
                  74.8
                ], [
                  175.5,
                  70.0
                ], [
                  188.0,
                  72.4
                ], [
                  189.2,
                  84.1
                ], [
                  172.8,
                  69.1
                ],
                [
                  170.0,
                  59.5
                ], [
                  182.0,
                  67.2
                ], [
                  170.0,
                  61.3
                ], [
                  177.8,
                  68.6
                ], [
                  184.2,
                  80.1
                ],
                [
                  186.7,
                  87.8
                ], [
                  171.4,
                  84.7
                ], [
                  172.7,
                  73.4
                ], [
                  175.3,
                  72.1
                ], [
                  180.3,
                  82.6
                ],
                [
                  182.9,
                  88.7
                ], [
                  188.0,
                  84.1
                ], [
                  177.2,
                  94.1
                ], [
                  172.1,
                  74.9
                ], [
                  167.0,
                  59.1
                ],
                [
                  169.5,
                  75.6
                ], [
                  174.0,
                  86.2
                ], [
                  172.7,
                  75.3
                ], [
                  182.2,
                  87.1
                ], [
                  164.1,
                  55.2
                ],
                [
                  163.0,
                  57.0
                ], [
                  171.5,
                  61.4
                ], [
                  184.2,
                  76.8
                ], [
                  174.0,
                  86.8
                ], [
                  174.0,
                  72.2
                ],
                [
                  177.0,
                  71.6
                ], [
                  186.0,
                  84.8
                ], [
                  167.0,
                  68.2
                ], [
                  171.8,
                  66.1
                ], [
                  182.0,
                  72.0
                ],
                [
                  167.0,
                  64.6
                ], [
                  177.8,
                  74.8
                ], [
                  164.5,
                  70.0
                ], [
                  192.0,
                  101.6
                ], [
                  175.5,
                  63.2
                ],
                [
                  171.2,
                  79.1
                ], [
                  181.6,
                  78.9
                ], [
                  167.4,
                  67.7
                ], [
                  181.1,
                  66.0
                ], [
                  177.0,
                  68.2
                ],
                [
                  174.5,
                  63.9
                ], [
                  177.5,
                  72.0
                ], [
                  170.5,
                  56.8
                ], [
                  182.4,
                  74.5
                ], [
                  197.1,
                  90.9
                ],
                [
                  180.1,
                  93.0
                ], [
                  175.5,
                  80.9
                ], [
                  180.6,
                  72.7
                ], [
                  184.4,
                  68.0
                ], [
                  175.5,
                  70.9
                ],
                [
                  180.6,
                  72.5
                ], [
                  177.0,
                  72.5
                ], [
                  177.1,
                  83.4
                ], [
                  181.6,
                  75.5
                ], [
                  176.5,
                  73.0
                ],
                [
                  175.0,
                  70.2
                ], [
                  174.0,
                  73.4
                ], [
                  165.1,
                  70.5
                ], [
                  177.0,
                  68.9
                ], [
                  192.0,
                  102.3
                ],
                [
                  176.5,
                  68.4
                ], [
                  169.4,
                  65.9
                ], [
                  182.1,
                  75.7
                ], [
                  179.8,
                  84.5
                ], [
                  175.3,
                  87.7
                ],
                [
                  184.9,
                  86.4
                ], [
                  177.3,
                  73.2
                ], [
                  167.4,
                  53.9
                ], [
                  178.1,
                  72.0
                ], [
                  168.9,
                  55.5
                ],
                [
                  157.2,
                  58.4
                ], [
                  180.3,
                  83.2
                ], [
                  170.2,
                  72.7
                ], [
                  177.8,
                  64.1
                ], [
                  172.7,
                  72.3
                ],
                [
                  165.1,
                  65.0
                ], [
                  186.7,
                  86.4
                ], [
                  165.1,
                  65.0
                ], [
                  174.0,
                  88.6
                ], [
                  175.3,
                  84.1
                ],
                [
                  185.4,
                  66.8
                ], [
                  177.8,
                  75.5
                ], [
                  180.3,
                  93.2
                ], [
                  180.3,
                  82.7
                ], [
                  177.8,
                  58.0
                ],
                [
                  177.8,
                  79.5
                ], [
                  177.8,
                  78.6
                ], [
                  177.8,
                  71.8
                ], [
                  177.8,
                  116.4
                ], [
                  163.8,
                  72.2
                ],
                [
                  188.0,
                  83.6
                ], [
                  198.1,
                  85.5
                ], [
                  175.3,
                  90.9
                ], [
                  166.4,
                  85.9
                ], [
                  190.5,
                  89.1
                ],
                [
                  166.4,
                  75.0
                ], [
                  177.8,
                  77.7
                ], [
                  179.7,
                  86.4
                ], [
                  172.7,
                  90.9
                ], [
                  190.5,
                  73.6
                ],
                [
                  185.4,
                  76.4
                ], [
                  168.9,
                  69.1
                ], [
                  167.6,
                  84.5
                ], [
                  175.3,
                  64.5
                ], [
                  170.2,
                  69.1
                ],
                [
                  190.5,
                  108.6
                ], [
                  177.8,
                  86.4
                ], [
                  190.5,
                  80.9
                ], [
                  177.8,
                  87.7
                ], [
                  184.2,
                  94.5
                ],
                [
                  176.5,
                  80.2
                ], [
                  177.8,
                  72.0
                ], [
                  180.3,
                  71.4
                ], [
                  171.4,
                  72.7
                ], [
                  172.7,
                  84.1
                ],
                [
                  172.7,
                  76.8
                ], [
                  177.8,
                  63.6
                ], [
                  177.8,
                  80.9
                ], [
                  182.9,
                  80.9
                ], [
                  170.2,
                  85.5
                ],
                [
                  167.6,
                  68.6
                ], [
                  175.3,
                  67.7
                ], [
                  165.1,
                  66.4
                ], [
                  185.4,
                  102.3
                ], [
                  181.6,
                  70.5
                ],
                [
                  172.7,
                  95.9
                ], [
                  190.5,
                  84.1
                ], [
                  179.1,
                  87.3
                ], [
                  175.3,
                  71.8
                ], [
                  170.2,
                  65.9
                ],
                [
                  193.0,
                  95.9
                ], [
                  171.4,
                  91.4
                ], [
                  177.8,
                  81.8
                ], [
                  177.8,
                  96.8
                ], [
                  167.6,
                  69.1
                ],
                [
                  167.6,
                  82.7
                ], [
                  180.3,
                  75.5
                ], [
                  182.9,
                  79.5
                ], [
                  176.5,
                  73.6
                ], [
                  186.7,
                  91.8
                ],
                [
                  188.0,
                  84.1
                ], [
                  188.0,
                  85.9
                ], [
                  177.8,
                  81.8
                ], [
                  174.0,
                  82.5
                ], [
                  177.8,
                  80.5
                ],
                [
                  171.4,
                  70.0
                ], [
                  185.4,
                  81.8
                ], [
                  185.4,
                  84.1
                ], [
                  188.0,
                  90.5
                ], [
                  188.0,
                  91.4
                ],
                [
                  182.9,
                  89.1
                ], [
                  176.5,
                  85.0
                ], [
                  175.3,
                  69.1
                ], [
                  175.3,
                  73.6
                ], [
                  188.0,
                  80.5
                ],
                [
                  188.0,
                  82.7
                ], [
                  175.3,
                  86.4
                ], [
                  170.5,
                  67.7
                ], [
                  179.1,
                  92.7
                ], [
                  177.8,
                  93.6
                ],
                [
                  175.3,
                  70.9
                ], [
                  182.9,
                  75.0
                ], [
                  170.8,
                  93.2
                ], [
                  188.0,
                  93.2
                ], [
                  180.3,
                  77.7
                ],
                [
                  177.8,
                  61.4
                ], [
                  185.4,
                  94.1
                ], [
                  168.9,
                  75.0
                ], [
                  185.4,
                  83.6
                ], [
                  180.3,
                  85.5
                ],
                [
                  174.0,
                  73.9
                ], [
                  167.6,
                  66.8
                ], [
                  182.9,
                  87.3
                ], [
                  160.0,
                  72.3
                ], [
                  180.3,
                  88.6
                ],
                [
                  167.6,
                  75.5
                ], [
                  186.7,
                  101.4
                ], [
                  175.3,
                  91.1
                ], [
                  175.3,
                  67.3
                ], [
                  175.9,
                  77.7
                ],
                [
                  175.3,
                  81.8
                ], [
                  179.1,
                  75.5
                ], [
                  181.6,
                  84.5
                ], [
                  177.8,
                  76.6
                ], [
                  182.9,
                  85.0
                ],
                [
                  177.8,
                  102.5
                ], [
                  184.2,
                  77.3
                ], [
                  179.1,
                  71.8
                ], [
                  176.5,
                  87.9
                ], [
                  188.0,
                  94.3
                ],
                [
                  174.0,
                  70.9
                ], [
                  167.6,
                  64.5
                ], [
                  170.2,
                  77.3
                ], [
                  167.6,
                  72.3
                ], [
                  188.0,
                  87.3
                ],
                [
                  174.0,
                  80.0
                ], [
                  176.5,
                  82.3
                ], [
                  180.3,
                  73.6
                ], [
                  167.6,
                  74.1
                ], [
                  188.0,
                  85.9
                ],
                [
                  180.3,
                  73.2
                ], [
                  167.6,
                  76.3
                ], [
                  183.0,
                  65.9
                ], [
                  183.0,
                  90.9
                ], [
                  179.1,
                  89.1
                ],
                [
                  170.2,
                  62.3
                ], [
                  177.8,
                  82.7
                ], [
                  179.1,
                  79.1
                ], [
                  190.5,
                  98.2
                ], [
                  177.8,
                  84.1
                ],
                [
                  180.3,
                  83.2
                ], [
                  180.3,
                  83.2
                ]
              ]
            }
          ],
          "bind": "(function (source){\n  return source.scatter.getSeries();\n})"
        }
      },
      "parameters": {
        "title": "主标题",
        "subtitle": "附标题"
      },
      "style": {
        "margin": "auto",
        "width": "100%",
        "height": "300px"
      },
      "echart": {
        "general": {},
        "title": {
          "padding": 30,
          "textStyle": {
            "fontWeight": "bold",
            "fontSize": 16
          }
        },
        "toolbox": {},
        "tooltip": {
          "trigger": "axis"
        },
        "legend": {
          "data": [
            "数据1",
            "数据2"
          ]
        },
        "grid": [
          {
          }
        ],
        "xAxis": [
          {
            "type": "value",
            "min": "auto",
            "max": "auto",
            "boundaryGap": false
          }
        ],
        "yAxis": [
          {
            "type": "value",
            "min": "auto",
            "max": "auto",
            "boundaryGap": false
          }
        ],
        "series": [
          {
            "name": "数据1",
            "type": "scatter",
            "symbolSize": 6,
            "markPoint": {
              "data": [
                {
                  "name": "最大值",
                  "type": "max"
                }, {
                  "name": "最小值",
                  "type": "min"
                }
              ]
            }
          }, {
            "name": "数据2",
            "type": "scatter",
            "symbolSize": 6,
            "markPoint": {
              "data": [
                {
                  "name": "最大值",
                  "type": "max"
                }, {
                  "name": "最小值",
                  "type": "min"
                }
              ]
            }
          }
        ]
      },
      "template": [
        {
          "label": "基础散点图",
          "type": "image",
          "url": "images/line/line1.png",
          "style": {
            "margin": "auto",
            "width": "100%",
            "height": "300px"
          },
          "echart": {
            "general": {},
            "title": {
              "padding": 30,
              "text": "基础散点图变化",
              "textStyle": {
                "fontWeight": "bold",
                "fontSize": 16
              }
            },
            "legend": {
              "data": [
                "数据1",
                "数据2"
              ]
            },
            "grid": [
              {
              }
            ],
            "toolbox": {},
            "tooltip": {
              "trigger": "axis"
            },
            "xAxis": [
              {
                "type": "value",
                "min": "auto",
                "max": "auto",
                "boundaryGap": false
              }
            ],
            "yAxis": [
              {
                "type": "value",
                "min": "auto",
                "max": "auto",
                "boundaryGap": false
              }
            ],
            "series": [
              {
                "name": "数据1",
                "type": "scatter",
                "symbolSize": 6,
                "markPoint": {
                  "data": [
                    {
                      "name": "最大值",
                      "type": "max"
                    }, {
                      "name": "最小值",
                      "type": "min"
                    }
                  ]
                }
              }, {
                "name": "数据2",
                "type": "scatter",
                "symbolSize": 6,
                "markPoint": {
                  "data": [
                    {
                      "name": "最大值",
                      "type": "max"
                    }, {
                      "name": "最小值",
                      "type": "min"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "KCHART": {
      "label": "K线图",
      "type": "kchart",
      "source": "KCHART",
      "valueGroup": {
        "label": "K线数据",
        "type": "group",
        "data": {
          "value": "custom",
          "option": [
            {
              "label": "自定义",
              "value": "custom"
            }, {
              "label": "(数据源)数据列 ",
              "value": "value"
            }
          ]
        },
        "custom": [
          {
            "id": 0,
            "type": "groupValue",
            "attributes": {
              "value": {
                "label": "K线数据",
                "value": "22,10,5,10,4,8,3",
                "type": "standardInput"
              },
              "fillType": {
                "label": "填充模式",
                "value": "line",
                "type": "select",
                "option": [
                  {
                    "label": "线性填充",
                    "value": "line"
                  }, {
                    "label": "面积填充",
                    "value": "area"
                  }
                ]
              },
              "marker": {
                "label": "标识",
                "type": "select",
                "value": "none",
                "option": [
                  {
                    "label": "不显示",
                    "value": "none"
                  }, {
                    "label": "标注最大值",
                    "value": "max"
                  }, {
                    "label": "标注最小值",
                    "value": "min"
                  }, {
                    "label": "最大和最小值",
                    "value": "both"
                  }
                ]
              },
              "color": {
                "label": "线颜色",
                "value": "",
                "type": "colorPicker"
              }
            }
          }
        ],
        "value": []
      },
      "attributes": {
        "anchor": {
          "default": "没有设置锚点",
          "applied": false,
          "label": "锚点",
          "value": "multiSelect",
          "type": "standardInput",
          "maxlength": 30,
          "placeholder": "锚点名称最多30英文字符",
          "__onChange__": "anchorChange"
        },
        "linkData": {
          "label": "链接锚点",
          "value": "none",
          "type": "select",
          "disable": false
        },
        "minTimespan": {
          "label": "采样频率",
          "value": 86400,
          "applied": true,
          "default": "默认采样时间86400（24小时）",
          "type": "numberInput",
          "min": 0,
          "maxlength": 7,
          "unit": "个／秒",
          "replace": {
            "0": "自动设定"
          }
        },
        "timespan": {
          "label": "时间段",
          "value": 168,
          "type": "numberInput",
          "min": 0,
          "maxlength": 5,
          "unit": "小时"
        },
        "title": {
          "applied": true,
          "default": "隐藏主标题",
          "label": "主标题",
          "value": "主标题",
          "type": "standardInput"
        },
        "subtitle": {
          "applied": true,
          "label": "副标题",
          "default": "隐藏副标题",
          "value": "副标题",
          "type": "standardInput"
        }
      },
      "data": {
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timeSpan": 3600
      }
    },
    "RADARCHART": {
      "label": "雷达图",
      "type": "radarchart",
      "source": "RADARCHART",
      "advance": {
        "getfunction": "kpiDataService.getValueList",
        "category": "ci",
        "custom_category": "",
        "condition": [
          "kpi",
          "{object:kpiQueryModel}"
        ]
      },
      "valueGroup": {
        "label": "雷达数据",
        "type": "group",
        "data": {
          "value": "custom",
          "option": [
            {
              "label": "自定义",
              "value": "custom"
            }, {
              "label": "(数据源)数据列 ",
              "value": "value"
            }
          ]
        },
        "custom": [
          {
            "id": 0,
            "type": "groupValue",
            "attributes": {
              "value": {
                "label": "雷达图数据",
                "value": "22,10,5,10,4,8,3",
                "type": "standardInput"
              },
              "legend": {
                "label": "图例名称",
                "value": "图例",
                "type": "standardInput"
              }
            }
          }
        ],
        "value": []
      },
      "attributes": {
        "anchor": {
          "default": "没有设置锚点",
          "applied": false,
          "label": "锚点",
          "value": "multiSelect",
          "type": "standardInput",
          "maxlength": 30,
          "placeholder": "锚点名称最多30英文字符",
          "__onChange__": "anchorChange"
        },
        "linkData": {
          "label": "链接锚点",
          "value": "none",
          "type": "select",
          "disable": false
        },
        "polar": {
          "label": "线属性",
          "value": "指标1, 指标2, 指标3, 指标4, 指标5, 指标6",
          "type": "standardInput",
          "data": {
            "value": "none",
            "option": [
              {
                "label": "自定义",
                "value": "none"
              }, {
                "label": "(数据源)数据列 ",
                "value": "value"
              }
            ]
          }
        },
        "max": {
          "applied": true,
          "default": "自动设定",
          "label": "属性最大值",
          "value": 100,
          "type": "numberInput"
        },
        "title": {
          "applied": true,
          "default": "隐藏主标题",
          "label": "主标题",
          "value": "主标题",
          "type": "standardInput"
        },
        "subtitle": {
          "applied": true,
          "label": "副标题",
          "default": "隐藏副标题",
          "value": "副标题",
          "type": "standardInput"
        },
        "parameters": {
          "label": "属性名",
          "value": "属性",
          "type": "standardInput"
        }
      },
      "data": {
        "model": null,
        "resource": [
          null
        ],
        "modelDisable": true,
        "modelType": 0,
        "resfilltype": "manual",
        "timeSpan": 3600
      }
    },
    "FEATURECHART": {
      "label": "性能曲线",
      "type": "featurechart",
      "source": "FEATURECHART",
      "parameters": {
        "type": 1
      },
      "style": {
        "margin": "auto",
        "height": 400
      }
    }
  },
  "templates": [
    {
      "name": "standardDashboard",
      "json": "standardDashboard.json",
      "title": "单页模板1",
      "src": "url(images/template1.jpg)"
    }, {
      "name": "machineDashboard",
      "json": "machineDashboard.json",
      "title": "单页模板2",
      "src": "url(images/template2.jpg)"
    }, {
      "name": "factoryDashboard",
      "json": "factoryDashboard.json",
      "title": "单页模板3",
      "src": "url(images/template3.jpg)"
    }, {
      "name": "waterDashboard",
      "json": "waterDashboard.json",
      "title": "单页模板4",
      "src": "url(images/template4.jpg)"
    }, {
      "name": "ouke",
      "json": "ouke.json",
      "title": "地图三级导航模板",
      "src": "url(images/ouke_template.png)"
    }, {
      "name": "yunneng",
      "json": "yunneng.json",
      "title": "可查询地图导航模板",
      "src": "url(images/yunneng_template.png)"
    }, {
      "name": "ps_steel",
      "json": "ps_steel.json",
      "title": "钢铁行业视图",
      "src": "url(images/gangtieEchart.jpg)"
    }
  ],
  "serviceTemp": [
    {
      "name": "standardDashboard",
      "json": "standardDashboard.json",
      "title": "标准设备后服务模板",
      "src": "url(images/template1.jpg)"
    }
  ]
}