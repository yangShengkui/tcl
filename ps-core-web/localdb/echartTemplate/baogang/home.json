{
  "version": "V_2",
  "groups": [
    {
      "id": "0",
      "label": "服务中心",
      "path": "index",
      "layout": {
        "type": "column",
        "children": [
          {
            "type": "row",
            "source": "ROW",
            "parameters": {
              "alignment": "bootstrap"
            },
            "style": {},
            "children": [
              {
                "type": "column",
                "children": [
                  {
                    "label": "组态视图",
                    "type": "topo",
                    "source": "TOPO",
                    "advance": {
                      "variable": "",
                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var lngsstart = 72; var lngswidth = 65;\n      var latsstart = 13.5; var latswidth = 40;\n      var lngs = [lngsstart, lngsstart + lngswidth];\n      var lats = [latsstart, latsstart + latswidth];\n      var rootScope = target.getRootScope();\n      target.render();\n      target.on(\"$loadCiKpiComplete\", function(cells){\n        target.getDomainAreaLineTree(function(domaintree){\n          var domains = domaintree.children.sort(function(a,b){\n            var y1 = a.$attr(\"values/latitude\");\n            var y2 = b.$attr(\"values/latitude\");\n            return y2 - y1;\n          });\n          var WIDTH = 1200, HEIGHT = 700;\n          var ci = domains.map(function(elem){\n            return elem.id;\n          });\n          //var kpi = [999999, 3017];\n          var kpi = [999999, 3014];\n          target.getKpiValueCi(ci, kpi, function(valuelist){\n            var create3Dbar = function(domain){\n              var name = domain.label;\n              var lng = domain.values.longitude;\n              var lat = domain.values.latitude;\n              var deviceAll = domain.description;\n              if(deviceAll == \" \") {\n                  deviceAll = 0;\n              }\n              target.create3Dbar(name, function(ins){\n                  debugger;\n                  var find = valuelist.find(function(value){\n                      return value.nodeId == domain.id && value.kpiCode == 999999;\n                  }) || {};\n                //   var persentage = valuelist.find(function(value){\n                //       return value.nodeId == domain.id && value.kpiCode == 3017;\n                //   }) || {};\n                \n                \n                  var deviceNum = valuelist.find(function(value){\n                      return value.nodeId == domain.id && value.kpiCode == 3014;\n                  }) || {};\n                  console.log(deviceNum.value);\n                  console.log(deviceAll);\n                  if(deviceNum.value > deviceAll) {\n                      deviceNum.value = deviceAll;\n                  }\n                 var persentage = (deviceNum.value / deviceAll) * 100;\n                  \n                  \n                ins.setAlarmStatus(find.value);\n                //ins.setValue(persentage.value || 0);\n                ins.setValue(persentage || 0);\n                //console.log(ins)\n                console.log(find.value);\n                console.log(persentage.value);\n                var x = (lng - lngs[0]) / (lngs[1] - lngs[0]) * 1200;\n                var y = (lats[1] - lat) / (lats[1] - lats[0]) * 700;\n                ins.setPos({\n                  x : x,\n                  y : y\n                })\n                //console.log(x, y);\n                //if(persentage) {\n                ins.on(\"click\", function(event){\n                  target.navigateTo(\"index\", {\n                    main : [0, \"navigate\"],\n                    id : domain.id\n                  }, \"self\");\n                })\n                //}\n                \n                \n                \n              });\n            }\n            for(var i in domains){\n              create3Dbar(domains[i])\n            }\n          });\n        });\n      })\n    }\n  }\n}"
                    },
                    "style": {
                      "font-size": "12px",
                      "background-repeat": "no-repeat",
                      "margin-top": "15%"
                    },
                    "viewId": 546900339506066,
                    "parameters": {}
                  }
                ],
                "col": 7
              },
              {
                "type": "column",
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "margin": "30px 10px 10px 10px",
                      "padding": "10px"
                    },
                    "advance": {
                      "expression": "{}"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "文字",
                            "type": "text",
                            "source": "TEXT",
                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                            "data": {
                              "applied": false,
                              "multipleCi": false,
                              "multipleKpi": false,
                              "resource": [],
                              "modelType": 300,
                              "resfilltype": "parameter",
                              "series": {
                                "manual": "新建文字",
                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                              },
                              "modelDisable": true
                            },
                            "style": {
                              "margin": "5px",
                              "padding": "0",
                              "font-size": "12px",
                              "font-weight": "bold",
                              "color": "rgb(255, 255, 255)"
                            },
                            "advance": {
                              "getfunction": "kpiDataService.getValueList",
                              "category": "ci",
                              "condition": [
                                "kpi",
                                "{object:kpiQueryModel}"
                              ],
                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                            },
                            "parameters": {}
                          },
                          {
                            "label": "重复单元",
                            "type": "repeater",
                            "source": "REPEATER",
                            "parameters": {
                              "col": 6
                            },
                            "advance": {
                              "getListTable": "allprojects",
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      target.getDomainAreaLineTree(function(domaintree){\n        domaintree.children.sort(function(a,b){\n          var y1 = a.$attr(\"values/latitude\");\n          var y2 = b.$attr(\"values/latitude\");\n          return y2 - y1;\n        });\n        var length = domaintree.children.length\n        var domains = domaintree.children;\n        var description = []\n\n        var mountain = domains.map(function(elem){\n          description.push(elem.description)\n          return elem.id;\n        });\n        console.log(description)\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6100]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiNames = ['正常','注意','告警','监测'];\n            //var kpiIds = ['severity,4', 'severity,3', 'severity,2','description']\n            var data = returnData.data;\n            console.log(data)\n            var all = [];\n            var normal = [];\n            var notice = [];\n            var warning = [];\n            var risk = [];\n            var data = returnData.data;\n        //对数据的处理   \n        for(var j = 0; j < domains.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n                \n            if(data[i].nodeId == domains[j].id) {\n                console.log('zxy')\n                if(data[i].instance == \"severity,0\") {\n                    all.push(data[i].value)\n                }else if (data[i].instance == \"severity,-1\") {\n                    normal.push(data[i].value)\n                }else if(data[i].instance == \"severity,2\") {\n                    notice.push(data[i].value)\n                }else if(data[i].instance == \"severity,3\") {\n                    warning.push(data[i].value)\n                }else if(data[i].instance == \"severity,4\") {\n                    risk.push(data[i].value)\n                }\n\n              }\n            }\n\n            var jlength = (j + 1)\n            if(all.length != jlength) {\n                var add = jlength - all.length;\n                for(var z = 0; z < add; z++) {\n                    all.push('0')\n                }\n            }\n            if(notice.length != jlength) {\n                var add = jlength - notice.length;\n                for(var z = 0; z < add; z++) {\n                    notice.push('0')\n                }\n            }\n            if(normal.length != jlength) {\n                var add = jlength - normal.length;\n                for(var x = 0; x < add; x++) {\n                    normal.push('0')\n               }\n            }\n            if(warning.length != jlength) {\n                var add = jlength - warning.length;\n                for(var y = 0; y < add; y++) {\n                    warning.push('0')\n                }\n                        \n            }\n            if(warning.length != jlength) {\n                var add = jlength - risk.length;\n                    for(var y = 0; y < add; y++) {\n                        risk.push('0')\n                    }\n                        \n                }\n\n        }\n        var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = domain.label;\n            rs.description = domain.description;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                  //正常数据\n                r.value =  normal[num]\n            }else if(index == 1) {\n                //注意台数\n                r.value = notice[num]\n            }else if(index == 2) {\n                //告警台数\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }\n               return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          target.render(list);\n          \n          \n        });\n      });\n    }\n  }\n}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 2,
                                "children": [
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var label = target.$repeatData.province;\n      var description = target.$repeatData.description || 0;\n      var ctrlGroups = [[{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              wrap.css(\"height\", \"70px\");\n              wrap.css(\"border\", \"1px solid rgba(250,250,250,.3)\");\n              wrap.css(\"background-color\", \"rgba(0,100,250,.1)\");\n              var title = $(\"<div></div>\");\n              title.text(label);\n              title.css(\"font-size\", \"12px\");\n              title.css(\"color\", \"#fff\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"top\", \"12px\");\n              title.css(\"left\", \"15px\");\n              title.css(\"font-weight\", \"bold\");\n              var sub = $(\"<div></div>\");\n              sub.text(\"重要台数\");\n              sub.css(\"position\", \"absolute\");\n              sub.css(\"top\", \"30px\");\n              sub.css(\"left\", \"15px\");\n              sub.css(\"color\", \"#aaa\");\n              sub.css(\"font-size\", \"10px\");\n              var number = $(\"<div></div>\");\n              number.text(description);\n              number.css(\"position\", \"absolute\");\n              number.css(\"top\", \"45px\");\n              number.css(\"left\", \"15px\");\n              number.css(\"font-size\", \"14px\");\n              number.css(\"font-weight\", \"bold\");\n              wrap.append(title);\n              wrap.append(sub);\n              wrap.append(number);\n              return wrap;\n          }\n        }]];\n      target.render(ctrlGroups);\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {}
                                  },
                                  {
                                    "type": "row",
                                    "source": "ROW",
                                    "parameters": {
                                      "alignment": "bootstrap"
                                    },
                                    "style": {},
                                    "children": [
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n       var colors = [ \"#0ca4fe\", \"#e8b609\", \"#e74e54\" ];\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {}
                                          }
                                        ],
                                        "col": 6
                                      },
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "SVG视图",
                                            "type": "svgchart",
                                            "source": "SVGCHART",
                                            "advance": {
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"0%\",\n              left : \"10%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "0px",
                                              "font-size": "12px",
                                              "height": "145px"
                                            },
                                            "parameters": {}
                                          }
                                        ],
                                        "col": 6
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "style": {}
                          }
                        ]
                      }
                    ],
                    "parameters": {},
                    "url": "images/map/map1.png"
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "margin": "10px",
                      "padding": "10px"
                    },
                    "advance": {
                      "expression": "{}"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "文字",
                            "type": "text",
                            "source": "TEXT",
                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                            "style": {
                              "margin": "auto",
                              "padding": "5px",
                              "font-size": "12px",
                              "font-weight": "bold",
                              "text-align": "left",
                              "color": "rgb(255, 255, 255)"
                            },
                            "advance": {
                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                            },
                            "data": {
                              "kpi": [],
                              "modelType": 300,
                              "resfilltype": "parameter",
                              "resource": [],
                              "modelDisable": true
                            }
                          },
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n       var filter = {\"layer\":2,\"modelId\":300,\"domains\":\"/0/515445641576227/\"};\n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n          \n            for(var i = returnData.length-1; i >= 0; i--) {\n          \n            //for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            //console.log(\"基地\" + baseName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info( returnData.data)\n                var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                //for(var j = 0; j < mountain.length; j++) {\n                 for(var j = mountain.length-1; j >= 0; j--) {\n                    for(var i = data.length-1; i >= 0; i--) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            console.log(\"基地\")\n                            if(data[i].instance == '1,all,values') {\n                                synthesize.push(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                capacity.push(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                big.push(data[i].value.toFixed(0))\n                            }\n                        }\n                    }\n                    \n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push('0')\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push('0')\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push('0')\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          class : \"col-md-2\",\n          style : {\n              \"text-align\" : \"center\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            //value : rnd + \"%\",\n            value : synthesize[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : capacity[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : big[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : big[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n      console.log(ctrlGroups)\n      target.render(ctrlGroups);\n                \n\n                  \n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                            },
                            "style": {
                              "font-size": "12px"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "parameters": {}
                          }
                        ]
                      }
                    ],
                    "url": "images/map/map1.png",
                    "parameters": {}
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "margin": "10px",
                      "padding": "10px"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "文字",
                            "type": "text",
                            "source": "TEXT",
                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                            "style": {
                              "margin": "auto",
                              "padding": "5px",
                              "font-size": "12px",
                              "font-weight": "bold",
                              "text-align": "left",
                              "color": "rgb(255, 255, 255)"
                            },
                            "advance": {
                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩统计（当月内）\")\n        }\n    }\n}"
                            },
                            "data": {
                              "modelType": 300,
                              "resfilltype": "parameter",
                              "modelDisable": true
                            },
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "高级视图",
                            "type": "advanceEchart",
                            "source": "ADVANCEECHART",
                            "parameters": {
                              "theme": "default"
                            },
                            "advance": {
                              "expression": "express = {\n  on : {\n    init : function(event){\n        var target = event.target;\n        var global = event.global;\n        var filter = {\"layer\":2,\"modelId\":300,\"domains\":\"/0/515445641576227/\"};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var baseName = [];\n            var mountain = [];\n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var projectData = [];\n            for(var j = 0; j < returnData.data.length; j++) {\n                if(returnData.data[j].instance == 'state,all') {\n                     projectData.push(returnData.data[j].value)\n                 }\n            }\n            \n            var option = {\n            tooltip : {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            }\n             },\n            legend: {\n                data: ['状态维修项目数'],\n                top : \"2%\",\n                right: \"2%\"\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                height : '80%',\n                containLabel: true\n            },\n            xAxis:  {\n                type: 'value'\n            },\n             yAxis: {\n                type: 'category',\n                data: baseName\n            },\n            series: [\n            {\n            name: '状态维修项目数',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideRight',\n                    textBorderColor:'0'\n                }\n            },\n             itemStyle: {\n                normal: {\n                    color:target.linearGradient(\n                        0, 0, 1, 0,\n                        [\n                            {offset: 0, color: '#fed154'},\n                            {offset: 1, color: '#ffa823'}\n                        ]\n                    )\n                },\n               \n            },\n            data: projectData\n            }\n       \n        ]\n    };\n            event.target.render(option);\n             \n            })\n    })\n     \n      \n   \n    }\n  }\n}"
                            },
                            "style": {
                              "width": "100%",
                              "height": "177px",
                              "margin-top": "-10px"
                            },
                            "url": "images/map/map1.png"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "col": 5
              }
            ]
          }
        ],
        "col": 12
      },
      "$$hashKey": "object:1834"
    },
    {
      "label": "产线",
      "path": "production",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            },
                            "style": {}
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "8px",
                      "margin": "5px"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "文字",
                            "type": "text",
                            "source": "TEXT",
                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                            "data": {
                              "applied": false,
                              "multipleCi": false,
                              "multipleKpi": false,
                              "resource": [],
                              "modelType": 300,
                              "resfilltype": "parameter",
                              "series": {
                                "manual": "新建文字",
                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                              },
                              "modelDisable": true
                            },
                            "style": {
                              "margin": "5px",
                              "padding": "0",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "advance": {
                              "getfunction": "kpiDataService.getValueList",
                              "category": "ci",
                              "condition": [
                                "kpi",
                                "{object:kpiQueryModel}"
                              ],
                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"热轧生产线\")\n        }\n    }\n}"
                            },
                            "parameters": {}
                          },
                          {
                            "label": "组态视图",
                            "type": "topo",
                            "source": "TOPO",
                            "advance": {
                              "variable": "",
                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              var createAlarm = function(index, node){\n                var cell = cells[index] || {};\n                var position;\n                if(cell){\n                  if(cell.position){\n                    position = cell.position();\n                  };\n                }\n                position = position || {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.setAlarmStatus(node.status);\n                  ins.on(\"mouseover\",function (event) {\n                    target.createDeviceDropList(node.children, position, {\n                      click : function(item){\n                        if(item.resourceType == \"device\"){\n                          if(typeof main == \"number\"){\n                            target.setParameter(\"id\", item.id);\n                            target.trigger(\"pathChange\", \"device\");\n                            target.trigger(\"treeSelect\", item.id);\n                          } else {\n                            target.navigateTo(\"index\", {\n                              main : [0, 'device'],\n                              id : item.id\n                            }, \"self\");\n                          }\n                        } else {\n                          if(typeof main == \"number\"){\n                            target.setParameter(\"id\", item.id);\n                            target.trigger(\"pathChange\", \"virtual\");\n                            target.trigger(\"treeSelect\", item.id);\n                          } else {\n                            target.navigateTo(\"index\", {\n                              main : [0, 'virtual'],\n                              id : item.id\n                            }, \"self\");\n                          }\n                        }\n                      },\n                      titleClick : function(){\n                        if(typeof main == \"number\"){\n                            target.setParameter(\"id\", node.id);\n                          target.trigger(\"pathChange\", \"devicegroup\");\n                          target.trigger(\"treeSelect\", node.id);\n                        } else {\n                          target.navigateTo(\"index\", {\n                            main : [0, 'devicegroup'],\n                            id : node.id,\n                            label:node.label\n                          }, \"self\");\n                        }\n                      }\n                    });\n                  })\n                });\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px",
                              "background-repeat": "no-repeat"
                            },
                            "viewId": 469973748826064,
                            "parameters": {}
                          }
                        ]
                      }
                    ],
                    "parameters": {}
                  },
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "height": "400px",
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": "{}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "12px",
                                      "font-weight": "bold",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "label": "重复单元",
                                    "type": "repeater",
                                    "source": "REPEATER",
                                    "parameters": {
                                      "col": 1
                                    },
                                    "advance": {
                                      "getListTable": "allprojects",
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n\n      var id = target.getParameter(\"id\") ;\n      \n      \n      \n    target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n            return node.id == id\n        });\n        if(find){\n            var  label = find.label;\n            var description = find.description; \n            var domains = [];\n            domains.push(label);\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":[id],\"kpiCodes\":[6100]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                var kpiNames = ['正常','注意','警告','监测','重要台数','数据采集点'];\n                var data = returnData.data;\n                console.log(data)\n                var all = [];\n                var normal = [];\n                var notice = [];\n                var warning = [];\n                var risk = [];\n                var data = returnData.data;\n                //对数据的处理   \n                for(var i = 0; i < data.length; i++) {\n                    if(data[i].instance == \"severity,0\") {\n                        all.push(data[i].value)\n                    }else if (data[i].instance == \"severity,-1\") {\n                        normal.push(data[i].value)\n                    }else if(data[i].instance == \"severity,2\") {\n                        notice.push(data[i].value)\n                    }else if(data[i].instance == \"severity,3\") {\n                        warning.push(data[i].value)\n                    }else if(data[i].instance == \"severity,4\") {\n                        risk.push(data[i].value)\n                    }\n\n                }\n\n            if(all.length != 1) {\n                all.push('0')\n            }\n            if(notice.length != 1) {\n                notice.push('0')\n            }\n            if(normal.length != 1) {\n                normal.push('0')\n            }\n            if(warning.length != 1) {\n                warning.push('0')\n            }\n            if(risk.length != 1) {\n                risk.push('0')\n            }\n\n\n        //数据采集点\n         var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":[id],\"kpiCodes\":[6104]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            gather = returnData.data[0].value;\n            \n               var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = label;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                r.value =  normal[num]\n            }else if(index == 1) {\n                r.value = notice[num]\n            }else if(index == 2) {\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }else if(index == 4) {\n                r.value = description;\n            }else if(index == 5) {\n                r.value = gather;\n            }\n                return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          target.render(list);\n            \n            \n        })\n       \n        \n        \n        \n        \n     \n          \n          \n        });\n            \n            \n            \n            \n        }\n    })\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n\n\n        \n        \n       \n    }\n  }\n}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控件组",
                                                    "type": "ctrlgroup",
                                                    "source": "CTRLGROUP",
                                                    "advance": {
                                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n       var colors = [ \"#0ca4fe\", \"#e8b609\", \"#e74e54\" ];\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "help": "../pdf/ctrlgroup.pdf",
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "SVG视图",
                                                    "type": "svgchart",
                                                    "source": "SVGCHART",
                                                    "advance": {
                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"0%\",\n              left : \"10%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "0px",
                                                      "font-size": "12px",
                                                      "height": "150px"
                                                    },
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "style": {}
                                  }
                                ]
                              }
                            ],
                            "parameters": {},
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 2
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px",
                              "min-height": "400px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "padding": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "margin": "5px",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n       var workObj = target.getParameter(\"id\");\n       //console.log('222' + workObj)\n       \n      var filter = {\"layer\":1,\"modelId\":302,\"domains\":workObj};\n       \n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info( returnData.data)\n                var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                for(var j = 0; j < mountain.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            if(data[i].instance == '1,all,values') {\n                                synthesize.push(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                capacity.push(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                big.push(data[i].value.toFixed(0))\n                            }\n                        }\n                    }\n                    \n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push('0')\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push('0')\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push('0')\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          class : \"col-md-1\",\n          style : {\n              \"text-align\" : \"center\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            //value : rnd + \"%\",\n            value : synthesize[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : capacity[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : big[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : big[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n      console.log(ctrlGroups)\n      target.render(ctrlGroups);\n                \n\n                  \n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          }
                        ],
                        "col": 4
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px",
                              "min-height": "400px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "padding": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "margin": "5px",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"异常事件分布\")\n        }\n    }\n}"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "高级视图",
                                    "type": "advanceEchart",
                                    "source": "ADVANCEECHART",
                                    "parameters": {
                                      "theme": "default"
                                    },
                                    "advance": {
                                      "expression": "express = {\n  on : {\n    init : function(event){\n        var target = event.target;\n        var global = event.global;\n        var workObj = target.getParameter(\"id\");\n        //\"524031514586065\"\n        \n        var param = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n                \"nodeIds\": [workObj],\"kpiCodes\":[6105]}];\n        var allData = [];\n        var major = [];\n        var abnormal = [];\n                target.postService(\"kpiDataFlexService\",\"getKpiValueList\",param,function (returnData) {\n                //console.log( returnData.data)\n                for(var i = 0; i < returnData.data.length; i++) {\n                    if(returnData.data[i].instance == 'Z') {\n                        returnData.data[i].instance = '振动'\n                    }else if (returnData.data[i].instance == 'G') {\n                        returnData.data[i].instance = '工况'\n                    }else {\n                        returnData.data[i].instance = '其他'\n                    }\n                    major.push({'name':returnData.data[i].instance,'value':returnData.data[i].value})\n                    allData.push(returnData.data[i].instance)\n                }\n                \n                var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n                \"nodeIds\": [workObj],\"kpiCodes\":[6103]}];\n                 \n                 \n               \n                target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n            \n                    \n                    for(var i = 0; i < returnData.data.length; i++) {\n                        abnormal.push({'name':returnData.data[i].instance,'value':returnData.data[i].value})\n                        allData.push(returnData.data[i].instance)\n                    }\n                    \n                    \n                    \n                            var option = {\n           \n    tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n    },\n    legend: {\n        x: '2%',\n        y:'bottom',\n        orient:'horizontal',\n       data:allData,\n        textStyle:{\n            color:'#cecece'\n        }\n    },\n    series: [\n\n        {\n            name:'',\n             type:'pie',\n            calculable:true,\n             center: ['50%', '40%'],\n           selectedMode: 'single',\n            radius: ['8%', '27%'],\n\n            label: {\n                normal: {\n                    position: 'inner',\n                    textBorderWidth:0,\n                    fontWeight:'lighter',\n                    fontSize:12,\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: false\n                }\n            },\n            itemStyle:{\n                normal:{\n                    borderWidth:2,\n                    borderColor:'#dcefe1',\n                     shadowColor: 'rgba(0, 0, 0, 0.5)',\n                     shadowBlur: 10\n                }\n            },\n            data:major\n        },\n        {\n            name:'',\n            center: ['50%', '40%'],\n            type:'pie',\n            radius: ['35%', '60%'],\n            label: {\n                normal: {\n                    formatter: '  {b|{b}} ',\n                   rich: {\n                      \n                        b: {\n                            fontSize: 15,\n                            lineHeight: 50\n                        }\n                       \n                    }\n                }\n            },\n            itemStyle:{\n                normal:{\n                    borderWidth:4,\n                    borderColor:'#dcefe1',\n                     shadowColor: 'rgba(0, 0, 0, 0.5)',\n                     shadowBlur: 10\n                }\n            },\n            data:abnormal\n        }\n    ]\n        };\n        event.target.render(option);\n                    \n                \n      \n        })\n        \n      \n\n     \n        \n                \n                \n                \n      \n        })  \n        \n        \n        \n\n      \n        \n        \n        \n        \n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "auto",
                                      "width": "100%",
                                      "height": "350px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "url": "images/map/map1.png",
                            "parameters": {}
                          }
                        ],
                        "col": 3
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px",
                              "min-height": "400px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "高级视图",
                                    "type": "advanceEchart",
                                    "source": "ADVANCEECHART",
                                    "parameters": {
                                      "theme": "default"
                                    },
                                    "advance": {
                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n      //var label = target.getParameter(\"label\");\n     \n\n    \n    target.getDomainAreaLineTree(function(domaintree){\n    var find = domaintree.find(function(node){\n        return node.id == workObj\n    });\n    if(find){\n            var  label = find.label;\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n        \"nodeIds\":[workObj],\"kpiCodes\":[6101]}];\n      target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n        var data = returnData.data;\n        var unfinished;\n        var finished;\n        for(var i = 0; i < data.length; i++) {\n          if(data[i].instance == \"state,0\") {\n            unfinished = data[i].value\n          }else if(data[i].instance == \"state,1\") {\n            finished = data[i].value\n          }\n        }\n        if(!unfinished) {\n          unfinished = 0;\n        }\n        if(!finished) {\n          finished = 0;\n        }\n        console.log(finished)\n        console.log(unfinished)\n\n        var option = {\n          title : {\n            text:label,\n            x:'20%',\n            y:'90%',\n            textStyle:{\n              color:'#babfc3',\n            }\n          },\n          tooltip : {\n            trigger: 'item',\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n          },\n          legend: {\n            x : '20%',\n            y:'2%',\n            textStyle:{\n              color:'#84898d'\n            },\n            orient : 'vertical',\n            data:[ '已完成状态项目维修数','待完成状态项目维修数']\n          },\n          calculable:true,\n          series : [\n            {\n              name: '',\n              type: 'pie',\n              radius : '8%',\n              tooltip : {\n                show:false\n              },\n              center: ['25%', '30%'],\n              hoverAnimation:false,\n              color:['#dde5e7'],\n\n              labelLine:{\n                normal:{\n                  show:false\n                },\n                emphasis:{\n                  show:true\n                }\n              },\n            },\n            {\n              name:'',\n              type:'pie',\n              radius : ['40%','60% '],\n              center : ['50%', '60%'],\n              calculable:true,\n              avoidLabelOverlap: true,\n\n              // roseType : 'area',\n              label: {\n                normal: {\n                  position:'inner',\n                  show: true,\n                  formatter: ' {c} ',\n                  textBorderWidth:0,\n                },\n\n              },\n              data:[\n                {value:finished, name:'已完成状态项目维修数', itemStyle:{\n                  normal:{\n                    color: {\n                      type: 'linear',\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [{\n                        offset: 0, color: '#CC6C79' // 0% 处的颜色\n                      }, {\n                       offset: 1, color: '#C84F57' // 100% 处的颜色\n                      }],\n                      globalCoord: false // 缺省为 false\n                    },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                  }\n                }},\n                {value:unfinished, name:'待完成状态项目维修数', itemStyle:{\n                  normal:{\n                    color: {\n                      type: 'linear',\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [{\n                        offset: 0, color: '#0b7cae' // 0% 处的颜色\n                      }, {\n                        offset: 1, color: '#33ddee' // 100% 处的颜色\n                      }],\n                      globalCoord: false // 缺省为 false\n                    },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                  }\n                }}\n\n              ]\n            }\n          ]\n        };\n        event.target.render(option)\n      })\n        }\n    })\n\n     \n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "auto",
                                      "width": "100%",
                                      "height": "300px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          }
                        ],
                        "col": 3
                      }
                    ]
                  }
                ]
              }
            ],
            "advance": {
              "expression": "{}"
            },
            "parameters": {},
            "url": "images/map/map1.png"
          }
        ],
        "col": 12
      },
      "id": "1",
      "$$hashKey": "object:1852"
    },
    {
      "label": "厂区",
      "path": "navigate",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "组态视图",
                            "type": "topo",
                            "source": "TOPO",
                            "advance": {
                              "variable": "",
                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\") || target.getValue(\"device/id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren()\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n              }\n              var createMarker = function(index, node){\n                var position;\n                var cell = cells[index] || {}\n                if(cell){\n                  position = cell.position();\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                };\n                target.createMarker(node.label, function(ins){\n                  ins.setPos(position);\n                  if(node.label == \"热轧厂\") {\n                    ins.on(\"click\", function(event){\n                      if(typeof main == \"number\"){\n                        target.setParameter(\"id\", node.id);\n                        target.trigger(\"pathChange\", \"factory\");\n                        target.trigger(\"treeSelect\", node.id);\n                      } else {\n                        target.navigateTo(\"index\", {\n                          main : [0, 'factory'],\n                          id : node.id,\n                          label: node.label\n                        }, \"self\");\n                      }\n                    })\n                  }\n                });\n              };\n              for(var i in children){\n                createMarker(i, children[i])\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n}"
                            },
                            "style": {
                              "font-size": "12px",
                              "background-repeat": "no-repeat"
                            },
                            "viewId": 469973748826065,
                            "parameters": {},
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "0 5px 5px 5px",
                              "padding": "10px"
                            },
                            "advance": {
                              "expression": "{}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "12px",
                                      "font-weight": "bold",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "label": "重复单元",
                                    "type": "repeater",
                                    "source": "REPEATER",
                                    "parameters": {
                                      "col": 2
                                    },
                                    "advance": {
                                      "getListTable": "allprojects",
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      \n      \n      \n      var id = target.getParameter(\"id\") || target.getValue(\"device/id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n        var domains = find.getChildren();\n        var mountain = domains.map(function(elem){\n          return elem.id;\n        });\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6100]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiNames = ['正常','注意','警告','监测台数'];\n            var kpiIds = ['severity,4', 'severity,3', 'severity,2','description']\n            var data = returnData.data;\n            console.log(data)\n            var all = [];\n            var normal = [];\n            var notice = [];\n            var warning = [];\n            var risk = [];\n            var data = returnData.data;\n        //对数据的处理   \n        for(var j = 0; j < domains.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n                \n            if(data[i].nodeId == domains[j].id) {\n                if(data[i].instance == \"severity,0\") {\n                    all.push(data[i].value)\n                }else if (data[i].instance == \"severity,-1\") {\n                    normal.push(data[i].value)\n                }else if(data[i].instance == \"severity,2\") {\n                    notice.push(data[i].value)\n                }else if(data[i].instance == \"severity,3\") {\n                    warning.push(data[i].value)\n                }else if(data[i].instance == \"severity,4\") {\n                    risk.push(data[i].value)\n                }\n\n              }\n            }\n\n            var jlength = (j + 1)\n            if(all.length != jlength) {\n                var add = jlength - all.length;\n                for(var z = 0; z < add; z++) {\n                    all.push('0')\n                }\n            }\n            if(notice.length != jlength) {\n                var add = jlength - notice.length;\n                for(var z = 0; z < add; z++) {\n                    notice.push('0')\n                }\n            }\n            if(normal.length != jlength) {\n                var add = jlength - normal.length;\n                for(var x = 0; x < add; x++) {\n                    normal.push('0')\n               }\n            }\n            if(warning.length != jlength) {\n                var add = jlength - warning.length;\n                for(var y = 0; y < add; y++) {\n                    warning.push('0')\n                }\n                        \n            }\n            if(risk.length != jlength) {\n                var add = jlength - risk.length;\n                    for(var y = 0; y < add; y++) {\n                        risk.push('0')\n                    }\n                        \n                }\n\n        }\n        \n        \n        \n        \n        \n        var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = domain.label;\n            rs.description = domain.description;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                r.value =  normal[num]\n            }else if(index == 1) {\n                r.value = notice[num]\n            }else if(index == 2) {\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }\n               return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          target.render(list);\n          \n          \n        });\n        \n        }\n        \n      });\n    }\n  }\n}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 6,
                                        "children": [
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var label = target.$repeatData.province;\n      var description = target.$repeatData.description || 0;\n      var ctrlGroups = [[{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              wrap.css(\"height\", \"70px\");\n              wrap.css(\"border\", \"1px solid rgba(250,250,250,.3)\");\n              wrap.css(\"background-color\", \"rgba(0,100,250,.1)\");\n              var title = $(\"<div></div>\");\n              title.text(label);\n              title.css(\"font-size\", \"12px\");\n              title.css(\"color\", \"#fff\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"top\", \"12px\");\n              title.css(\"left\", \"15px\");\n              title.css(\"font-weight\", \"bold\");\n              var sub = $(\"<div></div>\");\n              sub.text(\"重要台数\");\n              sub.css(\"position\", \"absolute\");\n              sub.css(\"top\", \"30px\");\n              sub.css(\"left\", \"15px\");\n              sub.css(\"color\", \"#aaa\");\n              sub.css(\"font-size\", \"10px\");\n              var number = $(\"<div></div>\");\n              number.text(description);\n              number.css(\"position\", \"absolute\");\n              number.css(\"top\", \"45px\");\n              number.css(\"left\", \"15px\");\n              number.css(\"font-size\", \"14px\");\n              number.css(\"font-weight\", \"bold\");\n              wrap.append(title);\n              wrap.append(sub);\n              wrap.append(number);\n              return wrap;\n          }\n        }]];\n      target.render(ctrlGroups);\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {}
                                          },
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控件组",
                                                    "type": "ctrlgroup",
                                                    "source": "CTRLGROUP",
                                                    "advance": {
                                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n       var colors = [ \"#0ca4fe\", \"#e8b609\", \"#e74e54\" ];\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "help": "../pdf/ctrlgroup.pdf",
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "SVG视图",
                                                    "type": "svgchart",
                                                    "source": "SVGCHART",
                                                    "advance": {
                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"0%\",\n              left : \"10%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "0px",
                                                      "font-size": "12px",
                                                      "height": "140px"
                                                    },
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "style": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {},
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "margin": "auto",
                                      "padding": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "text-align": "left",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "modelDisable": true
                                    },
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n       var workObj = target.getParameter(\"id\");\n       //console.log('222' + workObj)\n       \n      var filter = {\"layer\":3,\"modelId\":300,\"domains\":workObj};\n       \n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info( returnData.data)\n                var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                for(var j = 0; j < mountain.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            console.log(\"基地\")\n                            if(data[i].instance == '1,all,values') {\n                                synthesize.push(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                capacity.push(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                big.push(data[i].value.toFixed(0))\n                            }\n                        }\n                    }\n                    \n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push('0')\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push('0')\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push('0')\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          class : \"col-md-2\",\n          style : {\n              \"text-align\" : \"center\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            //value : rnd + \"%\",\n            value : synthesize[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : capacity[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : big[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : big[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n      console.log(ctrlGroups)\n      target.render(ctrlGroups);\n                \n\n                  \n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "text-align": "left",
                                      "padding": "5px",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩统计（当月内）\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "modelDisable": true
                                    },
                                    "url": "images/map/map1.png",
                                    "parameters": {}
                                  },
                                  {
                                    "label": "高级视图",
                                    "type": "advanceEchart",
                                    "source": "ADVANCEECHART",
                                    "parameters": {
                                      "theme": "default"
                                    },
                                    "advance": {
                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n       //console.log('222' + workObj)\n       \n        var filter = {\"layer\":3,\"modelId\":300,\"domains\":workObj};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            console.log('厂区' + factory)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info(returnData)\n                var data = returnData.data;\n                var unfinished = [];\n                var finished = [];\n                var all = [];\n                console.info(data)\n                for(var j = 0; j < factory.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == factory[j]) {\n                            if(data[i].instance == 'state,all') {\n                                all.push(data[i])\n                            }else if (data[i].instance == 'state,0') {\n                                unfinished.push(data[i])\n                            }else if(data[i].instance == 'state,1') {\n                                finished.push(data[i])\n                            }\n                        }\n                    }\n                    var jlength = (j + 1)\n                    if(all.length != jlength) {\n                        var add = jlength - all.length;\n                        for(var z = 0; z < add; z++) {\n                            all.push('0')\n                        }\n                        \n                    }\n                    if(finished.length != jlength) {\n                        var add = jlength - finished.length;\n                        for(var x = 0; x < add; x++) {\n                            finished.push('0')\n                        }\n                    }\n                    if(unfinished.length != jlength) {\n                        var add = jlength - unfinished.length;\n                        for(var y = 0; y < add; y++) {\n                            unfinished.push('0')\n                        }\n                        \n                    }\n                    \n                 }\n                 console.log(all.length);\n                 console.log(finished.length);\n                 console.log(unfinished.length)\n                \n                \n                \n               \n                \n                \nvar option = {\n    title : {\n        text: ''\n    },\n    tooltip : {\n        trigger: 'axis'\n    },\n    legend: {\n        data:['待完成状态维修项目数','已完成状态维修项目数','状态维修项目数'],\n        y:0,\n        x : \"0%\"\n        \n    },\n    grid : {\n        left : \"10%\",\n    },\n    toolbox: {\n        show : false,\n        feature : {\n            magicType : {show: true, type: ['line', 'bar']}\n        }\n    },\n    calculable : true,\n    xAxis : [\n        {\n            type : 'category',\n            data : factoryName\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'待完成状态维修项目数',\n            type:'bar',\n            data:unfinished\n        },\n        {\n            name:'已完成状态维修项目数',\n            type:'bar',\n            data:finished\n        },\n        {\n            name:'状态维修项目数',\n            type:'bar',\n            data: all\n        }\n    ]\n};\n                    \n                    \n      event.target.render(option);\n                \n                \n                \n                \n            })\n        })\n       \n       \n       \n       \n       \n       \n       \n       \n       \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "height": "200px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          }
                        ],
                        "col": 4
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "2",
      "$$hashKey": "object:1862"
    },
    {
      "label": "小设备信息",
      "path": "device",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "8px",
              "margin": "5px"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "组态视图",
                                            "type": "topo",
                                            "source": "TOPO",
                                            "advance": {
                                              "variable": "",
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      //target.render();\n      var id = target.getParameter(\"id\");\n      debugger;\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var resourceId = find.id;\n          target.getKpiTypeByFilter({\n            hasSingnal : true\n          }, function(kpis){\n            target.getResourceById(resourceId, function(resource){\n              var pos = JSON.parse(resource.values.MeasurePointLocate);\n              var posInfo = pos.reduce(function(a, b){\n                for(var i in b){\n                  Array.prototype.push.apply(a, b[i]);\n                };\n                return a;\n              },[]);\n              var accessConfigs = resource.$attr(\"physicalConfig/accessConfigs\");\n              accessConfigs = accessConfigs.filter(function(aconf){\n                  return kpis.some(function(kpi){\n                    return kpi.id == aconf.dataItemId;\n                  });\n              });\n              var children = find.getChildren();\n              var viewId = find.$attr(\"view/viewId\");\n              var ci = [resourceId];\n              var kpi = accessConfigs.map(function(aconf){\n                  return aconf.dataItemId;\n              }).reduce(function(a,b){\n                  if(a.indexOf(b) == -1){\n                      a.push(b);\n                  };\n                  return a;\n              });\n              kpi.push(999997);\n              target.getKpiValueCi(ci, kpi, function(valuelist){\n                  accessConfigs = accessConfigs.map(function(elem){\n                      var find = valuelist.find(function(el){\n                          return el.kpiCode == elem.dataItemId;\n                      }) || {};\n                      elem.value = find.value || \"-\";\n                      elem.status = 0;\n                      return elem;\n                  });\n                  target.getViewById(viewId, function(view){\n                    var content = view.content;\n                    var json = JSON.parse(content);\n                    target.render(json);\n                    target.on(\"$loadCiKpiComplete\", function(cells){\n                      for(var i in cells){\n                        if(cells[i].attributes.type == \"basic.Rect\"){\n                          cells[i].attr(\"rect/opacity\", 0);\n                          var resource = cells[i].resourceObj;\n                          var kpi = cells[i].kpiObj;\n                          if(resource && kpi){\n                               console.log(resource, kpi);\n                              (function(inx, resource, kpi){\n                                  var ciids = [resource.id];\n                                    var kpiids = [kpi.id, 999997];\n                                  target.getKpiValueCi(ciids, kpiids, function(valuelist){\n                                      var value = valuelist.find(function(elem){\n                                          return elem.kpiCode == kpi.id;\n                                      }) || {};\n                                      var status = valuelist.find(function(elem){\n                                          return elem.kpiCode == 999997;\n                                      }) || {};\n                                     \n                                      var list = [{\n                                          label : kpi.label,\n                                          value : value.value || \"-\",\n                                          status : status.value || \"-\"\n                                      }];\n                                      //console.log(\"-----\", list, inx, cells[inx]);\n                                      target.createAttrDisp(resource.label, list,cells[inx].position());\n                                  });\n                              })(i, resource, kpi);\n                          } else {\n                            var ins = cells[i].attr(\"text/text\");\n                              var find = posInfo.find(function(str){\n                                  return str.name == ins;\n                                }) || {};\n                              var filterKpis = accessConfigs.filter(function(aconf){\n                                return aconf.instance == ins\n                              });\n                              target.createAttrDisp(find.label, filterKpis.map(function(kpi){\n                                return {\n                                  label : kpi.kpiName,\n                                  value : kpi.value,\n                                  status : kpi.status\n                                }\n                              }),cells[i].position());\n                          }\n                        } else if(cells[i].attributes.type == \"basic.Circle\"){\n                          cells[i].attr(\"circle/opacity\", 0);\n                          cells[i].attr(\"text/opacity\", 0);\n                        } else if(cells[i].attributes.type == \"link\"){\n                          cells[i].attr(\".connection/stroke\", \"#1f8fd8\");\n                          cells[i].attr(\".connection/stroke-width\", 2);\n                          cells[i].attr(\".marker-target/visibility\", \"hidden\");\n                        };\n                        \n                        \n                      }\n                      \n                      \n                      \n                         \n                    //新增开始\n                    var createAlarm = function(index,node){\n                    var cell = cells[index] || {};\n                    var position;\n                    if(cell){\n                        if(cell.position){\n                            position = {x:400,y:40};\n                        };\n                    }\n                    position = {x:400,y:40};\n                    target.createAlarm(node.title, function(ins){\n                        ins.setPos(position);\n                        ins.setAlarmStatus(node.status);\n                        ins.on(\"mouseover\",function (event) {\n                    \n                        })\n                        });\n                    }\n                    find.title = \"当前设备状态:\"\n                    createAlarm(0,find)\n                   \n                     //新增结束  \n                          \n                          \n                      \n                   \n                      \n                      \n\n                      \n                      \n                      \n                    });\n                  });\n              },{\n                  \"isRealTimeData\" : true,\n                  \"includeInstance\" : true\n              })\n            })\n          });\n        }\n      })\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px",
                                              "background-repeat": "no-repeat"
                                            },
                                            "viewId": 546900339506067,
                                            "url": "images/map/map1.png",
                                            "parameters": {}
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "col": 9
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "padding": "0",
                                              "font-size": "16px",
                                              "font-weight": "normal",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)",
                                              "border-bottom": "1px solid #666",
                                              "line-height": "30px"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"工艺参数\")\n        }\n    }\n}"
                                            }
                                          },
                                          {
                                            "label": "高级列表",
                                            "type": "dataTableAdvance",
                                            "source": "DATATABLEADVANCE",
                                            "parameters": {
                                              "col": 1,
                                              "pageSize": 10,
                                              "listbottom": "none"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n        var target = event.target;\n        var deviceId = target.getParameter('id')\n        target.getDevicesByCondition({'resourceId':deviceId},function (returnData) {\n            var kpiCodes = [];\n            //console.log(returnData)\n            for(var i=0;i<returnData[0].physicalConfig.accessConfigs.length;i++){\n                if(returnData[0].physicalConfig.accessConfigs[i].specialtyProp == 'G') {\n                    kpiCodes.push(returnData[0].physicalConfig.accessConfigs[i].dataItemId);\n                }\n\t\t    } \n\t\t    \n\t\t     var kpiQueryModel = {\n                \"category\": \"ci\",\n                \"isRealTimeData\": true,\n                \"nodeIds\": [deviceId],\n                \"kpiCodes\": kpiCodes,\n                \"startTime\": null,\n                \"endTime\": null,\n                \"timeRange\": \"\",\n                \"statisticType\": \"psiot\",\n                \"includeInstance\": true,\n                \"condList\": []\n            }\n            \n            var params = [\"kpi\",kpiQueryModel]\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiValue = returnData.data;\n\t\t\t\n\t\t\t  //获取相关单位\n            target.postService(\"resourceUIService\",\"getKpisByKpiIds\",[kpiCodes],function(returnData){\n                var units = [];\n                for(var i = 0; i < returnData.data.length;i++) {\n                    units.push({id:returnData.data[i].id,unit:returnData.data[i].unit})\n                }\n                console.log(units)\n                for(var j = 0; j < units.length; j++) {\n                    for(var z = 0; z < kpiValue.length; z++) {\n                        if(kpiValue[z].kpiCode == units[j].id) {\n                            kpiValue[z].value =  (kpiValue[z].value.toFixed(2) + units[j].unit)\n                        }\n                    }\n                }\n                target.render({\n                data : kpiValue,\n                on : {\n                rowClick : function(event){\n            //target.navigateTo('production', {});\n                }\n            },\n            format : [\n               {\n                \"name\": \"数据项\",\n                \"value\": \"kpiName\",\n                \"type\": \"text\"\n            },{\n                \"name\": \"数值\",\n                \"value\": \"value\",\n                \"type\": \"text\"\n          },{\n                \"name\": \"时间\",\n                \"value\": \"insertTime\",\n                \"type\": \"date\"\n          }\n        ]\n      });\n                \n                \n                \n                \n                \n            })\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t        \n\t\t    })\n\t\t    \n\t\t   \n      })\n      \n      \n      \n      \n     \n     \n   \n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 3
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    },
                    "url": "images/map/map1.png"
                  },
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "line-height": "30px",
                                      "text-align": "left",
                                      "color": "rgb(238, 238, 238)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"告警列表\");\n        }\n    }\n}"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "高级列表",
                                    "type": "dataTableAdvance",
                                    "source": "DATATABLEADVANCE",
                                    "parameters": {
                                      "col": 1,
                                      "pageSize": 10,
                                      "listbottom": "standard"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var deviceId = target.getParameter('id')\n        \n      var queryParams = {\n            \"domain\":\"\",\n            \"nodeType\":\"\",\n            \"pageSize\":1000,\n            \"severities\":\"1,2,3,4\",\n            \"states\":\"0,5,10,20\",\n            \"nodeIds\":deviceId\n            };\n        var queryParams4Page = {\n            \"start\": 0,\n            \"length\": \"\",\n            \"sort\": \"createTime\",\n            \"sortType\": \"desc\",\n            \"statCount\": true,\n            \"total\": 0\n        };\n        var params = [queryParams,queryParams4Page] \n      \n    target.postService(\"alertQueryFlexService\",\"getAlertByPage\",params,function (returnData) {\n        //debugger\n        target.render({\n        data : returnData.data.data,\n        on : {\n          rowClick : function(event){\n            //target.navigateTo('production', {});\n          }\n        },\n         format : [\n                  {\n                    \"name\": \"设备名称\",\n                    \"value\": \"devName\",\n                    \"type\": \"text\",\n                    //\"width\" : 300\n                  }, {\n                    \"name\": \"报警消息\",\n                    \"value\": \"message\",\n                    \"type\": \"text\"\n                  },{\n                    \"name\": \"报警级别\",\n                    \"type\":\"priority\",\n                    \"value\" : \"severity\",\n                    \"format\":function (elem) {\n                        console.log(elem);\n                        if(elem == -1){\n                             return \"正常\";\n                        } else if(elem == 2){\n                             return \"注意\";\n                        }else if(elem == 3){\n                             return \"异常\";\n                        }else if(elem == 4){\n                             return \"警告\";\n                        }\n                    }\n                  },{\n                    \"name\": \"报警时间\",\n                    \"value\": \"firstArisingTime\",\n                    \"type\": \"date\"\n                  },{\n                      \"name\":\"操作\",\n                      \"type\":\"button\",\n                      \"label\":\"过程跟踪\"\n                  }\n                ]\n        \n      });\n         \n         \n         \n         \n         \n         \n     })\n     \n     \n   \n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          }
                        ],
                        "col": 7
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "line-height": "30px",
                                      "text-align": "left",
                                      "color": "rgb(238, 238, 238)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"离线诊断\");\n        }\n    }\n}"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "高级列表",
                                    "type": "dataTableAdvance",
                                    "source": "DATATABLEADVANCE",
                                    "parameters": {
                                      "col": 1,
                                      "pageSize": 10,
                                      "listbottom": "none"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter('id')\n      \n      \n    target.getDomainAreaLineTree(function(domaintree){\n    var find = domaintree.find(function(node){\n        return node.id == id\n    });\n    if(find){\n        var deviceCode = find.externalDevId;\n        //console.log(find.externalDevId)\n        target.postService(\"deviceResumeUIService\",\"getDeviceOfflineReportListByCondition\",{devId:deviceCode},function(returnData){\n        target.render({\n        data : returnData.data,\n        on : {\n          rowClick : function(event){\n            //target.navigateTo('production', {});\n          }\n        },\n        format : [\n          {\n            \"name\": \"状态\",\n            \"value\": \"conclusion\",\n            \"type\": \"text\",\n            \"format\":function (elem) {\n                if(elem == '1') {\n                    return '正常'\n                }else if(elem == '2') {\n                    return '注意'\n                }else if(elem == '3') {\n                    return '异常'\n                }else if(elem == '4') {\n                    return '警告'\n                }\n            }\n          },{\n            \"name\": \"专业\",\n            \"value\": \"specialty\",\n            \"type\": \"text\",\n             \"format\":function (elem) {\n                if(elem == 'Z') {\n                    return '振动'\n                }else if(elem == 'N') {\n                    return '扭矩'\n                }else if(elem == 'D') {\n                    return '电机电流'\n                }else if(elem == 'Q') {\n                    return '清洁度监测'\n                }else if(elem == 'J') {\n                    return '绝缘油分析'\n                }else if(elem == 'M') {\n                    return '磨损分析'\n                }else if(elem == 'H') {\n                    return '红外热成像检测'\n                }else if(elem == 'K') {\n                    return '开关温度'\n                }else if(elem == 'W') {\n                    return '表面温度'\n                }else if(elem == 'P') {\n                    return '液压'\n                }else if(elem == 'Y') {\n                    return '油液'\n                }else {\n                    return '工艺指标'\n                }\n             }\n          },{\n            \"name\": \"报告编号\",\n            \"value\": \"rptNo\",\n            \"type\": \"text\"\n          },{\n            \"name\": \"时间\",\n            \"value\": \"rptDate\",\n            \"type\": \"date\"\n          }\n        ]\n      });\n         \n         \n         \n         \n         \n         \n     })\n        \n        \n\n      \n        }\n    })\n    \n\n     \n   \n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "col": 5
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "3",
      "$$hashKey": "object:1918"
    },
    {
      "label": "设备信息-设备参数",
      "path": "detect",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "8px",
              "margin": "5px"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n    width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var pages = target.getPages();\n      var ctrlGroups = [];\n      var tr = [];\n      ctrlGroups.push(tr)\n      var createPage = function(i, page){\n          return {\n              type : \"label\",\n              linkage : true,\n              value : page.tabLabel || \"标签\",\n              on : {\n                  click : function(event){\n                      target.moveTo(page.path);\n                  }\n              }\n          }\n      }\n      for(var i in pages){\n          tr.push(createPage(i, pages[i]));\n          if(i < pages.length - 1){\n             tr.push({\n                type : \"label\",\n                value : \" > \"\n             }); \n          };\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "parameters": {}
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "label": "高级列表",
            "type": "dataTableAdvance",
            "source": "DATATABLEADVANCE",
            "parameters": {
              "col": 1,
              "pageSize": 10,
              "listbottom": "standard"
            },
            "advance": {
              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var projectModel;\n      var projectAttr;\n      var random = function(max, digital){\n          var num = parseInt(Math.random() * max * Math.pow(10,digital)) / Math.pow(10,digital);\n          return num;\n      }\n      var randomText = function(strs){\n          var length = strs.length - 1;\n          var inx = Math.round(Math.random() * length);\n          return strs[inx];\n      }\n      var render = function(){\n          var format = [{\n              name : \"time\",\n              label : \"检测时间\",\n              type : \"date\",\n              render : function(i){\n                  return new Date().getTime() + 100000 * i;\n              }\n          },{\n              name : \"value\",\n              label : \"检测值\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"unit\",\n              label : \"单位\",\n              render : function(){\n                  return randomText(['mm/s']);\n              }\n          },{\n              name : \"alertType\",\n              label : \"报警类别\",\n              type : \"priority\",\n              render : function(){\n                  return random(4, 0);\n              }\n          },{\n              name : \"attention\",\n              label : \"注意值\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"alert\",\n              label : \"报警值\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"warn\",\n              label : \"警告值\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"F5force\",\n              label : \"F5轧制力\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"F4force\",\n              label : \"F4轧制力\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"F3force\",\n              label : \"F3轧制力\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"F2force\",\n              label : \"F2轧制力\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"F1force\",\n              label : \"F1轧制力\",\n              render : function(){\n                  return random(10, 2);\n              }\n          },{\n              name : \"curve\",\n              label : \"波形\",\n              render : function(){\n                  return randomText(['有','有']);\n              }\n          },{\n              name : \"status\",\n              label : \"数据状态\",\n              render : function(){\n                  return randomText(['正常','异常']);\n              }\n          },{\n              name : \"collect\",\n              label : \"采集状态\",\n              render : function(){ \n                  return randomText(['轧制','空载']);\n              }\n          }]\n          var datas = (function(){\n              var datas = [];\n              for(var i = 0; i < 20; i++){\n                  var rs ={};\n                  for(var j in format){\n                      rs[format[j].name] = format[j].render(i);\n                  }\n                  datas.push(rs);\n              };\n              return datas;\n          })();\n          console.log(datas);\n       target.render({\n            data : datas,\n            on : {\n                rowClick : function(event){\n                    target.createPopupBypath('analysis', {\n                        title: \"诊断分析\",\n                        theme : \"system\",\n                        width: \"80%\"\n                      }, {\n                        message: \"诊断分析\"\n                      })\n                }\n            },\n            format : format.map(function(elem){\n                return {\n                \"name\": elem.label,\n                \"value\": elem.name,\n                \"type\": elem.type || \"text\"\n              }\n            })\n          });\n      }\n      target.getEditorStatus(\"PROJECTMODEL\", function(pmodel){\n          var dt = pmodel || {}\n          projectModel = dt.projectModel || [];\n          projectAttr = dt.projectAttr || {};\n          render();\n        });\n    }\n  }\n}"
            },
            "style": {
              "margin": "5px",
              "font-size": "12px"
            },
            "url": "images/map/map1.png"
          },
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "5px",
              "margin": "5px"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "label": "控件组",
                    "type": "ctrlgroup",
                    "source": "CTRLGROUP",
                    "advance": {
                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"label\",\n          value : \"趋势图\",\n          class : \"col-md-12\"\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                    },
                    "style": {
                      "margin": "5px",
                      "font-size": "12px"
                    },
                    "help": "../pdf/ctrlgroup.pdf",
                    "parameters": {}
                  },
                  {
                    "label": "高级视图",
                    "type": "advanceEchart",
                    "source": "ADVANCEECHART",
                    "advance": {
                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var color = \"#ffe400\";\n      var LENGTH = 50;\n      var xAxis = function(){\n          var rs = [];\n          var date = new Date().getTime();\n          for(var i = 0; i<LENGTH; i++){\n              var time = date + 10000 * i;\n              var dt = new Date(time);\n              rs.push(dt.getHours() + \":\" + dt.getMinutes())\n          };\n          return rs;\n      }\n      var random = function(range){\n          var rs = [];\n          for(var i = 0; i<LENGTH; i++){\n              var rnd = parseInt(range[0] + Math.random() * (range[1]-range[0]) * 100) / 100;\n              rs.push(rnd)\n          }\n          return rs;\n      }\n      var datas = [{\n          name : \"趋势\",\n          \"xAxisId\": \"xAxis0\",\n          \"yAxisId\": \"yAxis0\",\n          data : function(){\n              return random([0, 18])\n          }\n      },{\n          name : \"空载\",\n          \"xAxisId\": \"xAxis0\",\n          \"yAxisId\": \"yAxis0\",\n          data : function(){\n              return random([0, 18])\n          }\n      },{\n          name : \"切换\",\n          \"xAxisId\": \"xAxis0\",\n          \"yAxisId\": \"yAxis0\",\n          data : function(){\n              return random([0, 18])\n          }\n      },{\n          name : \"轧制\",\n          \"xAxisId\": \"xAxis0\",\n          \"yAxisId\": \"yAxis0\",\n          data : function(){\n              return random([0, 18])\n          }\n      },{\n          name : \"F1轧制力\",\n          \"xAxisId\": \"xAxis1\",\n          \"yAxisId\": \"yAxis1\",\n          data : function(){\n              return random([0, 1])\n          }\n      },{\n          name : \"F2轧制力\",\n           \"xAxisId\": \"xAxis1\",\n          \"yAxisId\": \"yAxis1\",\n          data : function(){\n              return random([0, 1])\n          }\n      },{\n          name : \"F3轧制力\",\n           \"xAxisId\": \"xAxis1\",\n          \"yAxisId\": \"yAxis1\",\n          data : function(){\n              return random([0, 1])\n          }\n      },{\n          name : \"F4轧制力\",\n           \"xAxisId\": \"xAxis1\",\n          \"yAxisId\": \"yAxis1\",\n          data : function(){\n              return random([0, 1])\n          }\n      },{\n          name : \"F5轧制力\",\n           \"xAxisId\": \"xAxis1\",\n          \"yAxisId\": \"yAxis1\",\n          data : function(){\n              return random([0, 1])\n          }\n      }]\n      var option = {\n            title: {\n                textStyle : { color : \"#fff\" }\n            },\n            tooltip: {},\n            \"grid\": [\n                {\n                    \"left\": 120,\n                    \"top\": 90,\n                    \"height\": 150,\n                    \"right\": 120,\n                    \"id\": \"grid0\"\n                },\n                {\n                    \"left\": 120,\n                    \"top\": 250,\n                    \"height\": 150,\n                    \"right\": 120,\n                    \"id\": \"grid1\"\n                }\n            ],\n            legend: {\n                data: datas.map(function(elem){\n                    return elem.name;\n                })\n            },\n            xAxis: [{\n                boundaryGap: false,\n                show : false,\n                \"id\": \"xAxis0\",\n                \"gridId\": \"grid0\",\n                data : xAxis()\n            },{\n                boundaryGap: false,\n                \"id\": \"xAxis1\",\n                \"gridId\": \"grid1\",\n                data : xAxis()\n            }],\n            yAxis: [{\n                \"id\": \"yAxis0\",\n                \"gridId\": \"grid0\",\n                max : 50\n            },{\n                \"id\": \"yAxis1\",\n                \"gridId\": \"grid1\",\n                max : 2\n            }],\n            dataZoom: [{\n                 show: true,\n                 realtime: true,\n                 start: 0,\n                 end: 10,\n                 xAxisIndex: [0, 1]\n            }],\n            series: datas.map(function(elem){\n                elem.type = \"line\";\n                elem.symbolSize = 8;\n                elem.data = elem.data();\n                return elem;\n            })\n        };\n        console.log(option);\n      event.target.render(option);\n    }\n  }\n};"
                    },
                    "style": {
                      "margin": "auto",
                      "width": "100%",
                      "height": "500px"
                    },
                    "parameters": {
                      "theme": "auto"
                    }
                  }
                ]
              }
            ],
            "parameters": {}
          }
        ],
        "col": 12
      },
      "id": "4",
      "$$hashKey": "object:2212"
    },
    {
      "label": "设备信息-设备参数分析",
      "path": "analysis",
      "layout": {
        "type": "column",
        "children": [
          {
            "type": "row",
            "source": "ROW",
            "parameters": {
              "alignment": "bootstrap"
            },
            "style": {},
            "children": [
              {
                "type": "column",
                "children": [
                  {
                    "label": "控件组",
                    "type": "ctrlgroup",
                    "source": "CTRLGROUP",
                    "advance": {
                      "expression": "expression = {\n    width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var pages = target.getPages();\n      var ctrlGroups = [];\n      var tr = [];\n      ctrlGroups.push(tr)\n      var createPage = function(i, page){\n          return {\n              type : \"label\",\n              linkage : true,\n              value : page.tabLabel || \"标签\",\n              on : {\n                  click : function(event){\n                      target.moveTo(page.path);\n                  }\n              }\n          }\n      }\n      for(var i in pages){\n          tr.push(createPage(i, pages[i]));\n          if(i < pages.length - 1){\n             tr.push({\n                type : \"label\",\n                value : \" > \"\n             }); \n          };\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                    },
                    "style": {
                      "margin": "5px",
                      "font-size": "12px"
                    },
                    "help": "../pdf/ctrlgroup.pdf",
                    "parameters": {}
                  }
                ],
                "col": 8
              },
              {
                "type": "column",
                "children": [
                  {
                    "label": "控件组",
                    "type": "ctrlgroup",
                    "source": "CTRLGROUP",
                    "advance": {
                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"采集时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                    },
                    "style": {
                      "margin": "5px",
                      "font-size": "14px",
                      "font-weight": "bold"
                    },
                    "help": "../pdf/ctrlgroup.pdf",
                    "url": "images/map/map1.png"
                  }
                ],
                "col": 4
              }
            ]
          },
          {
            "label": "TAB标签",
            "type": "tab",
            "source": "TAB",
            "parameters": {
              "align": "horizental"
            },
            "style": {
              "margin": "5px"
            },
            "children": [
              {
                "tabName": "时域波形",
                "tabId": "0",
                "default": true,
                "display": "block",
                "type": "tabItem",
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "min-height": "300px",
                      "padding": "15px",
                      "border": "1px solid #eee",
                      "border-top": 0
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n  width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      target.setValue(\"type\", 0);\n      target.setValue(\"x0\", undefined);\n      target.setValue(\"x1\", undefined);\n      var render = function(){\n          var x0 = target.getValue(\"x0\") || 0;\n          var y0 = target.getValue(\"y0\") || 0;\n          var x1 = target.getValue(\"x1\") || 0;\n          var y1 = target.getValue(\"y1\") || 0;\n          var ctrlGroups = [\n           [{\n               type : \"jquery\",\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"background-color\", \"blue\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : x0,\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : y0,\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n               type : \"jquery\",\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"margin-left\", \"50px\");\n                   div.css(\"background-color\", \"red\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : x1 || \"0.00\",\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : y1,\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"?X\",\n              style : {\n                  \"margin-left\" : \"50px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : (x1-x0).toFixed(2),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"?Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : (y1-y0).toFixed(2),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\",\n                  \"margin-right\" : \"50px\"\n              }\n            }]\n          ];\n          target.render(ctrlGroups);\n      }\n      target.on(\"handleChange\", function(){\n          render();\n      })\n      render();\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {}
                                  }
                                ],
                                "col": 7
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n  width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      target.setValue(\"type\", 0);\n      var render = function(){\n          var type = target.getValue(\"type\") || 0;\n          var feature = target.getValue(\"type\") || 0;\n          var ctrlGroups = [\n           [{\n              type : \"radio\",\n              style : {\n                  \"width\" : \"200px\"\n              },\n              value : 1,\n              options : [{\n                  id : 0,\n                  label : \"显示谱峰\"\n              },{\n                  id : 1,\n                  label : \"不显示\"\n              }]\n            },{\n              type : \"buttonGroup\",\n              class : \"col-md-12\",\n              content : [{\n                type : \"button\",\n                value : \"倍频\",\n                icon : \"glyphicon glyphicon-indent-right\",\n                btnclass : type == 1 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 1){\n                          target.setValue(\"type\", 1);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              },{\n                type : \"button\",\n                value : \"边带\",\n                icon : \"glyphicon glyphicon-list\",\n                btnclass : type == 2 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 2){\n                          target.setValue(\"type\", 2);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              }]\n            },{\n              type : \"buttonGroup\",\n              class : \"col-md-12\",\n              content : [{\n                type : \"button\",\n                value : \"特征值\",\n                icon : \"glyphicon glyphicon-indent-right\",\n                btnclass : feature == 1 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      \n                  }\n                }\n              }]\n            }]\n          ];\n          target.render(ctrlGroups);\n      };\n      render();\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {}
                                  }
                                ],
                                "col": 5
                              }
                            ]
                          },
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "高级视图",
                                    "type": "advanceEchart",
                                    "source": "ADVANCEECHART",
                                    "advance": {
                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var dataList = (function(){\n        var rs = [];\n        var inx = 0;\n        for(var i=0; i < 50 * Math.PI; i += (2 * Math.PI /180)){\n          rs.push(inx + \"\");\n          inx ++;\n        }\n        return rs;\n      })();\n      var valueList = (function(){\n        var rs = [];\n        for(var i=0; i < 50 * Math.PI; i += (2 * Math.PI /180)){\n          var nu = 0;\n          for(var j=0; j<8; j++){\n            nu += (Math.pow((1 / (j+1)), 3) * Math.sin(i * Math.pow(3 ,j))) * 10 + Math.random() * 1.3;\n          };\n          rs.push(nu.toFixed(2));\n        };\n        return rs;\n      })();\n      var data = [];\n      for (var i = 0; i < dataList.length; i++) {\n        data.push([dataList[i], valueList[i]])\n      }\n      var dateList = data.map(function (item) {\n        return item[0];\n      });\n      var valueList = data.map(function (item) {\n        return item[1];\n      });\n      var render = function(init, sub){\n          console.log(\"init\", init, sub);\n        var type = target.getValue(\"type\") || 0;\n        var x0 = target.getValue(\"x0\") || 0;\n        var x1 = target.getValue(\"x1\") || 180;\n        if(type == 0){\n            var markLine = undefined;\n            var markPoint = undefined;\n        } else if(type == 1){\n            var markLine = {\n              animation: false,\n              symbol: 'none',\n              silent: false,\n              lineStyle: {\n                normal: {\n                  width : 1,\n                  color : \"#436fff\",\n                  type: 'solid'\n                }\n              },\n              label: {\n              normal: {\n                  show: true,\n                  position: 'end',\n                  formatter : function(elem){\n                    return elem.data.value + \"Hz\";\n                  }\n                }\n              },\n              data : (function(){\n                var rs = [];\n                for (i = 0; i < 10; i++) {\n                  var item = {\n                    xAxis: x0 * (i + 2) + ''\n                  };\n                  rs.push(item)\n                }\n                /**\n                for(var i = 0; i < 10; i++){\n                  rs.push({\n                    xAxis : i * x0\n                  })\n                };*/\n                return rs;\n              })()\n            }\n            var markPoint = {\n                symbol : \"circle\",\n                symbolSize : 8,\n              animation: false,\n              silent: false,\n              label: {\n                normal: {\n                  show: false\n    //                        formatter: '{b}: {d}'\n                }\n              },\n              itemStyle : {\n                normal : {\n                    color : \"#fff\",\n                    borderColor : \"blue\"\n                }  \n              },\n              data : (function(){\n                var rs = [];\n                for (i = 0; i < 10; i++) {\n                  var yData = data[x0 / 1 * (i + 2)];\n                  if (yData) {\n                    var item = {\n                      xAxis: x0 * (i + 2) + '',\n                      yAxis: yData[1]\n                    };\n                    rs.push(item)\n                  }\n                }\n                /**\n                for(var i = 0; i < 10; i++){\n                  rs.push({\n                      xAxis : i * x0,\n                      yAxis : valueList[i * x0]\n                  })\n                };*/\n                return rs;\n              })()\n            }\n        } else if(type == 2){\n            var markLine = {\n              animation: false,\n              symbol: 'none',\n              silent: false,\n              lineStyle: {\n                normal: {\n                    color : \"red\",\n                  type: 'solid'\n                }\n              },\n              label: {\n                normal: {\n                  show: true,\n                  position: 'end',\n                  formatter : function(elem){\n                    return elem.data.value + \"Hz\";\n                  }\n                }\n              },\n              data : (function(){\n                var rs = [];\n                for(var i = -5; i < 5; i++){\n                  rs.push({\n                    xAxis : parseInt(x1) + i * (parseInt(x0) - parseInt(x1))\n                  })\n                };\n                return rs;\n              })()\n            };\n            var markPoint = {\n              symbol : \"circle\",\n              symbolSize : 8,\n              animation: false,\n              silent: false,\n              label: {\n                normal: {\n                  show: false\n                }\n              },\n              itemStyle : {\n                normal : {\n                    color : \"#fff\",\n                    borderColor : \"red\"\n                }  \n              },\n              data : (function(){\n                var rs = [];\n                for(var i = -5; i < 5; i++){\n                  rs.push({\n                      xAxis : parseInt(x1) + i * (parseInt(x0) - parseInt(x1)),\n                      yAxis : valueList[parseInt(x1) + i * (parseInt(x0) - parseInt(x1))]\n                  })\n                };\n                return rs;\n              })()\n            }\n        };\n        var option = {\n          grid: [{\n            \"top\": \"10%\",\n            \"width\" : \"90%\",\n            \"left\" : \"5%\",\n            \"height\" : \"65%\"\n          }, {\n            \"top\": \"10%\",\n            \"width\" : \"90%\",\n            \"left\" : \"5%\",\n            \"height\" : \"65%\"\n          }],\n          tooltip: {\n            \"alwaysShowContent\": true,\n            triggerOn: 'none'\n          },\n          xAxis: [{\n            data: dataList,\n            axisPointer: {\n              label: {\n                show: true,\n                formatter: function (val) {\n                    console.log(\"a\", type);\n                  if (val.seriesData[0]) {\n                    target.setValue(\"x0\", val.value);\n                    target.setValue(\"y0\", val.seriesData[0].data);\n                    target.trigger(\"handleChange\");\n                    console.log(\"a--init\", init);\n                    if(type == 1){\n                        if(init == false){\n                          render();\n                        };\n                        init = false;\n                    };\n                  }\n                  return val.value\n                }\n              },\n              lineStyle: {\n                color: \"blue\",\n                width: 2\n              },\n              handle: {\n                show: true,\n                size: 30,\n                margin: 40,\n              },\n              \"value\": x0,\n              snap: false,\n            }\n          }, {\n            data: dataList,\n            axisPointer: {\n              label: {\n                formatter: function (val) {\n                  if (val.seriesData[0]) {\n                    target.setValue(\"x1\", val.value)\n                    target.setValue(\"y1\", val.seriesData[0].data);\n                    target.trigger(\"handleChange\");\n                    if(type == 2){\n                        if(init == false){\n                          render();\n                        };\n                        init = false;\n                    };\n                  }\n                  return val.value\n                }\n              },\n              lineStyle: {\n                color: \"red\",\n                width: 2\n              },\n              handle: {\n                show: true,\n                size: 30,\n                margin: 40,\n\n              },\n              \"value\": x1,\n              snap: false,\n            },\n            gridIndex: 1\n          }],\n          yAxis: [{\n            splitLine: {show: true}\n\n          }, {\n            splitLine: {show: false},\n            gridIndex: 1\n          }],\n          dataZoom: [\n            {\n              show: true,\n              realtime: true,\n              start: 0,\n              end: 10,\n              xAxisIndex: [0,1]\n            }\n          ],\n          series: [{\n            type: 'line',\n            showSymbol: false,\n            data:valueList,\n            markLine : markLine,\n            markPoint : markPoint\n          }, {\n            type: 'line',\n            showSymbol: false,\n            lineStyle : {\n              normal : {\n                opacity : 0\n              }\n            },\n            data:valueList,\n            xAxisIndex: 1,\n            yAxisIndex: 1\n          }]\n        };\n        option\n        target.render(option);\n      };\n      render();\n      target.on(\"renderChart\", function(){\n          render(undefined, \"renderChart\");\n      })\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "auto",
                                      "width": "100%",
                                      "height": "500px"
                                    },
                                    "url": "images/map/map1.png",
                                    "parameters": {
                                      "theme": "default"
                                    }
                                  }
                                ],
                                "col": 9
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "border": "1px solid #eee",
                                      "min-height": "400px"
                                    },
                                    "advance": {
                                      "expression": "{}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n    width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [];\n      var randomText = function(strs){\n          var length = strs.length - 1;\n          var inx = Math.round(Math.random() * length);\n          return strs[inx];\n      }\n      var createTr = function(){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var div = $(\"<div></div>\");\n              div.width(20);\n              div.height(20);\n              div.css(\"background-color\", randomText([\"orange\", \"red\"]));\n              div.css(\"border-radius\", \"50%\");\n              return div;\n          }\n        },{\n          type : \"label\",\n          value : \"Z1 0.00/0.09\",\n          style : {\n              \"margin-left\" : \"20px\"\n          }\n        }]\n      }\n      for(var i = 0; i < 5; i++){\n          ctrlGroups.push(createTr());\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {}
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {}
                                  }
                                ],
                                "col": 3
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    }
                  }
                ]
              },
              {
                "tabName": "频域波形",
                "tabId": "1",
                "type": "tabItem",
                "display": "none",
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "min-height": "300px",
                      "padding": "15px",
                      "border": "1px solid #eee",
                      "border-top": 0
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      target.setValue(\"type\", 0);\n      target.setValue(\"x0\", undefined);\n      target.setValue(\"x1\", undefined);\n      var render = function(){\n          var x0 = target.getValue(\"x0\") || 0;\n          var y0 = target.getValue(\"y0\") || 0;\n          var x1 = target.getValue(\"x1\") || 0;\n          var y1 = target.getValue(\"y1\") || 0;\n          var type = target.getValue(\"type\") || 0;\n          var feature = target.getValue(\"type\") || 0;\n          var ctrlGroups = [\n           [{\n               type : \"jquery\",\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"background-color\", \"blue\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : x0,\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : y0,\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n               type : \"jquery\",\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"margin-left\", \"50px\");\n                   div.css(\"background-color\", \"red\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : x1 || \"0.00\",\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : y1,\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"?X\",\n              style : {\n                  \"margin-left\" : \"50px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : (x1-x0).toFixed(2),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"?Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : (y1-y0).toFixed(2),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\",\n                  \"margin-right\" : \"50px\"\n              }\n            },{\n              type : \"radio\",\n              style : {\n                  \"width\" : \"200px\"\n              },\n              value : 1,\n              options : [{\n                  id : 0,\n                  label : \"显示谱峰\"\n              },{\n                  id : 1,\n                  label : \"不显示\"\n              }]\n            },{\n              type : \"buttonGroup\",\n              class : \"col-md-12\",\n              content : [{\n                type : \"button\",\n                value : \"倍频\",\n                icon : \"glyphicon glyphicon-indent-right\",\n                btnclass : type == 1 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 1){\n                          target.setValue(\"type\", 1);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              },{\n                type : \"button\",\n                value : \"边带\",\n                icon : \"glyphicon glyphicon-list\",\n                btnclass : type == 2 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 2){\n                          target.setValue(\"type\", 2);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              }]\n            },{\n              type : \"buttonGroup\",\n              class : \"col-md-12\",\n              content : [{\n                type : \"button\",\n                value : \"特征值\",\n                icon : \"glyphicon glyphicon-indent-right\",\n                btnclass : feature == 1 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"feature\") != 1){\n                          target.setValue(\"type\", 1);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              }]\n            }]\n          ];\n          target.render(ctrlGroups);\n      }\n      target.on(\"handleChange\", function(){\n          render();\n      })\n      render();\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "parameters": {}
                          },
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "高级视图",
                                    "type": "advanceEchart",
                                    "source": "ADVANCEECHART",
                                    "advance": {
                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var valueList = (function(){\n        var rs = [];\n        var freq = Math.random() * 5;\n        for(var i=0; i < 50 * Math.PI; i += (freq * Math.PI /180)){\n          freq = Math.random() * 10\n          nu = Math.sin(i) * Math.random() * Math.random() * Math.random() * 20;\n          nu = nu.toFixed(2)\n          rs.push(nu > 0 ? nu : 0);\n        }\n        return rs;\n      })();\n      var dataList = (function(){\n        var rs = [];\n        for(var i in valueList){\n          rs.push(i + \"\");\n        }\n        return rs;\n      })();\n      var render = function(init){\n        var type = target.getValue(\"type\") || 0;\n        var x0 = target.getValue(\"x0\") || 0;\n        var x1 = target.getValue(\"x1\") || 180;\n        if(type == 0){\n          var markLine = undefined;\n          var markPoint = undefined;\n        } else if(type == 1){\n          var markLine = {\n            animation: false,\n            symbol: 'none',\n            silent: false,\n            lineStyle: {\n              normal: {\n                color : \"#436fff\",\n                type: 'solid'\n              }\n            },\n            label: {\n              normal: {\n                show: true,\n                formatter : function(elem){\n                  return elem.data.value + \"Hz\";\n                }\n              }\n            },\n            data : (function(){\n              var rs = [];\n              for(var i = 0; i < 10; i++){\n                rs.push({\n                  xAxis : x0 * (i + 2) + ''\n                })\n              };\n              return rs;\n            })()\n          }\n          var markPoint = {\n            symbol : \"circle\",\n            symbolSize : 8,\n            animation: false,\n            silent: false,\n            itemStyle : {\n              normal : {\n                color : \"#fff\",\n                borderColor : \"#436fff\"\n              }\n            },\n            data : (function(){\n              var rs = [];\n              for(var i = 0; i < 10; i++){\n                rs.push({\n                  xAxis : i * x0,\n                  yAxis : valueList[i * x0]\n                })\n              };\n              return rs;\n            })()\n          }\n        } else if(type == 2){\n          var markLine = {\n            animation: false,\n            symbol: 'none',\n            silent: false,\n            lineStyle: {\n              normal: {\n                color : \"red\",\n                type: 'solid'\n              }\n            },\n            label: {\n              normal: {\n                show: true,\n                color : \"red\",\n                formatter : function(elem){\n                  return elem.data.value + \"Hz\";\n                }\n              }\n            },\n            data : (function(){\n              var rs = [];\n              for(var i = -5; i < 5; i++){\n                rs.push({\n                  xAxis : parseInt(x1) + i * (parseInt(x0) - parseInt(x1))\n                })\n              };\n              return rs;\n            })()\n          };\n          var markPoint = {\n            symbol : \"circle\",\n            symbolSize : 8,\n            animation: false,\n            silent: false,\n            label: {\n              normal: {\n                show: false\n                //                        formatter: '{b}: {d}'\n              }\n            },\n            itemStyle : {\n              normal : {\n                color : \"#fff\",\n                borderColor : \"red\"\n              }\n            },\n            data : (function(){\n              var rs = [];\n              for(var i = -5; i < 5; i++){\n                rs.push({\n                  xAxis : parseInt(x1) + i * (parseInt(x0) - parseInt(x1)),\n                  yAxis : valueList[parseInt(x1) + i * (parseInt(x0) - parseInt(x1))]\n                })\n              };\n              return rs;\n            })()\n          }\n        };\n        var option = {\n          grid: [{\n            \"top\": \"10%\",\n            \"width\" : \"90%\",\n            \"left\" : \"5%\",\n            \"height\" : \"65%\"\n          }, {\n            \"top\": \"10%\",\n            \"width\" : \"90%\",\n            \"left\" : \"5%\",\n            \"height\" : \"65%\"\n          }],\n          tooltip: {\n            \"alwaysShowContent\": true,\n            triggerOn: 'none'\n          },\n          xAxis: [{\n            data: dataList,\n            boundaryGap : false,\n            axisPointer: {\n              label: {\n                show: true,\n                formatter: function (val) {\n                  if (val.seriesData[0]) {\n                    target.setValue(\"x0\", val.value);\n                    target.setValue(\"y0\", val.seriesData[0].data);\n                    target.trigger(\"handleChange\");\n                    if(type == 1){\n                        if(init == false){\n                          render(undefined, \"a\");\n                        };\n                        init = false;\n                    };\n                  }\n                  return val.value\n                }\n              },\n              lineStyle: {\n                color: \"blue\",\n                width: 2\n              },\n              handle: {\n                show: true,\n                size: 30,\n                margin: 40,\n              },\n              \"value\": x0,\n              snap: false,\n            }\n          }, {\n            data: dataList,\n            axisPointer: {\n              label: {\n                formatter: function (val) {\n                  if (val.seriesData[0]) {\n                    target.setValue(\"x1\", val.value)\n                    target.setValue(\"y1\", val.seriesData[0].data);\n                    target.trigger(\"handleChange\");\n                    if(type == 2){\n                        if(init == false){\n                          render(undefined, \"b\");\n                        };\n                        init = false;\n                    };\n                  }\n                  return val.value\n                }\n              },\n              lineStyle: {\n                color: \"red\",\n                width: 2\n              },\n              handle: {\n                show: true,\n                size: 30,\n                margin: 40,\n\n              },\n              \"value\": x1,\n              snap: false,\n            },\n            gridIndex: 1\n          }],\n          yAxis: [{\n            splitLine: {show: true}\n\n          }, {\n            splitLine: {show: false},\n            gridIndex: 1\n          }],\n          dataZoom: [\n            {\n              show: true,\n              realtime: true,\n              start: 0,\n              end: 10,\n              xAxisIndex: [0,1]\n            }\n          ],\n          series: [{\n            type: 'line',\n            showSymbol: false,\n            data:valueList,\n            markLine : markLine,\n            markPoint : markPoint\n          }, {\n            type: 'line',\n            showSymbol: false,\n            lineStyle : {\n              normal : {\n                opacity : 0\n              }\n            },\n            data:valueList,\n            xAxisIndex: 1,\n            yAxisIndex: 1\n          }]\n        };\n        target.render(option);\n      };\n      render();\n      target.on(\"renderChart\", function(){\n        render();\n      })\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "auto",
                                      "width": "100%",
                                      "height": "500px"
                                    },
                                    "url": "images/map/map1.png",
                                    "parameters": {
                                      "theme": "default"
                                    }
                                  }
                                ],
                                "col": 9
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "border": "1px solid #eee",
                                      "min-height": "400px"
                                    },
                                    "advance": {
                                      "expression": "{}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n    width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [];\n      var randomText = function(strs){\n          var length = strs.length - 1;\n          var inx = Math.round(Math.random() * length);\n          return strs[inx];\n      }\n      var createTr = function(){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var div = $(\"<div></div>\");\n              div.width(20);\n              div.height(20);\n              div.css(\"background-color\", randomText([\"orange\", \"red\"]));\n              div.css(\"border-radius\", \"50%\");\n              return div;\n          }\n        },{\n          type : \"label\",\n          value : \"Z1 0.00/0.09\",\n          style : {\n              \"margin-left\" : \"20px\"\n          }\n        }]\n      }\n      for(var i = 0; i < 5; i++){\n          ctrlGroups.push(createTr());\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {}
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {}
                                  }
                                ],
                                "col": 3
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    }
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "5",
      "$$hashKey": "object:3351"
    },
    {
      "label": "厂区二层",
      "path": "factory",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            },
                            "style": {}
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png",
                            "parameters": {}
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "组态视图",
                            "type": "topo",
                            "source": "TOPO",
                            "advance": {
                              "variable": "",
                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          console.log('333333')\n          console.log(children)\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n              };\n              var list = cells.filter(function(el){\n                  return el.attributes.type == \"basic.Circle\";\n              })\n              var createMarker = function(index, node){\n                var cell = list[index] || {};\n                var position;\n                if(cell){\n                  position = cell.attributes.position;\n                  console.log(\"position == \", position);\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                }\n                target.createMarker(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.on(\"click\", function(event){\n                    if(typeof main == \"number\"){\n                      target.setParameter(\"id\", node.id);\n                      target.setParameter(\"label\", node.label);\n                      target.trigger(\"pathChange\", \"production\");\n                      target.trigger(\"treeSelect\", node.id);\n                    } else {\n                      target.navigateTo(\"index\", {\n                        main : [0, 'production'],\n                        id : node.id,\n                        label : node.label,\n                        description: node.description\n                      }, \"self\");\n                    }\n                  })\n                });\n              };\n              for(var i in children){\n                createMarker(i, children[i])\n              }\n            });\n          });\n        }\n\n      });\n    }\n  }\n}"
                            },
                            "style": {
                              "font-size": "12px",
                              "background-repeat": "no-repeat"
                            },
                            "viewId": 469973748826065,
                            "parameters": {}
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px 0"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "padding": "0",
                                      "font-size": "18px",
                                      "font-weight": "bold"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩(当月内)\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "modelDisable": true
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "type": "row",
                                    "source": "ROW",
                                    "parameters": {
                                      "alignment": "bootstrap"
                                    },
                                    "style": {},
                                    "children": [
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n\n        var workObj = target.getParameter(\"id\");\n       \n        var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            console.log('产线' + factoryName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n                console.info(returnData)\n                var data = returnData.data;\n                var unfinished = [];\n                var finished = [];\n                console.info(data)\n                for(var j = 0; j < factory.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == factory[j]) {\n                            if (data[i].instance == 'state,0') {\n                                unfinished.push(data[i].value)\n                            }else if(data[i].instance == 'state,1') {\n                                finished.push(data[i].value)\n                            }\n                        }\n                    }\n                    var jlength = (j + 1)\n                    if(finished.length != jlength) {\n                        var add = jlength - finished.length;\n                        for(var x = 0; x < add; x++) {\n                            finished.push('0')\n                        }\n                    }\n                    if(unfinished.length != jlength) {\n                        var add = jlength - unfinished.length;\n                        for(var y = 0; y < add; y++) {\n                            unfinished.push('0')\n                        }\n                        \n                    }\n                    \n                 }\n                 \n                 \nvar option = {\n        title : {\n         text: factoryName[0],\n         x:'10%',\n         y:'80%',\n    textStyle:{\n         color:'#babfc3',\n    }\n    },\n    tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    legend: {\n        x : '20%',\n        y:'2%',\n        textStyle:{\n            color:'#84898d'\n        },\n       orient : 'vertical',\n        data:[ '已完成状态项目维修数','待完成状态项目维修数']\n    },\n    calculable:true,\n    series : [\n         {\n            name: '',\n            type: 'pie',\n            radius : '8%',\n             tooltip : {\n                show:false\n       \n            },\n            center: ['25%', '30%'],\n            hoverAnimation:false,\n            color:['#dde5e7'],\n          \n            labelLine:{\n                normal:{\n                    show:false\n                },\n                emphasis:{\n                    show:true\n                }\n            },\n           \n           \n        },\n         \n        {\n            name:'',\n            type:'pie',\n            //radius : ['20%','40% '],\n            radius : ['40%','60% '],\n            center : ['50%', '50%'],\n            calculable:true,\n            avoidLabelOverlap: true,\n            \n           // roseType : 'area',\n              label: {\n                normal: {\n                    position:'inner',\n                    show: true,\n                    formatter: ' {c} ',\n                   textBorderWidth:0,\n                },\n              \n            },\n            data:[\n                {value:finished[0], name:'已完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#CC6C79' // 0% 处的颜色\n                             }, {\n                             offset: 1, color: '#C84F57' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                   borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }},\n            {value:unfinished[0], name:'待完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#0b7cae' // 0% 处的颜色\n                             }, {\n                             offset: 1, color: '#33ddee' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }}\n               \n            ]\n        }\n    ]\n        };\n      event.target.render(option);\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n            })\n        })\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "width": "100%",
                                              "height": "300px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ],
                                        "col": 4
                                      },
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      \n      \n      \n        var workObj = target.getParameter(\"id\");\n        //515445641576272\n        console.log('222' + workObj)\n       \n        var filter = {\"layer\":1,\"modelId\":301,\"domains\":\"515445641576272\"};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            console.log('产线' + factoryName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n                console.info(returnData)\n                var data = returnData.data;\n                var unfinished = [];\n                var finished = [];\n                console.info(data)\n                for(var j = 0; j < factory.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == factory[j]) {\n                            if (data[i].instance == 'state,0') {\n                                unfinished.push(data[i].value)\n                            }else if(data[i].instance == 'state,1') {\n                                finished.push(data[i].value)\n                            }\n                        }\n                    }\n                    var jlength = (j + 1)\n                    if(finished.length != jlength) {\n                        var add = jlength - finished.length;\n                        for(var x = 0; x < add; x++) {\n                            finished.push('0')\n                        }\n                    }\n                    if(unfinished.length != jlength) {\n                        var add = jlength - unfinished.length;\n                        for(var y = 0; y < add; y++) {\n                            unfinished.push('0')\n                        }\n                        \n                    }\n                    \n                 }\n                 \n                 \nvar option = {\n        title : {\n         text: factoryName[1],\n         x:'10%',\n         y:'80%',\n    textStyle:{\n         color:'#babfc3',\n    }\n    },\n    tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    legend: {\n        x : '20%',\n        y:'2%',\n        textStyle:{\n            color:'#84898d'\n        },\n       orient : 'vertical',\n        data:[ '已完成状态项目维修数','待完成状态项目维修数']\n    },\n    calculable:true,\n    series : [\n         {\n            name: '',\n            type: 'pie',\n            radius : '8%',\n             tooltip : {\n                show:false\n       \n            },\n            center: ['25%', '30%'],\n            hoverAnimation:false,\n            color:['#dde5e7'],\n          \n            labelLine:{\n                normal:{\n                    show:false\n                },\n                emphasis:{\n                    show:true\n                }\n            },\n           \n           \n        },\n         \n        {\n            name:'',\n            type:'pie',\n            radius : ['40%','60% '],\n            center : ['50%', '50%'],\n            calculable:true,\n            avoidLabelOverlap: true,\n            \n           // roseType : 'area',\n              label: {\n                normal: {\n                    position:'inner',\n                    show: true,\n                    formatter: ' {c} ',\n                   textBorderWidth:0,\n                },\n              \n            },\n            data:[\n                {value:finished[1], name:'已完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#CC6C79' // 0% 处的颜色\n                             }, {\n                             offset: 1, color: '#C84F57' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                   borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }},\n            {value:unfinished[1], name:'待完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#0b7cae' // 0% 处的颜色\n                             }, {\n                             offset: 1, color: '#33ddee' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }}\n               \n            ]\n        }\n    ]\n        };\n      event.target.render(option);\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n            })\n        })\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "width": "100%",
                                              "height": "300px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ],
                                        "col": 4
                                      },
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      \n      \n      \n        var workObj = target.getParameter(\"id\");\n        //515445641576272\n        console.log('222' + workObj)\n       \n        var filter = {\"layer\":1,\"modelId\":301,\"domains\":\"515445641576272\"};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            console.log('产线' + factoryName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n                console.info(returnData)\n                var data = returnData.data;\n                var unfinished = [];\n                var finished = [];\n                console.info(data)\n                for(var j = 0; j < factory.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == factory[j]) {\n                            if (data[i].instance == 'state,0') {\n                                unfinished.push(data[i].value)\n                            }else if(data[i].instance == 'state,1') {\n                                finished.push(data[i].value)\n                            }\n                        }\n                    }\n                    var jlength = (j + 1)\n                    if(finished.length != jlength) {\n                        var add = jlength - finished.length;\n                        for(var x = 0; x < add; x++) {\n                            finished.push('0')\n                        }\n                    }\n                    if(unfinished.length != jlength) {\n                        var add = jlength - unfinished.length;\n                        for(var y = 0; y < add; y++) {\n                            unfinished.push('0')\n                        }\n                        \n                    }\n                    \n                 }\n                 \n                 \nvar option = {\n        title : {\n         text: factoryName[2],\n         x:'10%',\n         y:'80%',\n    textStyle:{\n         color:'#babfc3',\n    }\n    },\n    tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    legend: {\n        x : '20%',\n        y:'2%',\n        textStyle:{\n            color:'#84898d'\n        },\n       orient : 'vertical',\n        data:[ '已完成状态项目维修数','待完成状态项目维修数']\n    },\n    calculable:true,\n    series : [\n         {\n            name: '',\n            type: 'pie',\n            radius : '8%',\n             tooltip : {\n                show:false\n       \n            },\n            center: ['25%', '30%'],\n            hoverAnimation:false,\n            color:['#dde5e7'],\n          \n            labelLine:{\n                normal:{\n                    show:false\n                },\n                emphasis:{\n                    show:true\n                }\n            },\n           \n           \n        },\n         \n        {\n            name:'',\n            type:'pie',\n            radius : ['40%','60% '],\n            center : ['50%', '50%'],\n            calculable:true,\n            avoidLabelOverlap: true,\n            \n           // roseType : 'area',\n              label: {\n                normal: {\n                    position:'inner',\n                    show: true,\n                    formatter: ' {c} ',\n                   textBorderWidth:0,\n                },\n              \n            },\n            data:[\n                {value:finished[1], name:'已完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#CC6C79' // 0% 处的颜色\n                             }, {\n                            offset: 1, color: '#C84F57' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                   borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }},\n            {value:unfinished[1], name:'待完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#0b7cae' // 0% 处的颜色\n                             }, {\n                             offset: 1, color: '#33ddee' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }}\n               \n            ]\n        }\n    ]\n        };\n      event.target.render(option);\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n            })\n        })\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "width": "100%",
                                              "height": "300px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ],
                                        "col": 4
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "0 5px 5px 5px",
                              "padding": "10px"
                            },
                            "advance": {
                              "expression": "{}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "12px",
                                      "font-weight": "bold",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "label": "重复单元",
                                    "type": "repeater",
                                    "source": "REPEATER",
                                    "parameters": {
                                      "col": 3
                                    },
                                    "advance": {
                                      "getListTable": "allprojects",
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      \n      \n      \n      var id = target.getParameter(\"id\") || target.getValue(\"device/id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n        var domains = find.getChildren();\n        var mountain = domains.map(function(elem){\n          return elem.id;\n        });\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6100]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiNames = ['正常','注意','警告','监测台数'];\n            var data = returnData.data;\n            console.log(data)\n            var all = [];\n            var normal = [];\n            var notice = [];\n            var warning = [];\n            var risk = [];\n            var data = returnData.data;\n        //对数据的处理   \n        for(var j = 0; j < domains.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n                \n            if(data[i].nodeId == domains[j].id) {\n                console.log('zxy')\n                if(data[i].instance == \"severity,0\") {\n                    all.push(data[i].value)\n                }else if (data[i].instance == \"severity,-1\") {\n                    normal.push(data[i].value)\n                }else if(data[i].instance == \"severity,2\") {\n                    notice.push(data[i].value)\n                }else if(data[i].instance == \"severity,3\") {\n                    warning.push(data[i].value)\n                }else if(data[i].instance == \"severity,4\") {\n                    risk.push(data[i].value)\n                }\n\n              }\n            }\n\n            var jlength = (j + 1)\n            if(all.length != jlength) {\n                var add = jlength - all.length;\n                for(var z = 0; z < add; z++) {\n                    all.push('0')\n                }\n            }\n            if(notice.length != jlength) {\n                var add = jlength - notice.length;\n                for(var z = 0; z < add; z++) {\n                    notice.push('0')\n                }\n            }\n            if(normal.length != jlength) {\n                var add = jlength - normal.length;\n                for(var x = 0; x < add; x++) {\n                    normal.push('0')\n               }\n            }\n            if(warning.length != jlength) {\n                var add = jlength - warning.length;\n                for(var y = 0; y < add; y++) {\n                    warning.push('0')\n                }\n                        \n            }\n            if(risk.length != jlength) {\n                var add = jlength - risk.length;\n                    for(var y = 0; y < add; y++) {\n                        risk.push('0')\n                    }\n                        \n                }\n\n        }\n        \n        \n        \n        \n        \n        var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = domain.label;\n            rs.description = domain.description;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                r.value =  normal[num]\n            }else if(index == 1) {\n                r.value = notice[num]\n            }else if(index == 2) {\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }\n               return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          target.render(list);\n          \n          \n        });\n        \n        }\n        \n      });\n    }\n  }\n}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 4,
                                        "children": [
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var label = target.$repeatData.province;\n      var description = target.$repeatData.description || 0;\n      var ctrlGroups = [[{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              wrap.css(\"height\", \"70px\");\n              wrap.css(\"border\", \"1px solid rgba(250,250,250,.3)\");\n              wrap.css(\"background-color\", \"rgba(0,100,250,.1)\");\n              var title = $(\"<div></div>\");\n              title.text(label);\n              title.css(\"font-size\", \"12px\");\n              title.css(\"color\", \"#fff\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"top\", \"12px\");\n              title.css(\"left\", \"15px\");\n              title.css(\"font-weight\", \"bold\");\n              var sub = $(\"<div></div>\");\n              sub.text(\"重要台数\");\n              sub.css(\"position\", \"absolute\");\n              sub.css(\"top\", \"30px\");\n              sub.css(\"left\", \"15px\");\n              sub.css(\"color\", \"#aaa\");\n              sub.css(\"font-size\", \"10px\");\n              var number = $(\"<div></div>\");\n              number.text(description);\n              number.css(\"position\", \"absolute\");\n              number.css(\"top\", \"45px\");\n              number.css(\"left\", \"15px\");\n              number.css(\"font-size\", \"14px\");\n              number.css(\"font-weight\", \"bold\");\n              wrap.append(title);\n              wrap.append(sub);\n              wrap.append(number);\n              return wrap;\n          }\n        }]];\n      target.render(ctrlGroups);\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {}
                                          },
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控件组",
                                                    "type": "ctrlgroup",
                                                    "source": "CTRLGROUP",
                                                    "advance": {
                                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n       var colors = [ \"#0ca4fe\", \"#e8b609\", \"#e74e54\" ];\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "help": "../pdf/ctrlgroup.pdf",
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "SVG视图",
                                                    "type": "svgchart",
                                                    "source": "SVGCHART",
                                                    "advance": {
                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"0%\",\n              left : \"10%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "0px",
                                                      "font-size": "12px",
                                                      "height": "140px"
                                                    },
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "style": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {},
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "5px",
                              "padding": "10px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "margin": "auto",
                                      "padding": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "text-align": "left",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "modelDisable": true
                                    },
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n       \n      var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n       \n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info( returnData.data)\n                var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                for(var j = 0; j < mountain.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            console.log(\"基地\")\n                            if(data[i].instance == '1,all,values') {\n                                synthesize.push(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                capacity.push(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                big.push(data[i].value.toFixed(0))\n                            }\n                        }\n                    }\n                    \n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push('0')\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push('0')\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push('0')\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          class : \"col-md-1\",\n          style : {\n              \"text-align\" : \"center\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            //value : rnd + \"%\",\n            value : synthesize[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : capacity[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n            type : \"label\",\n            value : big[index] + \"%\",\n            class : \"col-md-1\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          },{\n            type : \"progressbar\",\n            value : big[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-2\"\n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n      console.log(ctrlGroups)\n      target.render(ctrlGroups);\n                \n\n                  \n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "10px",
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "margin": "auto",
                                      "padding": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "text-align": "left",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"异常预报分类（当月内）\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "modelDisable": true
                                    },
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "SVG视图",
                                    "type": "svgchart",
                                    "source": "SVGCHART",
                                    "advance": {
                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var  target = event.target;\n      \n      \n       var workObj = target.getParameter(\"id\");\n        //515445641576272\n        console.log('222' + workObj)\n       \n        var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            console.log('产线' + factoryName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6103]}];\n            var abnormal = [];\n            var values = []\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n                console.log('异常类型')\n                console.log(returnData.data)\n                var data = returnData.data\n                for(var i = 0; i < data.length; i++) {\n                    abnormal.push(data[i].instance)\n                    values.push(data[i].value)\n                }\n                \n                \n                \n                var repeatData = target.$repeatData;\n      var barOption = {\n        title: {\n          text: 'svgChart入门示例'\n        },\n        grid : {\n          left : \"10%\",\n          height : \"80%\",\n          top : \"5%\"\n        },\n        legend: {\n          data: ['销量']\n        },\n        xAxis: {\n          show : true,\n          base : {\n              show : true\n          },\n          data: abnormal,\n          axisLine : {\n            show : false,\n          },\n          axisTick : {\n            show : false\n          },\n          axisLabel : {\n            margin : 26,\n            color : \"#eee\"\n          }\n        },\n        yAxis: {\n          show : true,\n          //max : 10,\n          //splitNumber : 2,\n          axisLine : {\n            show : true,\n            lineStyle : {\n              color : \"rgba(250,250,250,.3)\"\n            }\n          },\n          axisTick : {\n            color : \"#eee\",\n            show : true\n          },\n          axisLabel : {\n            margin : 20,\n            color : \"#eee\"\n          }\n        },\n        series: [{\n          stack : \"总量\",\n          name: '销量1',\n          barwidth : .4,\n          type: '3dbar',\n          colors : values.map(function(elem){\n            if(elem > 1){\n              return \"#fc6161\";\n            } else if(elem > 2){\n              return \"#fcd661\";\n            } else if(elem > 3){\n              return \"#048cff\";\n            } else {\n              return \"#79e4e4\";\n            }\n          }),\n          data: values\n        }]\n      };\n      target.render(barOption);\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n            })\n        })\n      \n      \n      \n      \n  \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px",
                                      "height": "230px"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          }
                        ],
                        "col": 4
                      }
                    ]
                  }
                ]
              }
            ],
            "url": "images/map/map1.png"
          }
        ],
        "col": 12
      },
      "id": "6",
      "$$hashKey": "object:1364"
    },
    {
      "label": "虚拟大设备",
      "path": "virtual",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "组态视图",
                                            "type": "topo",
                                            "source": "TOPO",
                                            "advance": {
                                              "variable": "",
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              \n              \n                    \n                    //新增开始\n                    var createAlarm = function(index,node){\n                    var cell = cells[index] || {};\n                    var position;\n                    if(cell){\n                        if(cell.position){\n                            position = {x:400,y:40};\n                        };\n                    }\n                    position = {x:400,y:40};\n                    target.createAlarm(node.title, function(ins){\n                        ins.setPos(position);\n                        ins.setAlarmStatus(node.status);\n                        ins.on(\"mouseover\",function (event) {\n                    \n                        })\n                        });\n                    }\n                    find.title = \"当前设备状态:\"\n                    createAlarm(0,find)\n                   \n                     //新增结束  \n                          \n                          \n            //   var createAlarm = function(index, node){\n            //     var cell = cells[index] || {};\n            //     var position;\n            //     if(cell){\n            //       position = cell.position();\n            //     } else {\n            //       position = {\n            //         x : Math.floor(100 + Math.random() * 300),\n            //         y : Math.floor(100 + Math.random() * 200)\n            //       }\n            //     }\n            //     target.createAlarm(node.label, function(ins){\n            //       ins.setPos(position);\n            //       ins.on(\"click\", function(event){\n            //           target.createSystemPopupByLocalPath(\"page8\", {\n            //              width : \"400px\",\n            //              title: node.label,\n            //             },node.id);\n            //       })\n            //     });\n            //   };\n            //   for(var i in children){\n            //     createAlarm(i, children[i])\n            //   }\n            });\n          });\n        }\n\n      });\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px",
                                              "background-repeat": "no-repeat"
                                            },
                                            "viewId": 469973748826064,
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "col": 7
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "5px",
                                      "padding": "10px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "padding": "0",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "text-align": "left"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"所有设备\")\n        }\n    }\n}"
                                            },
                                            "parameters": {}
                                          },
                                          {
                                            "label": "高级列表",
                                            "type": "dataTableAdvance",
                                            "source": "DATATABLEADVANCE",
                                            "parameters": {
                                              "col": 1,
                                              "pageSize": 5,
                                              "listbottom": "pageOnly"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var nodeId = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(tree){\n        var find = tree.find(function(node){\n          return node.id == nodeId;\n        });\n        if(find){\n          var children = find.children;\n          target.render({\n            pageSize : 5,\n            data : children,\n            on : {\n                rowClick : function(event){\n                    var data = event.row;\n                    if(data.resourceType == \"device\"){\n                      if(typeof main == \"number\"){\n                          target.setParameter(\"id\", data.id);\n                        target.trigger(\"pathChange\", \"motor\");\n                        target.trigger(\"treeSelect\", data.id);\n                      } else {\n                        target.navigateTo(\"index\", {\n                          main : [0, 'motor'],\n                          id : data.id\n                        }, \"self\");\n                      }\n                    } else {\n                      if(typeof main == \"number\"){\n                          target.setParameter(\"id\", data.id);\n                        target.trigger(\"pathChange\", \"virtual\");\n                        target.trigger(\"treeSelect\", data.id);\n                      } else {\n                        target.navigateTo(\"index\", {\n                          main : [0, 'virtual'],\n                          id : data.id\n                        }, \"self\");\n                      }\n                    }\n            \n                }\n            },\n            \n            \"format\" : [\n              {\n                \"name\": \"所属设备\",\n                \"value\": \"label\",\n                \"type\": \"text\"\n              },{\n                \"name\": \"状态\",\n                \"value\": \"status\",\n                \"type\": \"priority\"\n              }\n            ]\n          })\n        }\n      });\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 5
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    },
                    "url": "images/map/map1.png"
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "background-color": "",
                      "margin": "5px",
                      "padding": "10px"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "文字",
                            "type": "text",
                            "source": "TEXT",
                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                            "data": {
                              "applied": false,
                              "multipleCi": false,
                              "multipleKpi": false,
                              "resource": [],
                              "modelType": 300,
                              "resfilltype": "parameter",
                              "series": {
                                "manual": "新建文字",
                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                              },
                              "modelDisable": true
                            },
                            "style": {
                              "margin": "auto",
                              "padding": "0",
                              "font-size": "16px",
                              "font-weight": "bold",
                              "text-align": "left"
                            },
                            "advance": {
                              "getfunction": "kpiDataService.getValueList",
                              "category": "ci",
                              "condition": [
                                "kpi",
                                "{object:kpiQueryModel}"
                              ],
                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"报警通知\")\n        }\n    }\n}"
                            },
                            "parameters": {},
                            "echart": {},
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "高级列表",
                            "type": "dataTableAdvance",
                            "source": "DATATABLEADVANCE",
                            "parameters": {
                              "col": 1,
                              "pageSize": 10,
                              "listbottom": "standard"
                            },
                            "advance": {
                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var projectModel;\n      var projectAttr;\n      var render = function(){\n          var projectId = target.getParameter(\"id\");\n          target.getResourceById(projectId, function(resource){\n              target.queryFromDb({\n                  domain : resource.domains\n              }, function(alerts){\n                console.log(alerts)\n              target.render({\n                data : alerts,\n                on : {\n                    rowClick : function(event){\n                      console.log(event)\n                    }   \n                },\n                format : [\n                  {\n                    \"name\": \"设备名称\",\n                    \"value\": \"devName\",\n                    \"type\": \"text\",\n                    //\"width\" : 300\n                  }, {\n                    \"name\": \"报警来源\",\n                    \"value\": \"appName\",\n                    \"type\": \"text\",\n                    \"format\":function (elem) {\n                        if(elem == \"1\") {\n                            return \"采集系统\"\n                        }else if(elem == \"2\") {\n                            return \"智能诊断\"\n                        }else if(elem == \"3\") {\n                            return \"大数据分析\"\n                        }else if(elem == \"4\") {\n                            return \"离线诊断\"\n                        }\n                    }\n                  },{\n                    \"name\": \"报警消息\",\n                    \"value\": \"message\",\n                    \"type\": \"text\"\n                  },{\n                    \"name\": \"报警级别\",\n                    \"type\":\"priority\",\n                    \"value\" : \"severity\",\n                    \"format\":function (elem) {\n                        console.log(elem);\n                        if(elem == -1){\n                             return \"正常\";\n                        } else if(elem == 2){\n                             return \"注意\";\n                        }else if(elem == 3){\n                             return \"异常\";\n                        }else if(elem == 4){\n                             return \"警告\";\n                        }\n                    }\n                  },{\n                    \"name\": \"报警时间\",\n                    \"value\": \"firstArisingTime\",\n                    \"type\": \"date\"\n                  },{\n                    \"name\": \"报警状态\",\n                    \"value\": \"state\",\n                    \"type\": \"text\",\n                    \"format\":function (elem) {\n                     if(elem == 0){\n                             return \"新产生\";\n                        } else if(elem == 5){\n                             return \"已确认\";\n                        }else if(elem == 10){\n                             return \"待处理\";\n                        }else if(elem == 20){\n                             return \"已解决\";\n                        }else if(elem == 30){\n                             return \"已忽略\";\n                        }\n                    }\n                  },{\n                      \"name\":\"操作\",\n                      \"type\":\"button\",\n                      \"label\":\"过程跟踪\"\n                  }\n                ]\n              });\n            })\n          })\n        \n      }\n      target.getEditorStatus(\"PROJECTMODEL\", function(pmodel){\n          var dt = pmodel || {}\n          projectModel = dt.projectModel || [];\n          projectAttr = dt.projectAttr || {};\n          render();\n        });\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "url": "images/map/map1.png"
                          }
                        ]
                      }
                    ],
                    "url": "images/map/map1.png",
                    "parameters": {}
                  }
                ]
              }
            ],
            "url": "images/map/map1.png",
            "parameters": {}
          }
        ],
        "col": 12,
        "alertParams": {}
      },
      "id": "7",
      "$$hashKey": "object:1810"
    },
    {
      "label": "设备总览",
      "path": "devicegroup",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "组态视图",
                                            "type": "topo",
                                            "source": "TOPO",
                                            "advance": {
                                              "variable": "",
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              var createAlarm = function(index, node){\n                var cell = cells[index] || {};\n                var position;\n                if(cell){\n                  position = cell.position();\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                }\n                target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.on(\"click\", function(event){\n                       target.createSystemPopupByLocalPath(\"page8\", {\n                         width : \"400px\",\n                         title: node.label,\n                        },node.id);\n                  })\n                });\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n\n      });\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px",
                                              "background-repeat": "no-repeat"
                                            },
                                            "viewId": 469973748826064,
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "col": 7
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "5px",
                                      "padding": "10px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "padding": "0",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "text-align": "left"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"设备状态\")\n        }\n    }\n}"
                                            },
                                            "parameters": {}
                                          },
                                          {
                                            "label": "高级列表",
                                            "type": "dataTableAdvance",
                                            "source": "DATATABLEADVANCE",
                                            "parameters": {
                                              "col": 1,
                                              "pageSize": 5,
                                              "listbottom": "pageOnly"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var nodeId = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(tree){\n        var find = tree.find(function(node){\n          return node.id == nodeId;\n        });\n        if(find){\n          var children = find.children;\n          \n          target.render({\n            pageSize : 5,\n            data : children,\n            on : {\n                rowClick : function(event){\n                    var data = event.row;\n                    if(data.resourceType == \"device\"){\n                      if(typeof main == \"number\"){\n                          target.setParameter(\"id\", data.id);\n                          target.setParameter(\"deviceCode\",data.externalDevId)\n                        target.trigger(\"pathChange\", \"device\");\n                        target.trigger(\"treeSelect\", data.id);\n                      } else {\n                        target.navigateTo(\"index\", {\n                          main : [0, 'device'],\n                          id : data.id,\n                          deviceCode:data.externalDevId\n                        }, \"self\");\n                      }\n                    } else {\n                      if(typeof main == \"number\"){\n                          target.setParameter(\"id\", data.id);\n                        target.trigger(\"pathChange\", \"virtual\");\n                        target.trigger(\"treeSelect\", data.id);\n                      } else {\n                        target.navigateTo(\"index\", {\n                          main : [0, 'virtual'],\n                          id : data.id\n                        }, \"self\");\n                      }\n                    }\n            \n                }\n            },\n            \"format\" : [\n              {\n                \"name\": \"设备名称\",\n                \"value\": \"label\",\n                \"type\": \"text\"\n              },{\n                \"name\": \"状态\",\n                \"value\": \"status\",\n                \"type\": \"priority\"\n              },\n            //   {\n            //     \"name\": \"操作\",\n            //     \"label\" : \"详情\",\n            //     \"type\": \"button\",\n            //     \"icon\" : \"glyphicon glyphicon-hdd\",\n            //     on : {\n            //       click : function(event){\n            //         var data = event.row;\n            //         if(data.resourceType == \"device\"){\n            //           if(typeof main == \"number\"){\n            //               target.setParameter(\"id\", data.id);\n            //               target.setParameter(\"deviceCode\",data.externalDevId)\n            //             target.trigger(\"pathChange\", \"device\");\n            //             target.trigger(\"treeSelect\", data.id);\n            //           } else {\n            //             target.navigateTo(\"index\", {\n            //               main : [0, 'device'],\n            //               id : data.id,\n            //               deviceCode:data.externalDevId\n            //             }, \"self\");\n            //           }\n            //         } else {\n            //           if(typeof main == \"number\"){\n            //               target.setParameter(\"id\", data.id);\n            //             target.trigger(\"pathChange\", \"virtual\");\n            //             target.trigger(\"treeSelect\", data.id);\n            //           } else {\n            //             target.navigateTo(\"index\", {\n            //               main : [0, 'virtual'],\n            //               id : data.id\n            //             }, \"self\");\n            //           }\n            //         }\n            //       }\n            //     }\n            //   }\n            ]\n          })\n        }\n      });\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 5
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    },
                    "url": "images/map/map1.png"
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "background-color": "",
                      "margin": "5px",
                      "padding": "10px"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "文字",
                            "type": "text",
                            "source": "TEXT",
                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                            "data": {
                              "applied": false,
                              "multipleCi": false,
                              "multipleKpi": false,
                              "resource": [],
                              "modelType": 300,
                              "resfilltype": "parameter",
                              "series": {
                                "manual": "新建文字",
                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                              },
                              "modelDisable": true
                            },
                            "style": {
                              "margin": "auto",
                              "padding": "0",
                              "font-size": "16px",
                              "font-weight": "bold",
                              "text-align": "left"
                            },
                            "advance": {
                              "getfunction": "kpiDataService.getValueList",
                              "category": "ci",
                              "condition": [
                                "kpi",
                                "{object:kpiQueryModel}"
                              ],
                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"报警通知\")\n        }\n    }\n}"
                            },
                            "parameters": {},
                            "echart": {},
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "高级列表",
                            "type": "dataTableAdvance",
                            "source": "DATATABLEADVANCE",
                            "parameters": {
                              "col": 1,
                              "pageSize": 10,
                              "listbottom": "standard"
                            },
                            "advance": {
                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var projectModel;\n      var projectAttr;\n      var render = function(){\n          var projectId = target.getParameter(\"id\");\n          target.getResourceById(projectId, function(resource){\n              target.queryFromDb({\n                  domain : resource.domains\n              }, function(alerts){\n                console.log(alerts)\n              target.render({\n                data : alerts,\n                on : {\n                    rowClick : function(event){\n                      console.log(event)\n                    }   \n                },\n                format : [\n                  {\n                    \"name\": \"设备名称\",\n                    \"value\": \"devName\",\n                    \"type\": \"text\",\n                    //\"width\" : 300\n                  }, {\n                    \"name\": \"报警来源\",\n                    \"value\": \"appName\",\n                    \"type\": \"text\",\n                    \"format\":function (elem) {\n                        if(elem == \"1\") {\n                            return \"采集系统\"\n                        }else if(elem == \"2\") {\n                            return \"智能诊断\"\n                        }else if(elem == \"3\") {\n                            return \"大数据分析\"\n                        }else if(elem == \"4\") {\n                            return \"离线诊断\"\n                        }\n                    }\n                  },{\n                    \"name\": \"报警消息\",\n                    \"value\": \"message\",\n                    \"type\": \"text\"\n                  },{\n                    \"name\": \"报警级别\",\n                    \"type\":\"priority\",\n                    \"value\" : \"severity\",\n                    \"format\":function (elem) {\n                        console.log(elem);\n                        if(elem == -1){\n                             return \"正常\";\n                        } else if(elem == 2){\n                             return \"注意\";\n                        }else if(elem == 3){\n                             return \"异常\";\n                        }else if(elem == 4){\n                             return \"警告\";\n                        }\n                    }\n                  },{\n                    \"name\": \"报警时间\",\n                    \"value\": \"firstArisingTime\",\n                    \"type\": \"date\"\n                  },{\n                    \"name\": \"报警状态\",\n                    \"value\": \"state\",\n                    \"type\": \"text\",\n                    \"format\":function (elem) {\n                     if(elem == 0){\n                             return \"新产生\";\n                        } else if(elem == 5){\n                             return \"已确认\";\n                        }else if(elem == 10){\n                             return \"待处理\";\n                        }else if(elem == 20){\n                             return \"已解决\";\n                        }else if(elem == 30){\n                             return \"已忽略\";\n                        }\n                    }\n                  },{\n                      \"name\":\"操作\",\n                      \"type\":\"button\",\n                      \"label\":\"过程跟踪\"\n                  }\n                ]\n              });\n            })\n          })\n        \n      }\n      target.getEditorStatus(\"PROJECTMODEL\", function(pmodel){\n          var dt = pmodel || {}\n          projectModel = dt.projectModel || [];\n          projectAttr = dt.projectAttr || {};\n          render();\n        });\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "url": "images/map/map1.png"
                          }
                        ]
                      }
                    ],
                    "url": "images/map/map1.png",
                    "parameters": {}
                  }
                ]
              }
            ],
            "url": "images/map/map1.png",
            "parameters": {}
          }
        ],
        "col": 12,
        "alertParams": {}
      },
      "id": "8",
      "$$hashKey": "object:1904"
    },
    {
      "label": "电机",
      "path": "motor",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "8px",
              "margin": "5px"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px",
                                      "height": "350px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "组态视图",
                                            "type": "topo",
                                            "source": "TOPO",
                                            "advance": {
                                              "variable": "",
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              var createAlarm = function(index, node){\n                var cell = cells[index] || {};\n                var position;\n                if(cell){\n                  position = cell.position();\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                }\n                target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.on(\"click\", function(event){\n                       target.createSystemPopupByLocalPath(\"page8\", {\n                         width : \"400px\",\n                         title: node.label,\n                        },node.id);\n                  })\n                });\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px",
                                              "background-repeat": "no-repeat"
                                            },
                                            "viewId": 469973748826064,
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "col": 4
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px",
                                      "height": "350px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n        \n        var target = event.target;\n        var global = event.global;\n        var option = {\n    title: {\n        text: '电机电流趋势'\n    },\n    tooltip : {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'cross',\n            label: {\n                backgroundColor: '#6a7985'\n            }\n        }\n    },\n    legend: {\n        data:['邮件营销']\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'category',\n            boundaryGap : false,\n            data : ['周一','周二','周三','周四','周五','周六','周日']\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'邮件营销',\n            type:'line',\n            stack: '总量',\n            data:[120, 132, 101, 134, 90, 230, 210]\n        }\n    ]\n};\n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      event.target.render(option);\n        \n        var deviceId = target.getParameter('id')\n        target.getDevicesByCondition({'resourceId':deviceId},function (returnData) {\n            var kpiCodes = [];\n            console.log(returnData)\n         for(var i=0;i<returnData[0].physicalConfig.accessConfigs.length;i++){\n                 kpiCodes.push(returnData[0].physicalConfig.accessConfigs[i].kpiId);\n\t\t    } \n\t\t    console.log(\"yeyeyeye\")\n\t\t    console.log(returnData)\n\t\t    console.log(kpiCodes)\n\t\t     var kpiQueryModel = {\n                \"category\": \"ci\",\n                \"isRealTimeData\": true,\n                \"nodeIds\": [deviceId],\n                \"kpiCodes\": kpiCodes,\n                \"startTime\": null,\n                \"endTime\": null,\n                \"timeRange\": \"\",\n                \"statisticType\": \"psiot\",\n                \"includeInstance\": true,\n                \"condList\": []\n            }\n            \n            var params = [\"kpi\",kpiQueryModel]\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.log(returnData)\n\t\t\n\t\t\t\n\t\t\t})\n        })\n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n   \n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "width": "100%",
                                              "height": "300px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "col": 8
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    },
                    "url": "images/map/map1.png"
                  },
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "line-height": "30px",
                                      "text-align": "left",
                                      "color": "rgb(238, 238, 238)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"告警列表\");\n        }\n    }\n}"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "高级列表",
                                    "type": "dataTableAdvance",
                                    "source": "DATATABLEADVANCE",
                                    "parameters": {
                                      "col": 1,
                                      "pageSize": 10,
                                      "listbottom": "standard"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var deviceId = target.getParameter('id')\n        \n      var queryParams = {\n            \"domain\":\"\",\n            \"nodeType\":\"\",\n            \"pageSize\":1000,\n            \"severities\":\"1,2,3,4\",\n            \"states\":\"0,5,10,20\",\n            \"nodeIds\":deviceId\n            };\n        var queryParams4Page = {\n            \"start\": 0,\n            \"length\": \"\",\n            \"sort\": \"createTime\",\n            \"sortType\": \"desc\",\n            \"statCount\": true,\n            \"total\": 0\n        };\n        var params = [queryParams,queryParams4Page] \n      \n    target.postService(\"alertQueryFlexService\",\"getAlertByPage\",params,function (returnData) {\n        //debugger\n        target.render({\n        data : returnData.data.data,\n        on : {\n          rowClick : function(event){\n            //target.navigateTo('production', {});\n          }\n        },\n         format : [\n                  {\n                    \"name\": \"设备名称\",\n                    \"value\": \"devName\",\n                    \"type\": \"text\",\n                    //\"width\" : 300\n                  }, {\n                    \"name\": \"报警消息\",\n                    \"value\": \"message\",\n                    \"type\": \"text\"\n                  },{\n                    \"name\": \"报警级别\",\n                    \"type\":\"priority\",\n                    \"value\" : \"severity\",\n                    \"format\":function (elem) {\n                        console.log(elem);\n                        if(elem == -1){\n                             return \"正常\";\n                        } else if(elem == 2){\n                             return \"注意\";\n                        }else if(elem == 3){\n                             return \"异常\";\n                        }else if(elem == 4){\n                             return \"警告\";\n                        }\n                    }\n                  },{\n                    \"name\": \"报警时间\",\n                    \"value\": \"firstArisingTime\",\n                    \"type\": \"date\"\n                  },{\n                      \"name\":\"操作\",\n                      \"type\":\"button\",\n                      \"label\":\"过程跟踪\"\n                  }\n                ]\n        \n      });\n         \n         \n         \n         \n         \n         \n     })\n     \n     \n   \n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          }
                        ],
                        "col": 7
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "14px",
                                      "font-weight": "bold",
                                      "line-height": "30px",
                                      "text-align": "left",
                                      "color": "rgb(238, 238, 238)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"离线诊断\");\n        }\n    }\n}"
                                    },
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "高级列表",
                                    "type": "dataTableAdvance",
                                    "source": "DATATABLEADVANCE",
                                    "parameters": {
                                      "col": 1,
                                      "pageSize": 10,
                                      "listbottom": "none"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter('id')\n      \n      \n    target.getDomainAreaLineTree(function(domaintree){\n    var find = domaintree.find(function(node){\n        return node.id == id\n    });\n    if(find){\n        var deviceCode = find.externalDevId;\n        //console.log(find.externalDevId)\n        target.postService(\"deviceResumeUIService\",\"getDeviceOfflineReportListByCondition\",{devId:deviceCode},function(returnData){\n        target.render({\n        data : returnData.data,\n        on : {\n          rowClick : function(event){\n            //target.navigateTo('production', {});\n          }\n        },\n        format : [\n          {\n            \"name\": \"状态\",\n            \"value\": \"conclusion\",\n            \"type\": \"text\",\n            \"format\":function (elem) {\n                if(elem == '1') {\n                    return '正常'\n                }else if(elem == '2') {\n                    return '注意'\n                }else if(elem == '3') {\n                    return '异常'\n                }else if(elem == '4') {\n                    return '警告'\n                }\n            }\n          },{\n            \"name\": \"专业\",\n            \"value\": \"specialty\",\n            \"type\": \"text\",\n             \"format\":function (elem) {\n                if(elem == 'Z') {\n                    return '振动'\n                }else if(elem == 'N') {\n                    return '扭矩'\n                }else if(elem == 'D') {\n                    return '电机电流'\n                }else if(elem == 'Q') {\n                    return '清洁度监测'\n                }else if(elem == 'J') {\n                    return '绝缘油分析'\n                }else if(elem == 'M') {\n                    return '磨损分析'\n                }else if(elem == 'H') {\n                    return '红外热成像检测'\n                }else if(elem == 'K') {\n                    return '开关温度'\n                }else if(elem == 'W') {\n                    return '表面温度'\n                }else if(elem == 'P') {\n                    return '液压'\n                }else if(elem == 'Y') {\n                    return '油液'\n                }else {\n                    return '工艺指标'\n                }\n             }\n          },{\n            \"name\": \"报告编号\",\n            \"value\": \"rptNo\",\n            \"type\": \"text\"\n          },{\n            \"name\": \"时间\",\n            \"value\": \"rptDate\",\n            \"type\": \"date\"\n          }\n        ]\n      });\n         \n         \n         \n         \n         \n         \n     })\n        \n        \n\n      \n        }\n    })\n    \n\n     \n   \n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "col": 5
                      }
                    ]
                  }
                ]
              }
            ],
            "url": "images/map/map1.png"
          }
        ],
        "col": 12
      },
      "id": "9",
      "$$hashKey": "object:2323"
    }
  ],
  "setting": "{\n  \"showNavi\": false,\n  \"theme\": \"steel\",\n  \"style\": {\n    \"padding\": \"15px\"\n  }\n}"
}