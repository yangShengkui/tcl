{
  "version": "V_2",
  "groups": [
    {
      "id": "0",
      "label": "服务中心",
      "path": "index",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "0px",
              "margin": "0px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)",
              "height": "calc(100vh - 100px)",
              "overflow-y": "auto",
              "overflow-x": "hidden"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "组态视图",
                            "type": "topo",
                            "source": "TOPO",
                            "advance": {
                              "variable": "",
                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var lngsstart = 72; var lngswidth = 65;\n      var latsstart = 13.5; var latswidth = 40;\n      var lngs = [lngsstart, lngsstart + lngswidth];\n      var lats = [latsstart, latsstart + latswidth];\n      var rootScope = target.getRootScope();\n      target.render();\n      target.on(\"$loadCiKpiComplete\", function(cells){\n        target.getDomainAreaLineTree_alertStatus(function(domaintree){\n          var domains = domaintree.children.sort(function(a,b){\n            var y1 = a.$attr(\"values/latitude\");\n            var y2 = b.$attr(\"values/latitude\");\n            return y2 - y1;\n          });\n          var WIDTH = 1200, HEIGHT = 700;\n          var ci = domains.map(function(elem){\n            return elem.id;\n          });\n          var kpi = [999999, 3014];\n          target.getKpiValueCi(ci, kpi, function(valuelist){\n            var create3Dbar = function(domain){\n              var name = domain.label;\n              var lng = domain.values.longitude;\n              var lat = domain.values.latitude;\n              var deviceAll = domain.description;\n              if(deviceAll == \" \") {\n                  deviceAll = 0;\n              }\n              target.create3Dbar(name, function(ins){\n                  var find = valuelist.find(function(value){\n                      return value.nodeId == domain.id && value.kpiCode == 999999;\n                  }) || {};\n                  var deviceNum = valuelist.find(function(value){\n                      return value.nodeId == domain.id && value.kpiCode == 3014;\n                  }) || {};\n                  //console.log(deviceNum.value);\n                  //console.log(deviceAll);\n                  if(deviceNum.value > deviceAll) {\n                      deviceNum.value = deviceAll;\n                  }\n                 var persentage = (deviceNum.value / deviceAll) * 100;\n                ins.setAlarmStatus(find.value);\n                //ins.setValue(persentage.value || 0);\n                ins.setValue(persentage || 0);\n                //console.log(ins)\n                var x = (lng - lngs[0]) / (lngs[1] - lngs[0]) * 1200;\n                var y = (lats[1] - lat) / (lats[1] - lats[0]) * 700;\n                ins.setPos({\n                  x : x,\n                  y : y\n                });\n                ins.on(\"click\", function(event){\n                    domain.click();\n                });\n              });\n            }\n            for(var i in domains){\n              create3Dbar(domains[i])\n            }\n          },{\n            \"isRealTimeData\" : true,\n            \"includeInstance\": true\n            });\n        });\n      })\n    }\n  }\n}"
                            },
                            "style": {
                              "font-size": "12px",
                              "background-repeat": "no-repeat",
                              "margin-top": "10%"
                            },
                            "viewId": 546900339506066,
                            "parameters": {}
                          }
                        ],
                        "col": 7
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "5px 10px 10px 10px",
                              "padding": "10px",
                              "height": "260px"
                            },
                            "advance": {
                              "expression": "{}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "12px",
                                      "font-weight": "bold",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "label": "重复单元",
                                    "type": "repeater",
                                    "source": "REPEATER",
                                    "parameters": {
                                      "col": 6
                                    },
                                    "advance": {
                                      "getListTable": "allprojects",
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      target.getDomainAreaLineTree(function(domaintree){\n        domaintree.children.sort(function(a,b){\n          var y1 = a.$attr(\"values/latitude\");\n          var y2 = b.$attr(\"values/latitude\");\n          return y2 - y1;\n        });\n        var length = domaintree.children.length\n        var domains = domaintree.children;\n        var description = [];\n        var mountain = domains.map(function(elem){\n          description.push(elem.description)\n          return elem.id;\n        });\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6100]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiNames = ['正常','注意','警告','监测台数'];\n            //var kpiIds = ['severity,4', 'severity,3', 'severity,2','description']\n            var data = returnData.data;\n            console.log(data)\n            var all = [];\n            var normal = [];\n            var notice = [];\n            var warning = [];\n            var risk = [];\n            var data = returnData.data;\n        //对数据的处理   \n        for(var j = 0; j < domains.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n                \n            if(data[i].nodeId == domains[j].id) {\n                if(data[i].instance == \"severity,0\") {\n                    all.push(data[i].value)\n                }else if (data[i].instance == \"severity,-1\") {\n                    normal.push(data[i].value)\n                }else if(data[i].instance == \"severity,2\") {\n                    notice.push(data[i].value)\n                }else if(data[i].instance == \"severity,3\") {\n                    warning.push(data[i].value)\n                }else if(data[i].instance == \"severity,4\") {\n                    risk.push(data[i].value)\n                }\n\n              }\n            }\n\n            var jlength = (j + 1)\n            if(all.length != jlength) {\n                var add = jlength - all.length;\n                for(var z = 0; z < add; z++) {\n                    all.push('0')\n                }\n            }\n            if(notice.length != jlength) {\n                var add = jlength - notice.length;\n                for(var z = 0; z < add; z++) {\n                    notice.push('0')\n                }\n            }\n            if(normal.length != jlength) {\n                var add = jlength - normal.length;\n                for(var x = 0; x < add; x++) {\n                    normal.push('0')\n               }\n            }\n            if(warning.length != jlength) {\n                var add = jlength - warning.length;\n                for(var y = 0; y < add; y++) {\n                    warning.push('0')\n                }\n                        \n            }\n            if(warning.length != jlength) {\n                var add = jlength - risk.length;\n                    for(var y = 0; y < add; y++) {\n                        risk.push('0')\n                    }\n                        \n                }\n\n        }\n        var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = domain.label;\n            rs.description = domain.description;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                  //正常数据\n                r.value =  normal[num]\n            }else if(index == 1) {\n                //注意台数\n                r.value = notice[num]\n            }else if(index == 2) {\n                //告警台数\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }\n               return r;\n            })\n            return rs;\n          });\n          //console.log(list)\n          for(var j = 0; j < list.length; j++) {\n              if(list[j].description) {\n                  var listNum = list[j];\n                  list.splice(j, 1)\n                  list.unshift(listNum)\n              }\n          }\n          \n          target.render(list);\n          \n          \n        },{\n            \"isRealTimeData\" : true,\n            \"includeInstance\": true\n        });\n      });\n    }\n  }\n}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 2,
                                        "children": [
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var label = target.$repeatData.province;\n      var description = target.$repeatData.description || 0;\n      var ctrlGroups = [[{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              wrap.css(\"height\", \"70px\");\n              wrap.css(\"border\", \"1px solid rgba(250,250,250,.3)\");\n              wrap.css(\"background-color\", \"rgba(0,100,250,.1)\");\n              var title = $(\"<div></div>\");\n              title.text(label);\n              title.css(\"font-size\", \"12px\");\n              title.css(\"color\", \"#fff\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"top\", \"12px\");\n              title.css(\"left\", \"15px\");\n              title.css(\"font-weight\", \"bold\");\n              var sub = $(\"<div></div>\");\n              sub.text(\"重要台数\");\n              sub.css(\"position\", \"absolute\");\n              sub.css(\"top\", \"30px\");\n              sub.css(\"left\", \"15px\");\n              sub.css(\"color\", \"#aaa\");\n              sub.css(\"font-size\", \"10px\");\n              var number = $(\"<div></div>\");\n              number.text(description);\n              number.css(\"position\", \"absolute\");\n              number.css(\"top\", \"45px\");\n              number.css(\"left\", \"15px\");\n              number.css(\"font-size\", \"14px\");\n              number.css(\"font-weight\", \"bold\");\n              wrap.append(title);\n              wrap.append(sub);\n              wrap.append(number);\n              return wrap;\n          }\n        }]];\n      target.render(ctrlGroups);\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {}
                                          },
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控件组",
                                                    "type": "ctrlgroup",
                                                    "source": "CTRLGROUP",
                                                    "advance": {
                                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var colors = [target.getAlertColor(1), target.getAlertColor(2), target.getAlertColor(3)];\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "help": "../pdf/ctrlgroup.pdf",
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "SVG视图",
                                                    "type": "svgchart",
                                                    "source": "SVGCHART",
                                                    "advance": {
                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"5%\",\n              left : \"10%\",\n              height : \"90%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            itemStyle : {\n                normal : {\n                    color : \"#00bc79\"\n                }\n            },\n            data: [repeatData.data[0].value]\n          },{\n            stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            itemStyle : {\n                normal : {\n                    color : \"#efd709\"\n                }\n            },\n            data: [repeatData.data[1].value]\n          },{\n            stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            itemStyle : {\n                normal : {\n                    color : \"#ee6b1c\"\n                }\n            },\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "0px",
                                                      "font-size": "12px",
                                                      "height": "125px"
                                                    },
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 6
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "style": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {},
                            "url": "images/map/map1.png"
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "10px",
                              "padding": "10px",
                              "height": "260px"
                            },
                            "advance": {
                              "expression": "{}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "margin": "auto",
                                      "padding": "5px",
                                      "font-size": "12px",
                                      "font-weight": "bold",
                                      "text-align": "left",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "kpi": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "resource": [],
                                      "modelDisable": true
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n       var filter = {\"layer\":2,\"modelId\":300,\"domains\":\"/0/515445641576227/\"};\n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n          \n            //for(var i = returnData.length-1; i >= 0; i--) {\n          \n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            //console.log(returnData);\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n               var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                debugger;\n                for(var j = 0; j < mountain.length; j++) {\n                 //for(var j = mountain.length-1; j >= 0; j--) {\n                    //for(var i = data.length-1; i >= 0; i--) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            if(data[i].instance == '1,all,values') {\n                                //synthesize.push(data[i].value.toFixed(0))\n                                synthesize.unshift(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                //capacity.push(data[i].value.toFixed(0))\n                                capacity.unshift(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                //big.push(data[i].value.toFixed(0))\n                                big.unshift(data[i].value.toFixed(0))\n                            }\n                        }\n                     \n                    }\n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push('0')\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push('0')\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push('0')\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n            \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          class : \"col-md-2\",\n          style : {\n              \"text-align\" : \"center\",\n               \"color\":\"white\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n            type : \"progressbar\",\n            shownumber : true,\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\",\n            // style:{\n            //     'color' : '#01BAFF'\n            // }\n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n            type : \"progressbar\",\n            shownumber : true,\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\",\n            // style:{\n            //     'color' : '#2CFEF5'\n            // }\n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n            type : \"progressbar\",\n            shownumber : true,\n            value : big[index],\n            class : i == 2 ? \"col-md-4\" : \"col-md-4\",\n            // style:{\n            //     'color' : '#C396F2'\n            // }\n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n        //console.log(ctrlGroups)\n        target.render(ctrlGroups);\n                \n\n                  \n        },{\n            \"isRealTimeData\" : true,\n            \"includeInstance\": true\n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "font-size": "12px"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "parameters": {}
                                  }
                                ]
                              }
                            ],
                            "url": "images/map/map1.png",
                            "parameters": {}
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "margin": "10px",
                              "padding": "10px",
                              "height": "280px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "style": {
                                      "margin": "auto",
                                      "padding": "5px",
                                      "font-size": "12px",
                                      "font-weight": "bold",
                                      "text-align": "left",
                                      "color": "rgb(255, 255, 255)"
                                    },
                                    "advance": {
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩统计（当月内）\")\n        }\n    }\n}"
                                    },
                                    "data": {
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "modelDisable": true
                                    },
                                    "url": "images/map/map1.png",
                                    "parameters": {}
                                  },
                                  {
                                    "label": "高级视图",
                                    "type": "advanceEchart",
                                    "source": "ADVANCEECHART",
                                    "parameters": {
                                      "theme": "default"
                                    },
                                    "advance": {
                                      "expression": "express = {\n  on : {\n    init : function(event){\n        var target = event.target;\n        var global = event.global;\n        var filter = {\"layer\":2,\"modelId\":300,\"domains\":\"/0/515445641576227/\"};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var baseName = [];\n            var mountain = [];\n            //for(var i = 0; i < returnData.length;i++) {\n            for(var i = returnData.length-1; i >= 0;i--) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var projectData = [];\n            for(var j = 0; j < returnData.data.length; j++) {\n                if(returnData.data[j].instance == 'state,all') {\n                     projectData.push(returnData.data[j].value)\n                 }\n            }\n            \n            var option = {\n            tooltip : {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            }\n             },\n            legend: {\n                data: ['状态维修项目数'],\n                top : \"2%\",\n                right: \"2%\"\n            },\n            grid: {\n                left: '5%',\n                right: '4%',\n                bottom: '3%',\n                height : '80%',\n                containLabel: true\n            },\n            xAxis:  {\n                type: 'value'\n            },\n             yAxis: {\n                type: 'category',\n                data: baseName,\n                axisLabel : {\n                    margin : 30,\n                    color : \"#72b3d7\",\n                    fontWeight : \"bold\"\n                }\n            },\n            series: [\n            {\n            name: '状态维修项目数',\n            type: 'bar',\n            stack: '总量',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'insideRight',\n                    textBorderColor:'0'\n                }\n            },\n             itemStyle: {\n                normal: {\n                    color:target.linearGradient(\n                        0, 0, 1, 0,\n                        [\n                            {offset: 0, color: '#fed154'},\n                            {offset: 1, color: '#ffa823'}\n                        ]\n                    )\n                },\n               \n            },\n            data: projectData\n            }\n       \n        ]\n    };\n            event.target.render(option);\n             \n            })\n    },{\n            \"isRealTimeData\" : true,\n            \"includeInstance\": true\n        })\n     \n      \n   \n    }\n  }\n}"
                                    },
                                    "style": {
                                      "width": "100%",
                                      "height": "240px"
                                    },
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "col": 5
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "$$hashKey": "object:1834"
    },
    {
      "label": "产线",
      "path": "production",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "0px",
              "margin": "0px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)",
              "height": "calc(100vh - 100px)",
              "overflow-y": "auto",
              "overflow-x": "hidden"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "10px",
                      "margin": "5px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "数结构导航",
                                    "type": "navitree",
                                    "source": "NAVITREE",
                                    "advance": {
                                      "expression": ""
                                    },
                                    "style": {}
                                  }
                                ],
                                "col": 8
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 4
                              }
                            ]
                          },
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "8px",
                              "margin": "5px  5px  10px 5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "文字",
                                    "type": "text",
                                    "source": "TEXT",
                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                    "data": {
                                      "applied": false,
                                      "multipleCi": false,
                                      "multipleKpi": false,
                                      "resource": [],
                                      "modelType": 300,
                                      "resfilltype": "parameter",
                                      "series": {
                                        "manual": "新建文字",
                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                      },
                                      "modelDisable": true
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "padding": "0",
                                      "font-size": "14px",
                                      "font-weight": "bold"
                                    },
                                    "advance": {
                                      "getfunction": "kpiDataService.getValueList",
                                      "category": "ci",
                                      "condition": [
                                        "kpi",
                                        "{object:kpiQueryModel}"
                                      ],
                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            \n            var target = event.target;\n            \n            \n            var workObj = target.getParameter(\"id\");\n     \n\n    \n        target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n            return node.id == workObj\n        });\n        if(find){\n            var  label = find.label;\n        }\n            target.setText(label)\n            \n            \n    })       \n            \n            \n            \n            \n            \n           \n           \n        }\n    }\n}"
                                    },
                                    "parameters": {}
                                  },
                                  {
                                    "label": "组态视图",
                                    "type": "topo",
                                    "source": "TOPO",
                                    "advance": {
                                      "variable": "",
                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              var createAlarm = function(index, node){\n                var cell = cells.find(function(cell){\n                    var text = cell.attr(\"text/text\");\n                    //console.log(text, cell);\n                    return node.label.indexOf(text) != -1;\n                }) || cells[index];\n                \n                var position;\n                if(cell){\n                  if(cell.position){\n                    position = cell.position();\n                  };\n                }\n                console.log(node.label, cell, position);\n                position = position || {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  //设置状态\n                  node.$on(\"statusChanged\", function(nd){\n                     ins.setAlarmStatus(node.status); \n                  });\n                  ins.setAlarmStatus(node.status);\n                  ins.on(\"mouseover\",function (event) {\n                    target.createDeviceDropList(node.children, position, {\n                      click : function(item){\n                        item.click();\n                      },\n                      titleClick : function(){\n                        node.click();\n                      }\n                    });\n                  })\n                });\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "12px",
                                      "background-repeat": "no-repeat"
                                    },
                                    "viewId": 469973748826064,
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "parameters": {}
                          },
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "height": "390px",
                                      "margin": "5px  5px  0px  5px"
                                    },
                                    "advance": {
                                      "expression": "{}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "padding": "5px",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "margin": "5px",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"设备状态总览\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "重复单元",
                                            "type": "repeater",
                                            "source": "REPEATER",
                                            "parameters": {
                                              "col": 1
                                            },
                                            "advance": {
                                              "getListTable": "allprojects",
                                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n\n      var id = target.getParameter(\"id\") ;\n      \n      \n      \n    target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n            return node.id == id\n        });\n        if(find){\n            var  label = find.label;\n            var description = find.description; \n            var domains = [];\n            domains.push(label);\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":[id],\"kpiCodes\":[6100]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                var kpiNames = ['正常','注意','警告','监测台数','重要台数','数据采集点'];\n                var data = returnData.data;\n                console.log(data)\n                var all = [];\n                var normal = [];\n                var notice = [];\n                var warning = [];\n                var risk = [];\n                var data = returnData.data;\n                //对数据的处理   \n                for(var i = 0; i < data.length; i++) {\n                    if(data[i].instance == \"severity,0\") {\n                        all.push(data[i].value)\n                    }else if (data[i].instance == \"severity,-1\") {\n                        normal.push(data[i].value)\n                    }else if(data[i].instance == \"severity,2\") {\n                        notice.push(data[i].value)\n                    }else if(data[i].instance == \"severity,3\") {\n                        warning.push(data[i].value)\n                    }else if(data[i].instance == \"severity,4\") {\n                        risk.push(data[i].value)\n                    }\n\n                }\n\n            if(all.length != 1) {\n                all.push('0')\n            }\n            if(notice.length != 1) {\n                notice.push('0')\n            }\n            if(normal.length != 1) {\n                normal.push('0')\n            }\n            if(warning.length != 1) {\n                warning.push('0')\n            }\n            if(risk.length != 1) {\n                risk.push('0')\n            }\n\n\n        //数据采集点\n         var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":[id],\"kpiCodes\":[6104]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            gather = returnData.data[0].value;\n            \n               var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = label;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                r.value =  normal[num]\n            }else if(index == 1) {\n                r.value = notice[num]\n            }else if(index == 2) {\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }else if(index == 4) {\n                r.value = description;\n            }else if(index == 5) {\n                r.value = gather;\n            }\n                return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          target.render(list);\n            \n            \n        })\n       \n        \n        \n        \n        \n     \n          \n          \n        });\n            \n            \n            \n            \n        }\n    })\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n\n\n        \n        \n       \n    }\n  }\n}"
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "type": "row",
                                                    "source": "ROW",
                                                    "parameters": {
                                                      "alignment": "bootstrap"
                                                    },
                                                    "style": {},
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "children": [
                                                          {
                                                            "label": "控件组",
                                                            "type": "ctrlgroup",
                                                            "source": "CTRLGROUP",
                                                            "advance": {
                                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var colors = [target.getAlertColor(1), target.getAlertColor(2), target.getAlertColor(3)];\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"40px\");\n              //wrap.css(\"height\", \"35px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              //bar.css(\"height\", \"25px\");\n              bar.css(\"height\", \"40px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px"
                                                            },
                                                            "help": "../pdf/ctrlgroup.pdf",
                                                            "parameters": {}
                                                          }
                                                        ],
                                                        "col": 6
                                                      },
                                                      {
                                                        "type": "column",
                                                        "children": [
                                                          {
                                                            "label": "SVG视图",
                                                            "type": "svgchart",
                                                            "source": "SVGCHART",
                                                            "advance": {
                                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"5%\",\n              left : \"10%\",\n              height : \"90%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "0px",
                                                              "font-size": "12px",
                                                              "height": "320px"
                                                            },
                                                            "parameters": {}
                                                          }
                                                        ],
                                                        "col": 6
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "style": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 2
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px  5px 0px 5px",
                                      "min-height": "390px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "padding": "5px",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "margin": "5px",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n       var workObj = target.getParameter(\"id\");\n       //console.log('222' + workObj)\n       \n      var filter = {\"layer\":1,\"modelId\":302,\"domains\":workObj};\n       \n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info( returnData.data)\n                var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                for(var j = 0; j < mountain.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            if(data[i].instance == '1,all,values') {\n                                synthesize.push(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                capacity.push(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                big.push(data[i].value.toFixed(0))\n                            }\n                        }\n                    }\n                    \n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push('0')\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push('0')\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push('0')\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          //class : \"col-md-1\",\n          class : \"col-md-3\",\n          style : {\n              \"text-align\" : \"center\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n            type : \"progressbar\",\n            shownumber : true,\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\"\n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n            type : \"progressbar\",\n            shownumber : true,\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\"\n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n                shownumber : true,\n            type : \"progressbar\",\n            value : big[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\"\n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n      console.log(ctrlGroups)\n      target.render(ctrlGroups);\n                \n\n                  \n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {}
                                  }
                                ],
                                "col": 4
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px  5px 0px 5px",
                                      "min-height": "390px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "padding": "5px",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "margin": "5px",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"异常事件分布\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "express = {\n  on : {\n    init : function(event){\n        var target = event.target;\n        var global = event.global;\n        var workObj = target.getParameter(\"id\");\n        //\"524031514586065\"\n        target.postService(\"dictionaryService\",\"/getAllDicts\",[],function (returnData) {\n           \n            var specialtyProps = []\n            for(var i = 0; i < returnData.data.length;i++) {\n                if(returnData.data[i].dictCode == 'specialtyProps') {\n                    specialtyProps.push({value:returnData.data[i].valueCode,label:returnData.data[i].label})\n                }\n            }\n            // console.log('returnData',specialtyProps)\n            // debugger;\n       \n        \n        var param = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n                \"nodeIds\": [workObj],\"kpiCodes\":[6105]}];\n        var allData = [];\n        var major = [];\n        var abnormal = [];\n                target.postService(\"kpiDataFlexService\",\"getKpiValueList\",param,function (returnData) {\n                //console.log( returnData.data)\n                for(var i = 0; i < returnData.data.length; i++) {\n                  \n                    for(var j = 0; j < specialtyProps.length; j++) {\n                        if(returnData.data[i].instance == specialtyProps[j].value) {\n                            returnData.data[i].instance = specialtyProps[j].label\n                        }\n                    }\n                    // console.log('returnData',returnData.data)\n                    // debugger\n                    if(returnData.data[i].value != 0) {\n                        major.push({'name':returnData.data[i].instance,'value':returnData.data[i].value})\n                        allData.push(returnData.data[i].instance)\n                    }\n                    \n                    \n                    \n                }\n                \n                var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n                \"nodeIds\": [workObj],\"kpiCodes\":[6103]}];\n                 \n                 \n               \n                target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n            \n                    \n                    for(var i = 0; i < returnData.data.length; i++) {\n                        if(returnData.data[i].value != 0) {\n                            abnormal.push({'name':returnData.data[i].instance,'value':returnData.data[i].value})\n                            allData.push(returnData.data[i].instance)\n                        }\n                        \n                    }\n                    \n                    \n                    \n                            var option = {\n           \n    tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n    },\n    legend: {\n        x: '2%',\n        y:'bottom',\n        orient:'horizontal',\n      data:allData,\n        textStyle:{\n            color:'#cecece',\n            fontSize:10\n        }\n    },\n    series: [\n\n        {\n            name:'',\n             type:'pie',\n            calculable:true,\n             center: ['50%', '40%'],\n           selectedMode: 'single',\n            radius: ['8%', '22%'],\n\n            label: {\n                normal: {\n                    formatter: '  {c} ',\n                    position: 'inner',\n                    textBorderWidth:0,\n                    fontWeight:'lighter',\n                    fontSize:10,\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: false\n                }\n            },\n            itemStyle:{\n                normal:{\n                    borderWidth:2,\n                    borderColor:'#dcefe1',\n                     shadowColor: 'rgba(0, 0, 0, 0.5)',\n                     shadowBlur: 10\n                }\n            },\n            data:major\n        },\n        {\n            name:'',\n            center: ['50%', '40%'],\n            type:'pie',\n            radius: ['30%', '45%'],\n            label: {\n                normal: {\n                    formatter: '  {c} ',\n                   rich: {\n                      \n                        b: {\n                            fontSize: 12,\n                            lineHeight: 50\n                        }\n                       \n                    }\n                }\n            },\n            itemStyle:{\n                normal:{\n                    borderWidth:4,\n                    borderColor:'#dcefe1',\n                     shadowColor: 'rgba(0, 0, 0, 0.5)',\n                     shadowBlur: 10\n                }\n            },\n            data:abnormal\n        }\n    ]\n        };\n        event.target.render(option);\n                    \n                \n      \n        })\n        \n      \n\n     \n        \n                \n                \n                \n      \n        })  \n        \n        \n        \n\n      \n        \n        \n        \n             \n        })\n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "width": "100%",
                                              "height": "320px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png",
                                    "parameters": {}
                                  }
                                ],
                                "col": 3
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px  5px 0px 5px",
                                      "min-height": "390px"
                                    },
                                    "advance": {
                                      "expression": "{}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "padding": "5px",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "margin": "5px",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩（当月内）\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n      //var label = target.getParameter(\"label\");\n     \n\n    \n    target.getDomainAreaLineTree(function(domaintree){\n    var find = domaintree.find(function(node){\n        return node.id == workObj\n    });\n    if(find){\n            var  label = find.label;\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n        \"nodeIds\":[workObj],\"kpiCodes\":[6101]}];\n      target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n        var data = returnData.data;\n        var unfinished;\n        var finished;\n        for(var i = 0; i < data.length; i++) {\n          if(data[i].instance == \"state,0\") {\n            unfinished = data[i].value\n          }else if(data[i].instance == \"state,1\") {\n            finished = data[i].value\n          }\n        }\n        if(!unfinished) {\n          unfinished = 0;\n        }\n        if(!finished) {\n          finished = 0;\n        }\n        console.log(finished)\n        console.log(unfinished)\n\n        var option = {\n        //   title : {\n        //     text:label,\n        //     x:'5%',\n        //     y:'90%',\n        //     textStyle:{\n        //       color:'#babfc3',\n        //       fontSize : 16\n        //     }\n        //   },\n          tooltip : {\n            trigger: 'item',\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n          },\n          legend: {\n            x : '8%',\n            y:'2%',\n            textStyle:{\n              color:'#84898d'\n            },\n            orient : 'vertical',\n            data:[ '已完成状态项目维修数','待完成状态项目维修数']\n          },\n          calculable:true,\n          series : [\n            {\n              name: '',\n              type: 'pie',\n              radius : '8%',\n              tooltip : {\n                show:false\n              },\n              center: ['25%', '30%'],\n              hoverAnimation:false,\n              color:['#dde5e7'],\n\n              labelLine:{\n                normal:{\n                  show:false\n                },\n                emphasis:{\n                  show:true\n                }\n              },\n            },\n            {\n              name:'',\n              type:'pie',\n              radius : ['40%','60% '],\n              center : ['50%', '60%'],\n              calculable:true,\n              avoidLabelOverlap: true,\n\n              // roseType : 'area',\n              label: {\n                normal: {\n                  position:'inner',\n                  show: true,\n                  formatter: ' {c} ',\n                  textBorderWidth:0,\n                },\n\n              },\n              data:[\n                {value:finished, name:'已完成状态项目维修数', itemStyle:{\n                  normal:{\n                    color: {\n                      type: 'linear',\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                       colorStops: [{\n                          offset: 0, color: '#CACACC' // 0% 处的颜色\n                        }, {\n                          offset: 1, color: '#CACACC' // 100% 处的颜色\n                        }],\n                      globalCoord: false // 缺省为 false\n                    },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                  }\n                }},\n                {value:unfinished, name:'待完成状态项目维修数', itemStyle:{\n                  normal:{\n                    color: {\n                      type: 'linear',\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [{\n                        offset: 0, color: '#0b7cae' // 0% 处的颜色\n                      }, {\n                        offset: 1, color: '#33ddee' // 100% 处的颜色\n                      }],\n                      globalCoord: false // 缺省为 false\n                    },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                  }\n                }}\n\n              ]\n            }\n          ]\n        };\n        event.target.render(option)\n      })\n        }\n    })\n\n     \n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "width": "100%",
                                              "height": "320px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {}
                                  }
                                ],
                                "col": 3
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": "{}"
                    },
                    "parameters": {},
                    "url": "images/map/map1.png"
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "1",
      "$$hashKey": "object:1852"
    },
    {
      "label": "厂区",
      "path": "navigate",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "0px",
              "margin": "0px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)",
              "overflow-y": "auto",
              "overflow-x": "hidden"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "10px",
                      "margin": "5px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "数结构导航",
                                    "type": "navitree",
                                    "source": "NAVITREE",
                                    "advance": {
                                      "expression": ""
                                    }
                                  }
                                ],
                                "col": 8
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 4
                              }
                            ]
                          },
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "组态视图",
                                    "type": "topo",
                                    "source": "TOPO",
                                    "advance": {
                                      "variable": "",
                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\") || target.getValue(\"device/id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren()\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n              }\n              var createMarker = function(index, node){\n                var position;\n                var cell = cells.find(function(cell){\n                    var text = cell.attr(\"text/text\");\n                    //console.log(text, cell);\n                    return node.label.indexOf(text) != -1;\n                }) || cells[index] || {};\n                if(cell){\n                  position = cell.position();\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                };\n                target.createMarker(node.label, function(ins){\n                    // console.log(\"获取所有状态\")\n                    // console.log(node.status);\n                  //设置状态\n                  node.$on(\"statusChanged\", function(nd){\n                     ins.setAlarmStatus(node.status); \n                  });\n                  ins.setAlarmStatus(node.status);\n                  ins.setPos(position);\n                    ins.on(\"click\", function(event){\n                        node.click();\n                        /**\n                      if(typeof main == \"number\"){\n                        target.setParameter(\"id\", node.id);\n                        target.trigger(\"pathChange\", \"factory\");\n                        target.trigger(\"treeSelect\", node.id);\n                      } else {\n                        target.navigateTo(\"index\", {\n                          main : [0, 'factory'],\n                          id : node.id,\n                          label: node.label\n                        }, \"self\");\n                      }*/\n                    })\n                  \n                });\n              };\n              for(var i in children){\n                createMarker(i, children[i])\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "font-size": "12px",
                                      "background-repeat": "no-repeat",
                                      "margin-bottom": "20px"
                                    },
                                    "viewId": 469973748826065,
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 8
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "0 5px 5px 5px",
                                      "padding": "10px",
                                      "height": "260px"
                                    },
                                    "advance": {
                                      "expression": "{}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "padding": "0",
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                                            },
                                            "parameters": {}
                                          },
                                          {
                                            "label": "重复单元",
                                            "type": "repeater",
                                            "source": "REPEATER",
                                            "parameters": {
                                              "col": 4
                                            },
                                            "advance": {
                                              "getListTable": "allprojects",
                                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      \n      \n      \n      var id = target.getParameter(\"id\") || target.getValue(\"device/id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n        var domains = find.getChildren();\n        var mountain = domains.map(function(elem){\n          return elem.id;\n        });\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6100]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiNames = ['正常','注意','警告','监测台数'];\n            var kpiIds = ['severity,4', 'severity,3', 'severity,2','description']\n            var data = returnData.data;\n            console.log(data)\n            var all = [];\n            var normal = [];\n            var notice = [];\n            var warning = [];\n            var risk = [];\n            var data = returnData.data;\n        //对数据的处理   \n        for(var j = 0; j < domains.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n                \n            if(data[i].nodeId == domains[j].id) {\n                if(data[i].instance == \"severity,0\") {\n                    all.push(data[i].value)\n                }else if (data[i].instance == \"severity,-1\") {\n                    normal.push(data[i].value)\n                }else if(data[i].instance == \"severity,2\") {\n                    notice.push(data[i].value)\n                }else if(data[i].instance == \"severity,3\") {\n                    warning.push(data[i].value)\n                }else if(data[i].instance == \"severity,4\") {\n                    risk.push(data[i].value)\n                }\n\n              }\n            }\n\n            var jlength = (j + 1)\n            if(all.length != jlength) {\n                var add = jlength - all.length;\n                for(var z = 0; z < add; z++) {\n                    all.push('0')\n                }\n            }\n            if(notice.length != jlength) {\n                var add = jlength - notice.length;\n                for(var z = 0; z < add; z++) {\n                    notice.push('0')\n                }\n            }\n            if(normal.length != jlength) {\n                var add = jlength - normal.length;\n                for(var x = 0; x < add; x++) {\n                    normal.push('0')\n               }\n            }\n            if(warning.length != jlength) {\n                var add = jlength - warning.length;\n                for(var y = 0; y < add; y++) {\n                    warning.push('0')\n                }\n                        \n            }\n            if(risk.length != jlength) {\n                var add = jlength - risk.length;\n                    for(var y = 0; y < add; y++) {\n                        risk.push('0')\n                    }\n                        \n                }\n\n        }\n        \n        \n        \n        \n        \n        var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = domain.label;\n            rs.description = domain.description;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                r.value =  normal[num]\n            }else if(index == 1) {\n                r.value = notice[num]\n            }else if(index == 2) {\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }\n               return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          for(var j = 0; j < list.length; j++) {\n              if(list[j].description) {\n                  var listNum = list[j];\n                  list.splice(j, 1)\n                  list.unshift(listNum)\n              }\n          }\n          target.render(list);\n          \n          \n        });\n        \n        }\n        \n      });\n    }\n  }\n}"
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 3,
                                                "children": [
                                                  {
                                                    "label": "控件组",
                                                    "type": "ctrlgroup",
                                                    "source": "CTRLGROUP",
                                                    "advance": {
                                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var label = target.$repeatData.province;\n      var description = target.$repeatData.description || 0;\n      var ctrlGroups = [[{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              wrap.css(\"height\", \"70px\");\n              wrap.css(\"border\", \"1px solid rgba(250,250,250,.3)\");\n              wrap.css(\"background-color\", \"rgba(0,100,250,.1)\");\n              var title = $(\"<div></div>\");\n              title.text(label);\n              title.css(\"font-size\", \"12px\");\n              title.css(\"color\", \"#fff\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"top\", \"12px\");\n              title.css(\"left\", \"15px\");\n              title.css(\"font-weight\", \"bold\");\n              var sub = $(\"<div></div>\");\n              sub.text(\"重要台数\");\n              sub.css(\"position\", \"absolute\");\n              sub.css(\"top\", \"30px\");\n              sub.css(\"left\", \"15px\");\n              sub.css(\"color\", \"#aaa\");\n              sub.css(\"font-size\", \"10px\");\n              var number = $(\"<div></div>\");\n              number.text(description);\n              number.css(\"position\", \"absolute\");\n              number.css(\"top\", \"45px\");\n              number.css(\"left\", \"15px\");\n              number.css(\"font-size\", \"14px\");\n              number.css(\"font-weight\", \"bold\");\n              wrap.append(title);\n              wrap.append(sub);\n              wrap.append(number);\n              return wrap;\n          }\n        }]];\n      target.render(ctrlGroups);\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "help": "../pdf/ctrlgroup.pdf",
                                                    "parameters": {}
                                                  },
                                                  {
                                                    "type": "row",
                                                    "source": "ROW",
                                                    "parameters": {
                                                      "alignment": "bootstrap"
                                                    },
                                                    "style": {},
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "children": [
                                                          {
                                                            "label": "控件组",
                                                            "type": "ctrlgroup",
                                                            "source": "CTRLGROUP",
                                                            "advance": {
                                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var colors = [target.getAlertColor(1), target.getAlertColor(2), target.getAlertColor(3)];\n      var global = event.global;\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px"
                                                            },
                                                            "help": "../pdf/ctrlgroup.pdf",
                                                            "parameters": {}
                                                          }
                                                        ],
                                                        "col": 6
                                                      },
                                                      {
                                                        "type": "column",
                                                        "children": [
                                                          {
                                                            "label": "SVG视图",
                                                            "type": "svgchart",
                                                            "source": "SVGCHART",
                                                            "advance": {
                                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"5%\",\n              left : \"10%\",\n              height : \"86%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "0px",
                                                              "font-size": "12px",
                                                              "height": "135px"
                                                            },
                                                            "parameters": {}
                                                          }
                                                        ],
                                                        "col": 6
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "style": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px",
                                      "height": "260px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "style": {
                                              "margin": "auto",
                                              "padding": "5px",
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                            },
                                            "data": {
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "modelDisable": true
                                            },
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n  bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n      //console.log('222' + workObj)\n\n      var filter = {\"layer\":3,\"modelId\":300,\"domains\":workObj};\n\n      target.getDomainsByFilter(filter,function(returnData){\n        var baseName = [];\n        var mountain = [];\n        for(var i = 0; i < returnData.length;i++) {\n          baseName.push(returnData[i].name)\n          mountain.push(returnData[i].id)\n        }\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n          console.info( returnData.data)\n          var data = returnData.data;\n          var synthesize = [];\n          var capacity = [];\n          var big = [];\n          for(var j = 0; j < mountain.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n              //console.log('2222')\n              if(data[i].nodeId == mountain[j]) {\n                console.log(\"基地\")\n                if(data[i].instance == '1,all,values') {\n                  synthesize.push(data[i].value.toFixed(0))\n                }else if (data[i].instance == '2,all,values') {\n                  capacity.push(data[i].value.toFixed(0))\n                }else if(data[i].instance == '3,all,values') {\n                  big.push(data[i].value.toFixed(0))\n                }\n              }\n            }\n\n            var jlength = (j + 1)\n            if(synthesize.length != jlength) {\n              var add = jlength - synthesize.length;\n              for(var z = 0; z < add; z++) {\n                synthesize.push('0')\n              }\n\n            }\n            if(capacity.length != jlength) {\n              var add = jlength - capacity.length;\n              for(var x = 0; x < add; x++) {\n                capacity.push('0')\n              }\n            }\n            if(big.length != jlength) {\n              var add = jlength - big.length;\n              for(var y = 0; y < add; y++) {\n                big.push('0')\n              }\n\n            }\n\n\n          }\n\n\n\n          var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n          var inx = 0;\n          var ctrlGroups = [\n            column.map(function(elem){\n              var a = {\n                type : \"label\",\n                value : elem,\n                composory : \"none\",\n                class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n                style : {\n                  \"text-align\" : \"center\"\n                }\n              }\n              inx++;\n              return a;\n            })\n          ];\n\n          //var row = ['宝山','东山','天山','湛江'];\n          var row = baseName;\n          for(var i in row){\n            var arr = [{\n              type : \"label\",\n              value : row[i],\n              class : \"col-md-2\",\n              style : {\n                \"text-align\" : \"center\",\n                \"color\":\"white\"\n              }\n            }];\n            var index = i;\n            for(var i in column.slice(1,4)){\n              if(i == '0') {\n                Array.prototype.push.apply(arr, [{\n                    shownumber : \"before\",\n                  type : \"progressbar\",\n                  //value : rnd,\n                  value : synthesize[index],\n                  class : i == 2 ? \"col-md-4\" : \"col-md-3\",\n                  \n                }])\n              }else if(i == 1) {\n                Array.prototype.push.apply(arr, [{\n                    shownumber : \"before\",\n                  type : \"progressbar\",\n                  value : capacity[index],\n                  class : i == 2 ? \"col-md-4\" : \"col-md-3\",\n                   \n                }])\n              }else if (i == 2) {\n                Array.prototype.push.apply(arr, [{\n                  shownumber : \"before\",\n                  type : \"progressbar\",\n                  value : big[index],\n                  class : i == 2 ? \"col-md-4\" : \"col-md-4\",\n                  \n                }])\n              }\n\n            }\n           \n            ctrlGroups.push(arr);\n          };\n          console.log(ctrlGroups)\n          for(var i = 1; i < ctrlGroups.length; i++ ) {\n              if(!(!ctrlGroups[i][1].value || !ctrlGroups[i][2].value || !ctrlGroups[i][3].value) ) {\n                    var ctrlNum;\n                  ctrlNum = ctrlGroups[i];\n                  ctrlGroups.splice(i,1);\n                  ctrlGroups.splice(1,0,ctrlNum);\n              }\n          }\n          target.render(ctrlGroups);\n        })\n      })\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px",
                                      "height": "268px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "style": {
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "padding": "5px",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩统计（当月内）\")\n        }\n    }\n}"
                                            },
                                            "data": {
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "modelDisable": true
                                            },
                                            "url": "images/map/map1.png",
                                            "parameters": {}
                                          },
                                          {
                                            "label": "高级视图",
                                            "type": "advanceEchart",
                                            "source": "ADVANCEECHART",
                                            "parameters": {
                                              "theme": "default"
                                            },
                                            "advance": {
                                              "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n       //console.log('222' + workObj)\n       \n        var filter = {\"layer\":3,\"modelId\":300,\"domains\":workObj};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            //for(var i = 0; i < returnData.length;i++) {\n            for(var i = returnData.length-1; i >= 0;i--) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info(returnData)\n                var data = returnData.data;\n                var unfinished = [];\n                var finished = [];\n                var all = [];\n                console.info(data)\n                for(var j = 0; j < factory.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == factory[j]) {\n                            if(data[i].instance == 'state,all') {\n                                all.push(data[i])\n                            }else if (data[i].instance == 'state,0') {\n                                unfinished.push(data[i])\n                            }else if(data[i].instance == 'state,1') {\n                                finished.push(data[i])\n                            }\n                        }\n                    }\n                    var jlength = (j + 1)\n                    if(all.length != jlength) {\n                        var add = jlength - all.length;\n                        for(var z = 0; z < add; z++) {\n                            all.push('0')\n                        }\n                        \n                    }\n                    if(finished.length != jlength) {\n                        var add = jlength - finished.length;\n                        for(var x = 0; x < add; x++) {\n                            finished.push('0')\n                        }\n                    }\n                    if(unfinished.length != jlength) {\n                        var add = jlength - unfinished.length;\n                        for(var y = 0; y < add; y++) {\n                            unfinished.push('0')\n                        }\n                        \n                    }\n                    \n                 }\n                \n               \n                \n                \nvar option = {\n    title : {\n        text: ''\n    },\n    tooltip : {\n        trigger: 'axis'\n    },\n    legend: {\n        data:['待完成状态维修项目数','已完成状态维修项目数','状态维修项目数'],\n        y:0,\n        x : \"0%\"\n        \n    },\n    grid : {\n        left : \"10%\",\n    },\n    toolbox: {\n        show : false,\n        feature : {\n            magicType : {show: true, type: ['line', 'bar']}\n        }\n    },\n    calculable : true,\n    xAxis : [\n        {\n            type : 'category',\n            data : factoryName\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'待完成状态维修项目数',\n            type:'bar',\n            data:unfinished,\n            itemStyle:{\n                normal:{\n                 color:'#FF9811' \n                }\n            }\n        },\n        {\n            name:'已完成状态维修项目数',\n            type:'bar',\n            data:finished,\n            itemStyle:{\n                normal:{\n                 color:'#157FD1' \n                }\n            }\n        },\n        {\n            name:'状态维修项目数',\n            type:'bar',\n            data: all,\n            itemStyle:{\n                normal:{\n                 color:'#9266E0' \n                }\n            }\n        }\n    ]\n};\n                    \n                    \n      event.target.render(option);\n                \n                \n                \n                \n            })\n        })\n       \n       \n       \n       \n       \n       \n       \n       \n       \n\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "height": "248px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {}
                                  }
                                ],
                                "col": 4
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "2",
      "$$hashKey": "object:1862"
    },
    {
      "label": "小设备信息",
      "path": "device",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "8px",
              "margin": "5px"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)",
                      "height": "calc(100vh - 170px)",
                      "overflow-y": "auto",
                      "overflow-x": "hidden"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "5px",
                              "margin": "5px"
                            },
                            "advance": {
                              "expression": {}
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "type": "row",
                                    "source": "ROW",
                                    "parameters": {
                                      "alignment": "bootstrap"
                                    },
                                    "style": {},
                                    "children": [
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "组态视图",
                                            "type": "topo",
                                            "source": "TOPO",
                                            "advance": {
                                              "variable": "",
                                              "expression": "expression = {\n  \"on\": {\n    \"init\": function(event) {\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.$on(\"$renderGraphComplete\", function(cells) {\n        console.log(\"cells\", cells);\n        for(var i in cells) {\n          cells[i].attr(\"rect/visibility\", \"hidden\");\n          cells[i].attr(\"circle/visibility\", \"hidden\");\n          cells[i].attr(\"text/visibility\", \"hidden\");\n          cells[i].attr(\".connection/stroke\", \"#1f8fd8\");\n          cells[i].attr(\".connection/stroke-width\", 2);\n          cells[i].attr(\".marker-target/visibility\", \"hidden\");\n        }\n      });\n      target.getDomainAreaLineTree_alertStatus(function(domaintree) {\n        var find = domaintree.find(function(node) {\n          return node.id == id;\n        });\n        var res = find;\n        if(find) {\n          var resourceId = find.id;\n          var position = {\n            x: 290,\n            y: 0\n          };\n          var is = target.createCurrentStatus(find.label, position, find.status);\n          find.$on(\"statusChanged\", function(nd) {\n            is.setAlarmStatus(find.status);\n          });\n          var viewId = find.$attr(\"view/viewId\");\n          if(!viewId) {\n            viewId = find.$attr(\"_view/viewId\");\n          }\n          if(viewId) {\n            target.getViewById(viewId, function(view) {\n              var content = view.content;\n              var json = JSON.parse(content);\n              target.render(json);\n              target.$on(\"$loadCiKpiComplete\", function(cells) {\n                target.getKpiTypeByFilter({\n                  hasSingnal: true\n                }, function(kpisWithSingnal) {\n                  target.getResourceById(resourceId, function(resource) {\n                    var modelId = resource.modelId;\n                    target.getKpisByModelId(modelId, function(kpis) {\n                      var pos = JSON.parse(resource.values.MeasurePointLocate);\n                      var posInfo = pos.reduce(function(a, b) {\n                        for(var i in b) {\n                          Array.prototype.push.apply(a, b[i]);\n                        }\n                        return a;\n                      }, []);\n                      var allaccessConfigs = resource.$attr(\"physicalConfig/accessConfigs\");\n                      var ci = [resourceId];\n                      var kpiBinds = cells\n                        .filter(function(cell) {\n                          return cell.kpiObj;\n                        }).map(function(cell) {\n                          return cell.kpiObj;\n                        });\n                      var accessConfigs = allaccessConfigs.filter(function(aconf) {\n                        return kpisWithSingnal.some(function(kpi) {\n                          return kpi.id == aconf.dataItemId;\n                        })\n                        /** || kpiBinds.some(function(kpi){\n                                                  return kpi.id == aconf.kpiId;\n                                                })*/\n                        ;\n                      });\n                      var dataItems = allaccessConfigs.reduce(function(a, b) {\n                        if(a.indexOf(b.dataItemId) == -1) {\n                          a.push(b.dataItemId)\n                        }\n                        return a;\n                      }, []);\n                      dataItems.push(999997);\n                      var usedInstances = [];\n                      var loopCells = function(cell) {\n                        var ins = cell.attr(\"text/text\");\n                        var find = posInfo.find(function(str) {\n                          return str.name == ins;\n                        });\n                        if(find) {\n                          usedInstances.push(find.name);\n                        }\n                        var position = {};\n                        if(cell.position) {\n                          position = cell.position()\n                        }\n                        // var onClick = function (item) {\n                        //   target.navigateToFeature(function () {\n                        //     var ins = cell.attr(\"text/text\");\n                        //     var psi = posInfo.find(function (str) {\n                        //       return str.name == ins;\n                        //     });\n                        //     if (psi) {\n                        //       target.createSystemPopupByLocalPath(\"analysis\", {\n                        //         title: psi.label + \"[\" + item.label + \"]\",\n                        //         width: \"80%\"\n                        //       }, {\n                        //         resource: res,\n                        //         sensor: item\n                        //       })\n                        //     } else {\n                        //       target.growl(\"此测点暂无曲线数据。\");\n                        //     }\n                        //   })\n                        // };\n                        var onClick = function(item) {\n                          //   console.log(psi)\n                          //   console.log(item)\n                          //   debugger\n                          var userName = target.getCurrentUser().userName;\n                          var mainIndex;\n                          if(userName.indexOf(\"报警\")  == -1) {\n                              mainIndex = 2\n                          }else {\n                              mainIndex = 3\n                          }\n                          if(psi) {\n                            target.getDomainAreaLineTree(function(domainTree) {\n                              var dt = domainTree.find(function(node) {\n                                return node.id == resourceId;\n                              });\n                              target.setValue(\"global/resource\", dt);\n                              target.setValue(\"global/instance\", item.instance);\n                              //target.navigateToFeature();\n                              target.navigateTo(\"index\", {\n                                main: mainIndex,\n                                sub: 0\n                              }, \"self\");\n\n                            });\n                          } else {\n                            target.getDomainAreaLineTree(function(domainTree) {\n                              var dt = domainTree.find(function(node) {\n                                return node.id == resourceId;\n                              });\n                              target.setValue(\"global/resource\", dt);\n                              target.setValue(\"global/instance\", item.instance);\n                              //target.navigateToFeature();\n                              target.navigateTo(\"index\", {\n                                main: mainIndex,\n                                sub: 7\n                              }, \"self\");\n\n                            });\n\n                          }\n\n                        };\n\n                        var mapKpi = function(kpi) {\n                          return {\n                            id: kpi.dataItemId,\n                            instance: kpi.instance,\n                            label: kpi.kpiName,\n                            value: \"-\",\n                            status: 0\n                          }\n                        };\n                        var mapKpi1 = function(kpi) {\n                          return {\n                            id: kpi.id,\n                            label: undefined,\n                            value: \"-\",\n                            status: 0\n                          }\n                        };\n                        if(cell.kpiObj) {\n                          var dItem = allaccessConfigs.find(function(elem) {\n                            // console.log(\"dItem==\", elem.dataItemId, cell.kpiObj.id);\n\n                            return elem.dataItemId == cell.kpiObj.id;\n                          });\n                          cell.$attrDisp = target.createAttrDisp(dItem.kpiName, [{\n                            id: dItem.dataItemId,\n                            instance: dItem.instance,\n                            label: undefined,\n                            value: \"-\",\n                            status: 0\n                          }], target.getPersentageSite(position), onClick);\n                          cell.$instance = dItem.instance;\n                        } else {\n                          var ins = cell.attr(\"text/text\");\n                          var filterKpis = [];\n                          var psi = posInfo.find(function(str) {\n                            return str.name == ins;\n                          }) || {};\n                          filterKpis = accessConfigs.filter(function(aconf) {\n                            return aconf.instance == ins\n                          });\n                          filterKpis.sort(function(a, b) {\n                            console.log(a.kpiName > b.kpiName);\n                            if(a.kpiName > b.kpiName) {\n                              return -1;\n                            } else {\n                              return 1;\n                            }\n                          });\n                          if(filterKpis.length == 0) {\n                            filterKpis = allaccessConfigs.filter(function(aconf) {\n                              return aconf.instance == ins\n                            });\n                            if(filterKpis.length > 4) {\n                              filterKpis = filterKpis.slice(0, 4);\n                            }\n                          }\n                          cell.$dataItemId = filterKpis.map(function(kpi) {\n                            return kpi.dataItemId;\n                          });\n                          cell.$instance = ins;\n                          cell.$attrDisp = target.createAttrDisp(psi.label, filterKpis.map(mapKpi), target.getPersentageSite(position), onClick)\n                        }\n                      };\n                      var rectCell = cells.filter(function(cell) {\n                        return cell.attributes.type == \"basic.Rect\";\n                      });\n                      var linkCell = cells.filter(function(cell) {\n                        return cell.attributes.type == \"link\";\n                      });\n                      for(var i in rectCell) {\n\n                        loopCells(rectCell[i]);\n                      }\n                      var callbackDataItems = function(valuelist) {\n\n                        var loopValue = function(v) {\n                          var unit = kpis.find(function(elem) {\n                            return elem.id == v.kpiCode;\n                          }) || {\n                            unit: \"NA\"\n                          };\n\n                          if(v.kpiCode == 999997) {\n                            var alarmArr = v.instance.split(\"_\");\n                            var alarmDataItem = alarmArr[0];\n                            var alarmIns = alarmArr[1];\n                            var find = rectCell.find(function(cell) {\n                              return cell.$instance == alarmIns;\n                            });\n                            if(find) {\n                              var attrDisp = find.$attrDisp.getData();\n                              for(var i in attrDisp) {\n                                if(attrDisp[i].id == alarmDataItem && attrDisp[i].instance == alarmIns) {\n                                  attrDisp[i].updateStatus(v.value);\n                                }\n                              }\n                            }\n                          } else if(!v.instance) {\n                            var find = rectCell.find(function(cell) {\n                              return cell.$attr(\"kpiObj/id\") == v.kpiCode;\n                            });\n                            if(find) {\n                              var attrDisp = find.$attrDisp.getData();\n                              attrDisp[0].updateValue(v.value);\n                              attrDisp[0].updateTime(v.arisingTime);\n                            }\n                          } else {\n                            var filter = rectCell.filter(function(cell) {\n                              return cell.$instance == v.instance;\n                            });\n                            for(var i in filter) {\n                              var find = filter[i];\n                              var attrDisp = find.$attrDisp.getData();\n                              for(var i in attrDisp) {\n                                //console.log(attrDisp[i].id, v.kpiCode, attrDisp[i].instance, v.instance);\n                                if(attrDisp[i].id == v.kpiCode && attrDisp[i].instance == v.instance) {\n                                  attrDisp[i].updateValue(v.value, unit.unit);\n                                  attrDisp[i].updateTime(v.arisingTime);\n                                }\n                              }\n                            }\n                          }\n                        };\n                        for(var i in valuelist) {\n                          loopValue(valuelist[i])\n                        }\n                      };\n                      if(dataItems.length > 0) {\n                        target.getKpiValueCi(ci, dataItems, callbackDataItems, {\n                          \"isRealTimeData\": true,\n                          \"includeInstance\": true,\n                          \"queryInstances\": usedInstances.toString()\n                        });\n                      }\n                      if(kpiBinds.length > 0) {\n                        target.getKpiValueCi(ci, kpiBinds.map(function(elem) {\n                          return elem.id;\n                        }), callbackDataItems, {\n                          \"isRealTimeData\": true,\n                          \"includeInstance\": true\n                        });\n                      }\n\n                      target.webSocket(ci, dataItems, function(data) {\n                        callbackDataItems([data]);\n                      });\n                      target.webSocket(ci, kpiBinds.map(function(elem) {\n                        return elem.id;\n                      }), function(data) {\n                        callbackDataItems([data]);\n                      })\n                    })\n                  });\n                })\n              });\n            })\n          }\n        }\n      })\n    }\n  }\n};"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px",
                                              "background-repeat": "no-repeat"
                                            },
                                            "viewId": 546900339506067,
                                            "url": "images/map/map1.png",
                                            "parameters": {}
                                          }
                                        ],
                                        "col": 8
                                      },
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "控制板1",
                                            "type": "block",
                                            "source": "BLOCK",
                                            "style": {
                                              "padding": "5px",
                                              "margin": "5px"
                                            },
                                            "advance": {
                                              "expression": {}
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "label": "文字",
                                                    "type": "text",
                                                    "source": "TEXT",
                                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                    "data": {
                                                      "applied": false,
                                                      "multipleCi": false,
                                                      "multipleKpi": false,
                                                      "resource": [],
                                                      "modelType": 300,
                                                      "resfilltype": "parameter",
                                                      "series": {
                                                        "manual": "新建文字",
                                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                                      },
                                                      "modelDisable": true
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "padding": "0",
                                                      "font-size": "16px",
                                                      "font-weight": "normal",
                                                      "text-align": "left",
                                                      "color": "rgb(255, 255, 255)",
                                                      "border-bottom": "1px solid #666",
                                                      "line-height": "30px"
                                                    },
                                                    "advance": {
                                                      "getfunction": "kpiDataService.getValueList",
                                                      "category": "ci",
                                                      "condition": [
                                                        "kpi",
                                                        "{object:kpiQueryModel}"
                                                      ],
                                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"工艺参数\")\n        }\n    }\n}"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  },
                                                  {
                                                    "label": "控制板1",
                                                    "type": "block",
                                                    "source": "BLOCK",
                                                    "style": {
                                                      "padding": "0px",
                                                      "margin": "0px",
                                                      "border": "0",
                                                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                                                      "background-color": "rgba(250,250,250,0)",
                                                      "height": "500px",
                                                      "overflow-y": "auto"
                                                    },
                                                    "advance": {
                                                      "expression": {}
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "col": 12,
                                                        "children": [
                                                          {
                                                            "label": "控件组",
                                                            "type": "ctrlgroup",
                                                            "source": "CTRLGROUP",
                                                            "advance": {
                                                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var id = target.getParameter(\"id\");\n      var units = {};\n      //debugger;\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        var modelId = [find.modelId]\n        var accessConfigValues = find.physicalConfig.accessConfigs;\n\n        \n        target.getAttrsByModelId(modelId, function (attrs) {\n          var MeasurePointLocate = attrs.find(function (elem) {\n              return elem.name == \"MeasurePointLocate\";\n            }) || {};\n          var sourceValue = eval(MeasurePointLocate.sourceValue)|| \"\";\n          var sourceValueArr = [];\n          for (var i in sourceValue) {\n            for (var j in sourceValue[i]) {\n              for(var k in sourceValue[i][j]){\n                var ins = sourceValue[i][j][k];\n                ins.configValues = accessConfigValues.find(function(accessConfigValue){\n                  return ins.name == accessConfigValue.instance;\n                })\n                sourceValueArr.push(ins);\n                //multiSelectValues.push(ins);\n              }\n            }\n          };\n          var whole = sourceValueArr.find(function(elem){\n            var regExp = /\\s*整体\\s*/g;\n            return regExp.test(elem.label);\n          });\n          var options = accessConfigValues.filter(function(elem){\n            return elem.instance == whole.name;\n          });\n          var ci = [find.id];\n          var kpi = options.map(function(elem){\n            return elem.dataItemId;\n          });\n          \n          //获取模板\n           target.getKpisByModelId(modelId,function(subData) {\n            \n                      \n          \n          var getValueList = function(valueList){\n            options = options.map(function(option){\n              var find = valueList.find(function(elem){\n                return elem.kpiCode == option.dataItemId;\n              });\n\n              if(find){\n                option.value = find.value;\n                option.time = target.dateHandler(find.arisingTime).getDateString(\"yy/MM/dd hh:mm:ss\")\n              } else {\n                option.value = option.value || \"-\";\n                option.time = option.time || \"-\";\n              }\n              return option;\n            });\n            //拼接单位\n            var kpiCodes = [];\n            for(var i =0; i < options.length; i++) {\n              if(!units[options[i].dataItemId]){\n                kpiCodes.push(options[i].dataItemId)\n              };\n            };\n            if(kpiCodes.length > 0) {\n              target.postService(\"resourceUIService\", \"getKpisByKpiIds\", [kpiCodes], callback);\n            } else {\n              callback({data : []});\n            }\n            function callback(returnData){\n              for(var i = 0; i < returnData.data.length;i++) {\n                units[returnData.data[i].id] = returnData.data[i];\n              }\n              for(var z = 0; z < options.length; z++) {\n                var u = units[options[z].dataItemId];\n                if(u){\n                  options[z].unit = u;\n                };\n              };\n              var render = function () {\n                var ctrlGroups = [[{\n                  type : \"label\",\n                  value : \"名称\",\n                  composory : \"none\",\n                  style : {\n                    //\"white-space\" : \"normal\"\n                    \"white-space\" : \"pre-wrap\",\n                    \"borderBottom\":\"1px solid #666666\",\n                    \"height\":\"41px\"\n                  },\n                  class : \"col-xs-4\"\n                },{\n                  type : \"label\",\n                  composory : \"none\",\n                  //value : option.value != \"-\" ? target.toFix(option.value, 2) : \"-\",\n                  value: \"数值\",\n                  class : \"col-xs-4\",\n                  style : {\n                    \"white-space\" : \"pre-wrap\",\n                    \"borderBottom\":\"1px solid #666666\",\n                    \"height\":\"41px\"\n                  }\n                },{\n                  type : \"label\",\n                  value : \"更新时间\",\n                  composory : \"none\",\n                  class : \"col-xs-4\",\n                  style : {\n                    \"white-space\" : \"pre-wrap\",\n                    \"paddingLeft\" : \"12px\",\n                    \"borderBottom\":\"1px solid #666666\",\n                    \"height\":\"41px\"\n                  }\n                }]];\n                var addData = function(option){\n                    // console.log(typeof(option.value))\n                    // debugger\n                if(typeof(option.value) == \"number\") {\n                    if(option.value%1 === 0) {\n                        var val = option.value != \"-\" ? option.value : \"-\";\n                    }else{\n                        var val = option.value != \"-\" ? target.toFix(option.value, 3) : \"-\";\n                    }\n                    \n                }else{\n                    var val = option.value\n                }\n                  \n                  if(option.unit){\n                    val += option.unit.unit || \"\";\n                  };\n                  return [{\n                    type : \"label\",\n                    value : option.kpiName,\n                    composory : \"none\",\n                    style : {\n                      //\"white-space\" : \"normal\"\n                      \"white-space\" : \"pre-wrap\",\n                      \"borderBottom\":\"1px solid #666666\",\n                      \"height\":\"41px\"\n                    },\n                    class : \"col-xs-4\"\n                  },{\n                    type : \"label\",\n                    composory : \"none\",\n                    value : val,\n                    //value:option.value,\n                    class : \"col-xs-4\",\n                    style : {\n                      \"white-space\" : \"pre-wrap\",\n                      \"borderBottom\":\"1px solid #666666\",\n                      \"height\":\"41px\"\n\n                    }\n                  },{\n                    type : \"label\",\n                    value : option.time,\n                    composory : \"none\",\n                    class : \"col-xs-4\",\n                    style : {\n                      \"white-space\" : \"pre-wrap\",\n                      \"paddingLeft\" : \"12px\",\n                      \"borderBottom\":\"1px solid #666666\",\n                      \"height\":\"41px\"\n                    }\n                  }]\n                }\n                for(var i in options){\n                    \n                  \n                        for(var j = 0; j < subData.length;j++) {\n                            \n                           \n                          if(options[i].dataItemId  == subData[j].id) {\n                           \n                              if(subData[j].range != null) {\n                                if(options[i].value == true ||  options[i].value == false) {\n                                    var obj = JSON.parse(subData[j].range);\n                                    var objVal = options[i].value\n                                    console.log(obj)\n                                    for(let key in obj){\n                                        options[i].value = obj[objVal]\n                                       \n                                    }     \n                                }else {\n                                    options[i].value = \"-\"\n                                }\n                                console.log(options[i])\n                                debugger\n                               \n                              }\n                          }\n\n                        }\n                       \n                    \n                        ctrlGroups.push(addData(options[i]));\n                        console.log(options[i])\n                        debugger\n       \n                    \n                  //ctrlGroups.push(addData(options[i]));\n                }\n                target.render(ctrlGroups);\n              };\n              render();\n            };\n          }\n          target.webSocket(ci, kpi, function(data){\n            getValueList([data])\n          })\n          target.getKpiValueCi(ci, kpi, getValueList, {\n            isRealTimeData : true,\n            includeInstance : true\n          })\n        })\n        \n        \n        \n             \n        })\n        \n      });\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px"
                                                            },
                                                            "help": "../pdf/ctrlgroup.pdf",
                                                            "parameters": {}
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "url": "images/map/map1.png"
                                                  }
                                                ]
                                              }
                                            ],
                                            "url": "images/map/map1.png"
                                          }
                                        ],
                                        "col": 4
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "padding": "0",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"报警通知\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "控制板1",
                                            "type": "block",
                                            "source": "BLOCK",
                                            "style": {
                                              "margin": "5px",
                                              "padding": "10px",
                                              "height": "285px",
                                              "overflow-y": "auto",
                                              "overflow-x": "hidden",
                                              "border": "0"
                                            },
                                            "advance": {
                                              "expression": {}
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "label": "高级列表",
                                                    "type": "dataTableAdvance",
                                                    "source": "DATATABLEADVANCE",
                                                    "parameters": {
                                                      "col": 1,
                                                      "pageSize": 5,
                                                      "listbottom": "none"
                                                    },
                                                    "advance": {
                                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var deviceId = target.getParameter('id')\n\n      var queryParams = {\n        \"domain\":\"\",\n        \"nodeType\":\"\",\n        \"pageSize\":1000,\n        \"severities\":\"1,2,3,4\",\n        \"states\":\"0,5,10,20\",\n        \"nodeIds\":deviceId\n      };\n      var queryParams4Page = {\n        \"start\": 0,\n        \"length\": \"\",\n        \"sort\": \"createTime\",\n        \"sortType\": \"desc\",\n        \"statCount\": true,\n        \"total\": 0\n      };\n      var params = [queryParams,queryParams4Page]\n\n      target.postService(\"alertQueryFlexService\",\"getAlertByPage\",params,function (returnData) {\n        var alertsDevice = [];\n        var alerts = returnData.data.data;\n        for(var i = 0; i < alerts.length; i++ ) {\n          if(alerts[i].state == 0 || alerts[i].state == 5 || alerts[i].state == 10) {\n                if(alerts[i].severity != -1) {\n                      alertsDevice.push(alerts[i]) \n                }\n          }\n        };\n        target.setValue(\"device/alerts\",alertsDevice.map(function(alert){\n          alert.label = alert.devName + \"(\" + alert.message + \")\";\n          alert.valueStr = target.getAlertWord(alert.severity);\n          alert.status = alert.severity;\n          return alert;\n        }));\n        target.render({\n          data : alertsDevice,\n          on : {\n            rowClick : function(event){\n              //target.navigateTo('production', {});\n            }\n          },\n          format : [\n            {\n              \"name\": \"报警来源\",\n              \"value\": \"appName\",\n              \"type\": \"text\",\n              //\"width\" : 300\n              \"format\":function (elem) {\n                if(elem == 1){\n                  return \"在线预警\";\n                }else if(elem == 2){\n                  return \"智能诊断\";\n                }else if(elem == 3){\n                  return \"大数据分析\";\n                } else {\n                  return \"离线诊断\";\n                }\n              }\n            }, {\n              \"name\": \"报警消息\",\n              \"value\": \"message\",\n              \"type\": \"text\",\n              \n            },{\n              \"name\": \"报警级别\",\n              \"type\":\"priority\",\n              \"value\" : \"severity\",\n              \"format\":function (elem) {\n                if(elem == 2){\n                  return \"注意\";\n                }else if(elem == 3){\n                  return \"异常\";\n                }else if(elem == 4){\n                  return \"警告\";\n                } else {\n                  return \"正常\";\n                }\n              }\n            },{\n              \"name\": \"报警时间\",\n              \"value\": \"firstArisingTime\",\n              \"type\": \"date\"\n            },{\n              \"name\":\"操作\",\n              \"type\" : \"buttonGroup\",\n              \"content\" : [{\n                type : \"button\",\n                label : \"过程跟踪\",\n                icon : \"glyphicon glyphicon-cog\",\n                btnclass : \"btn btn-primary\",\n                on : {\n                  click : function(elem){\n                    event.target.postService(\"ticketTaskService\", \"getDealTicketListByPage\", [{\"attrs\": {\"origId\": elem.row.alertId}},\n                      {\"start\": 0, \"length\": 10}], function (dt) {\n                      if (dt.data.data.length>0) {\n                        target.navigateToTracker(dt.data.data[0].ticketNo);\n                      }else{\n                        target.growl(\"告警未转工单\",\"warning\")\n                      }\n                    })\n                  }\n                }\n              }]\n            }\n          ]\n        });\n      })\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ]
                                              }
                                            ],
                                            "url": "images/map/map1.png",
                                            "parameters": {}
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "col": 8
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "padding": "0",
                                              "font-size": "14px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"离线诊断\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "控制板1",
                                            "type": "block",
                                            "source": "BLOCK",
                                            "style": {
                                              "margin": "5px",
                                              "padding": "10px",
                                              "height": "285px",
                                              "overflow-y": "auto",
                                              "border": "0"
                                            },
                                            "advance": {
                                              "expression": {}
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "label": "高级列表",
                                                    "type": "dataTableAdvance",
                                                    "source": "DATATABLEADVANCE",
                                                    "parameters": {
                                                      "col": 1,
                                                      "pageSize": 5,
                                                      "listbottom": "none"
                                                    },
                                                    "advance": {
                                                      "expression": "expression = {\n  \"theme\": \"dark\",\n  \"on\": {\n    \"init\": function (event) {\n      var target = event.target;\n      var id = target.getParameter('id')\n\n\n      target.getDomainAreaLineTree(function (domaintree) {\n        var find = domaintree.find(function (node) {\n          return node.id == id\n        });\n        if (find) {\n          var deviceCode = find.externalDevId;\n          //console.log(find.externalDevId)\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          target.postService(\"deviceResumeUIService\", \"getDeviceOfflineReportListByCondition\", {devId: deviceCode}, function (returnData) {\n            for (var i = 0; i < returnData.data.length; i++) {\n              returnData.data[i].conclusion = parseInt(returnData.data[i].conclusion)\n              returnData.data[i].rptDate  = useMomentFormat(returnData.data[i].rptDate, \"yyyy-MM-dd\");\n            }\n            console.log(returnData.data)\n            debugger\n            target.render({\n              pageSize:100,\n              data: returnData.data,\n              on: {\n                rowClick: function (event) {\n                  //target.navigateTo('production', {});\n                }\n              },\n              format: [\n                {\n                  \"name\": \"状态\",\n                  \"value\": \"conclusion\",\n                  \"type\": \"jquery\",\n                  \"render\": function (elem) {\n                    var wrap = $(\"<div></div>\");\n                    var circle = $(\"<div></div>\");\n                    var text = $(\"<div></div>\");\n                    var t = $(\"<div></div>\");\n                    circle.css(\"width\", \"15px\");\n                    circle.css(\"margin-right\", \"5px\");\n                    circle.css(\"height\", \"15px\");\n                    circle.css(\"border-radius\", \"50%\");\n                    circle.css(\"display\", \"inline-block\");\n                    circle.css(\"background-color\", target.getAlertColor(elem.conclusion));\n                    text.css(\"position\", \"relative\");\n                    text.css(\"display\", \"inline-block\");\n                    text.css(\"color\", target.getAlertColor(elem.conclusion));\n                    text.css(\"font-weight\", \"bold\");\n                    //t.text(target.getAlertWord(elem.conclusion));\n                    text.append(t);\n                    t.css(\"position\", \"absolute\");\n                    t.css(\"top\", \"-20px\");\n                    wrap.append(circle);\n                    wrap.append(text);\n                    text.css(\"line-height\", \"20px\");\n                    return wrap;\n                  }\n                },\n                //     {\n                //     \"name\": \"状态\",\n                //     \"value\": \"conclusion\",\n                //     \"type\": \"text\",\n                //     \"format\":function (elem) {\n                //         if(elem == '1') {\n                //             return '正常'\n                //         }else if(elem == '2') {\n                //             return '注意'\n                //         }else if(elem == '3') {\n                //             return '异常'\n                //         }else if(elem == '4') {\n                //             return '警告'\n                //         }\n                //     }\n                //   },\n                {\n                  \"name\": \"专业\",\n                  \"value\": \"specialty\",\n                  \"type\": \"text\",\n                  \"format\": function (elem) {\n                    if (elem == 'Z') {\n                      return '振动'\n                    } else if (elem == 'N') {\n                      return '扭矩'\n                    } else if (elem == 'D') {\n                      return '电机电流'\n                    } else if (elem == 'Q') {\n                      return '清洁度监测'\n                    } else if (elem == 'J') {\n                      return '绝缘油分析'\n                    } else if (elem == 'M') {\n                      return '磨损分析'\n                    } else if (elem == 'H') {\n                      return '红外热成像检测'\n                    } else if (elem == 'K') {\n                      return '开关温度'\n                    } else if (elem == 'W') {\n                      return '表面温度'\n                    } else if (elem == 'P') {\n                      return '液压'\n                    } else if (elem == 'Y') {\n                      return '油液'\n                    } else {\n                      return '工艺指标'\n                    }\n                  }\n                }, {\n                  \"name\": \"报告文件\",\n                  \"value\": \"reportFile\",\n                  //\"value\": \"rptNo\",\n                  \"type\": \"jquery\",\n                  \"render\": function (elem) {\n                    var wrap = $('<a target=\"_blank\" href=\"' + elem.reportFile.filePath + '\">' + elem.reportFile.fileName + '</a>');\n                    return wrap;\n\n                  }\n                }, {\n                  \"name\": \"时间\",\n                  \"value\": \"rptDate\",\n                  \"type\": \"text\"\n                }\n              ]\n            });\n\n\n          })\n\n\n        }\n      })\n\n\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ]
                                              }
                                            ],
                                            "url": "images/map/map1.png",
                                            "parameters": {}
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 4
                              }
                            ],
                            "url": "images/map/map1.png"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "3",
      "$$hashKey": "object:1918"
    },
    {
      "label": "厂区二层",
      "path": "factory",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "0px",
              "margin": "0px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)",
              "height": "calc(100vh - 50px)",
              "overflow-y": "auto",
              "overflow-x": "hidden"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "10px",
                      "margin": "5px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "数结构导航",
                                    "type": "navitree",
                                    "source": "NAVITREE",
                                    "advance": {
                                      "expression": ""
                                    },
                                    "style": {}
                                  }
                                ],
                                "col": 8
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控件组",
                                    "type": "ctrlgroup",
                                    "source": "CTRLGROUP",
                                    "advance": {
                                      "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "margin": "5px",
                                      "font-size": "14px",
                                      "font-weight": "bold"
                                    },
                                    "help": "../pdf/ctrlgroup.pdf",
                                    "url": "images/map/map1.png",
                                    "parameters": {}
                                  }
                                ],
                                "col": 4
                              }
                            ]
                          },
                          {
                            "type": "row",
                            "source": "ROW",
                            "parameters": {
                              "alignment": "bootstrap"
                            },
                            "style": {},
                            "children": [
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "组态视图",
                                    "type": "topo",
                                    "source": "TOPO",
                                    "advance": {
                                      "variable": "",
                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){ debugger;\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){ \n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n              };\n              var list = cells.filter(function(el){\n                  return el.attributes.type == \"basic.Circle\";\n              })\n              \n              var createMarker = function(index, node){    \n                var cell = cells.find(function(cell){\n                    var text = cell.attr(\"text/text\");\n                    return node.label==text\n                }) || cells[index] || {};\n                var position;\n                \n                if(cell){\n                  position = cell.attributes.position;\n                  console.log(\"position == \", position);\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                }\n                \n                \n                target.createMarker(node.label, function(ins){\n                  node.$on(\"statusChanged\", function(nd){\n                     ins.setAlarmStatus(node.status); \n                  });\n                  ins.setAlarmStatus(node.status);\n                  ins.setPos(position);\n                  ins.on(\"click\", function(event){\n                      node.click();\n                      /**\n                    if(typeof main == \"number\"){\n                      target.setParameter(\"id\", node.id);\n                      target.setParameter(\"label\", node.label);\n                      target.trigger(\"pathChange\", \"production\");\n                      target.trigger(\"treeSelect\", node.id);\n                    } else {\n                      target.navigateTo(\"index\", {\n                        main : [0, 'production'],\n                        id : node.id,\n                        label : node.label,\n                        description: node.description\n                      }, \"self\");\n                    }*/\n                  })\n                });\n              };\n              for(var i in children){\n                createMarker(i, children[i])\n              }\n            });\n          });\n        }\n\n      });\n    }\n  }\n}"
                                    },
                                    "style": {
                                      "font-size": "12px",
                                      "background-repeat": "no-repeat"
                                    },
                                    "viewId": 469973748826065,
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "height": "276px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "style": {
                                              "padding": "0",
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"检修实绩(当月内)\")\n        }\n    }\n}"
                                            },
                                            "data": {
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "modelDisable": true
                                            },
                                            "parameters": {}
                                          },
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "高级视图",
                                                    "type": "advanceEchart",
                                                    "source": "ADVANCEECHART",
                                                    "parameters": {
                                                      "theme": "default"
                                                    },
                                                    "advance": {
                                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n      var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n      target.getDomainsByFilter(filter,function(returnData){\n        var factoryName = [];\n        var factory = [];\n        for(var i = 0; i < returnData.length;i++) {\n          factoryName.push(returnData[i].label)\n          factory.push(returnData[i].id)\n        }\n        console.log('产线' + factoryName)\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n          console.info(returnData)\n          var data = returnData.data;\n          var unfinished = [];\n          var finished = [];\n          console.info(data)\n          for(var j = 0; j < factory.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n              //console.log('2222')\n              if(data[i].nodeId == factory[j]) {\n                if (data[i].instance == 'state,0') {\n                  unfinished.push(data[i].value)\n                }else if(data[i].instance == 'state,1') {\n                  finished.push(data[i].value)\n                }\n              }\n            }\n            var jlength = (j + 1)\n            if(finished.length != jlength) {\n              var add = jlength - finished.length;\n              for(var x = 0; x < add; x++) {\n                finished.push('0')\n              }\n            }\n            if(unfinished.length != jlength) {\n              var add = jlength - unfinished.length;\n              for(var y = 0; y < add; y++) {\n                unfinished.push('0')\n              }\n            }\n          }\n          var option = {\n            title : {\n              text: factoryName[0],\n              x:'10%',\n              y:'80%',\n              textStyle:{\n                  //fontSize : 12,\n                color:'#babfc3',\n              }\n            },\n            tooltip : {\n              trigger: 'item',\n              formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            legend: {\n              x : '5%',\n              y:'2%',\n              textStyle:{\n                color:'#84898d'\n              },\n              orient : 'vertical',\n              data:[ '已完成状态项目维修数','待完成状态项目维修数']\n            },\n            calculable:true,\n            series : [\n              {\n                name: '',\n                type: 'pie',\n                radius : '8%',\n                tooltip : {\n                  show:false\n                },\n                center: ['25%', '30%'],\n                hoverAnimation:false,\n                color:['#dde5e7'],\n\n                labelLine:{\n                  normal:{\n                    show:false\n                  },\n                  emphasis:{\n                    show:true\n                  }\n                },\n              },\n              {\n                name:'',\n                type:'pie',\n                radius : ['40%','60% '],\n                center : ['50%', '50%'],\n                calculable:true,\n                avoidLabelOverlap: true,\n                label: {\n                  normal: {\n                    position:'inner',\n                    show: true,\n                    formatter: ' {c} ',\n                    textBorderWidth:0,\n                  },\n                },\n                data:[\n                  {value:finished[0], name:'已完成状态项目维修数', itemStyle:{\n                    normal:{\n                      color: {\n                        type: 'linear',\n                        x: 0,\n                        y: 0,\n                        x2: 0,\n                        y2: 1,\n                        colorStops: [{\n                          offset: 0, color: '#CACACC' // 0% 处的颜色\n                        }, {\n                          offset: 1, color: '#CACACC' // 100% 处的颜色\n                        }],\n                        globalCoord: false // 缺省为 false\n                      },\n                      borderColor: '#dde5e7',\n                      borderWidth:3,\n                      borderType:'solid',\n                    }\n                  }},\n                  {value:unfinished[0], name:'待完成状态项目维修数', itemStyle:{\n                    normal:{\n                      color: {\n                        type: 'linear',\n                        x: 0,\n                        y: 0,\n                        x2: 0,\n                        y2: 1,\n                        colorStops: [{\n                          offset: 0, color: '#0b7cae' // 0% 处的颜色\n                        }, {\n                          offset: 1, color: '#33ddee' // 100% 处的颜色\n                        }],\n                        globalCoord: false // 缺省为 false\n                      },\n                      borderColor: '#dde5e7',\n                      borderWidth:3,\n                      borderType:'solid',\n                    }\n                  }}\n\n                ]\n              }\n            ]\n          };\n          event.target.render(option);\n        })\n      })\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "auto",
                                                      "width": "100%",
                                                      "height": "250px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 4
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "高级视图",
                                                    "type": "advanceEchart",
                                                    "source": "ADVANCEECHART",
                                                    "parameters": {
                                                      "theme": "default"
                                                    },
                                                    "advance": {
                                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n\n\n\n      var workObj = target.getParameter(\"id\");\n      //515445641576272\n\n      var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n\n      target.getDomainsByFilter(filter,function(returnData){\n        var factoryName = [];\n        var factory = [];\n        for(var i = 0; i < returnData.length;i++) {\n          factoryName.push(returnData[i].label)\n          factory.push(returnData[i].id)\n        }\n        //console.log('产线' + factoryName)\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n          console.info(returnData)\n          var data = returnData.data;\n          var unfinished = [];\n          var finished = [];\n          console.info(data)\n          for(var j = 0; j < factory.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n              //console.log('2222')\n              if(data[i].nodeId == factory[j]) {\n                if (data[i].instance == 'state,0') {\n                  unfinished.push(data[i].value)\n                }else if(data[i].instance == 'state,1') {\n                  finished.push(data[i].value)\n                }\n              }\n            }\n            var jlength = (j + 1)\n            if(finished.length != jlength) {\n              var add = jlength - finished.length;\n              for(var x = 0; x < add; x++) {\n                finished.push(0)\n              }\n            }\n            if(unfinished.length != jlength) {\n              var add = jlength - unfinished.length;\n              for(var y = 0; y < add; y++) {\n                unfinished.push(0)\n              }\n\n            }\n\n          }\n\n\n          var option = {\n            title : {\n              text: factoryName[1],\n              x:'10%',\n              y:'80%',\n              textStyle:{\n                color:'#babfc3',\n                //fontSize : 12\n              }\n            },\n            tooltip : {\n              trigger: 'item',\n              formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            legend: {\n              x : '5%',\n              y:'2%',\n              textStyle:{\n                color:'#84898d'\n              },\n              orient : 'vertical',\n              data:[ '已完成状态项目维修数','待完成状态项目维修数']\n            },\n            calculable:true,\n            series : [\n              {\n                name: '',\n                type: 'pie',\n                radius : '8%',\n                tooltip : {\n                  show:false\n\n                },\n                center: ['25%', '30%'],\n                hoverAnimation:false,\n                color:['#dde5e7'],\n\n                labelLine:{\n                  normal:{\n                    show:false\n                  },\n                  emphasis:{\n                    show:true\n                  }\n                },\n\n\n              },\n\n              {\n                name:'',\n                type:'pie',\n                radius : ['40%','60% '],\n                center : ['50%', '50%'],\n                calculable:true,\n                avoidLabelOverlap: true,\n\n                // roseType : 'area',\n                label: {\n                  normal: {\n                    position:'inner',\n                    show: true,\n                    formatter: ' {c} ',\n                    textBorderWidth:0,\n                  },\n\n                },\n                data:[\n                  {value:finished[1], name:'已完成状态项目维修数', itemStyle:{\n                    normal:{\n                      color: {\n                        type: 'linear',\n                        x: 0,\n                        y: 0,\n                        x2: 0,\n                        y2: 1,\n                         colorStops: [{\n                          offset: 0, color: '#CACACC' // 0% 处的颜色\n                        }, {\n                          offset: 1, color: '#CACACC' // 100% 处的颜色\n                        }],\n                        globalCoord: false // 缺省为 false\n                      },\n                      borderColor: '#dde5e7',\n                      borderWidth:3,\n                      borderType:'solid',\n                    }\n                  }},\n                  {value:unfinished[1], name:'待完成状态项目维修数', itemStyle:{\n                    normal:{\n                      color: {\n                        type: 'linear',\n                        x: 0,\n                        y: 0,\n                        x2: 0,\n                        y2: 1,\n                        colorStops: [{\n                          offset: 0, color: '#0b7cae' // 0% 处的颜色\n                        }, {\n                          offset: 1, color: '#33ddee' // 100% 处的颜色\n                        }],\n                        globalCoord: false // 缺省为 false\n                      },\n                      borderColor: '#dde5e7',\n                      borderWidth:3,\n                      borderType:'solid',\n                    }\n                  }}\n                ]\n              }\n            ]\n          };\n          event.target.render(option);\n        })\n      })\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "auto",
                                                      "width": "100%",
                                                      "height": "250px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 4
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "高级视图",
                                                    "type": "advanceEchart",
                                                    "source": "ADVANCEECHART",
                                                    "parameters": {
                                                      "theme": "default"
                                                    },
                                                    "advance": {
                                                      "expression": "express = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      \n      \n      \n        var workObj = target.getParameter(\"id\");\n        //515445641576272\n       \n        var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            console.log('产线' + factoryName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6101]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n                console.info(returnData)\n                var data = returnData.data;\n                var unfinished = [];\n                var finished = [];\n                console.info(data)\n                for(var j = 0; j < factory.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == factory[j]) {\n                            if (data[i].instance == 'state,0') {\n                                unfinished.push(data[i].value)\n                            }else if(data[i].instance == 'state,1') {\n                                finished.push(data[i].value)\n                            }\n                        }\n                    }\n                    var jlength = (j + 1)\n                    if(finished.length != jlength) {\n                        var add = jlength - finished.length;\n                        for(var x = 0; x < add; x++) {\n                            finished.push(0)\n                        }\n                    }\n                    if(unfinished.length != jlength) {\n                        var add = jlength - unfinished.length;\n                        for(var y = 0; y < add; y++) {\n                            unfinished.push(0)\n                        }\n                        \n                    }\n                    \n                 }\n                 \n                 \nvar option = {\n        title : {\n         text: factoryName[2],\n         x:'10%',\n         y:'80%',\n    textStyle:{\n         color:'#babfc3',\n    }\n    },\n    tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    legend: {\n        x : '5%',\n        y:'2%',\n        textStyle:{\n            color:'#84898d'\n        },\n       orient : 'vertical',\n        data:[ '已完成状态项目维修数','待完成状态项目维修数']\n    },\n    calculable:true,\n    series : [\n         {\n            name: '',\n            type: 'pie',\n            radius : '8%',\n             tooltip : {\n                show:false\n       \n            },\n            center: ['25%', '30%'],\n            hoverAnimation:false,\n            color:['#dde5e7'],\n          \n            labelLine:{\n                normal:{\n                    show:false\n                },\n                emphasis:{\n                    show:true\n                }\n            },\n           \n           \n        },\n         \n        {\n            name:'',\n            type:'pie',\n            radius : ['40%','60% '],\n            center : ['50%', '50%'],\n            calculable:true,\n            avoidLabelOverlap: true,\n            \n           // roseType : 'area',\n              label: {\n                normal: {\n                    position:'inner',\n                    show: true,\n                    formatter: ' {c} ',\n                   textBorderWidth:0,\n                },\n              \n            },\n            data:[\n                {value:finished[1], name:'已完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                          offset: 0, color: '#CACACC' // 0% 处的颜色\n                        }, {\n                          offset: 1, color: '#CACACC' // 100% 处的颜色\n                        }],\n                             globalCoord: false // 缺省为 false\n                                },\n                   borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }},\n            {value:unfinished[1], name:'待完成状态项目维修数', itemStyle:{\n                   normal:{\n                       color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: 0,\n                                y2: 1,\n                            colorStops: [{\n                             offset: 0, color: '#0b7cae' // 0% 处的颜色\n                             }, {\n                             offset: 1, color: '#33ddee' // 100% 处的颜色\n                             }],\n                             globalCoord: false // 缺省为 false\n                                },\n                    borderColor: '#dde5e7',\n                    borderWidth:3,\n                    borderType:'solid',\n                }\n            }}\n               \n            ]\n        }\n    ]\n        };\n      event.target.render(option);\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n            })\n        })\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "width": "100%",
                                                      "height": "250px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 4
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 8
                              },
                              {
                                "type": "column",
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "3px 5px 5px 5px",
                                      "padding": "10px",
                                      "height": "290px"
                                    },
                                    "advance": {
                                      "expression": "{}"
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "10px  5px 5px 5px",
                                              "padding": "0",
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"状态总览 \");\n        }\n    }\n}"
                                            },
                                            "parameters": {}
                                          },
                                          {
                                            "label": "重复单元",
                                            "type": "repeater",
                                            "source": "REPEATER",
                                            "parameters": {
                                              "col": 3
                                            },
                                            "advance": {
                                              "getListTable": "allprojects",
                                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      \n      \n      \n      var id = target.getParameter(\"id\") || target.getValue(\"device/id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n        var domains = find.getChildren();\n        var mountain = domains.map(function(elem){\n          return elem.id;\n        });\n        var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n          \"nodeIds\":mountain,\"kpiCodes\":[6100]}];\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n            var kpiNames = ['正常','注意','警告','监测台数'];\n            var data = returnData.data;\n            console.log(data)\n            var all = [];\n            var normal = [];\n            var notice = [];\n            var warning = [];\n            var risk = [];\n            var data = returnData.data;\n        //对数据的处理   \n        for(var j = 0; j < domains.length; j++) {\n            for(var i = 0; i < data.length; i++) {\n                \n            if(data[i].nodeId == domains[j].id) {\n                console.log('zxy')\n                if(data[i].instance == \"severity,0\") {\n                    all.push(data[i].value)\n                }else if (data[i].instance == \"severity,-1\") {\n                    normal.push(data[i].value)\n                }else if(data[i].instance == \"severity,2\") {\n                    notice.push(data[i].value)\n                }else if(data[i].instance == \"severity,3\") {\n                    warning.push(data[i].value)\n                }else if(data[i].instance == \"severity,4\") {\n                    risk.push(data[i].value)\n                }\n\n              }\n            }\n\n            var jlength = (j + 1)\n            if(all.length != jlength) {\n                var add = jlength - all.length;\n                for(var z = 0; z < add; z++) {\n                    all.push('0')\n                }\n            }\n            if(notice.length != jlength) {\n                var add = jlength - notice.length;\n                for(var z = 0; z < add; z++) {\n                    notice.push('0')\n                }\n            }\n            if(normal.length != jlength) {\n                var add = jlength - normal.length;\n                for(var x = 0; x < add; x++) {\n                    normal.push('0')\n               }\n            }\n            if(warning.length != jlength) {\n                var add = jlength - warning.length;\n                for(var y = 0; y < add; y++) {\n                    warning.push('0')\n                }\n                        \n            }\n            if(risk.length != jlength) {\n                var add = jlength - risk.length;\n                    for(var y = 0; y < add; y++) {\n                        risk.push('0')\n                    }\n                        \n                }\n\n        }\n        \n        \n        \n        \n        \n        var list = domains.map(function(domain,index){\n            var num = index;\n            var rs = {};\n            rs.province = domain.label;\n            rs.description = domain.description;\n            rs.data = kpiNames.map(function(kp,index){\n              var r = {};\n              r.name = kpiNames[index];\n            //   r.value = data.reduce(function(a, b){\n            //     if(b.instance == kpiIds[index]){\n            //       //a++;\n            //       return a = (b.value);\n                 \n            //     }\n               \n            //   },0);\n              //为0的时候为了测试，用模拟数据\n             // r.value = r.value || parseInt(Math.random() * 10);\n              //为0的时候为了测试，用模拟数据\n              \n              \n            if(index == 0) {\n                r.value =  normal[num]\n            }else if(index == 1) {\n                r.value = notice[num]\n            }else if(index == 2) {\n                r.value = warning[num]\n            }else if(index == 3) {\n                r.value = all[num]\n            }\n               return r;\n            })\n            return rs;\n          });\n          console.log(list)\n          for(var j = 0; j < list.length; j++) {\n              if(list[j].description) {\n                  var listNum = list[j];\n                  list.splice(j, 1)\n                  list.unshift(listNum)\n              }\n          }\n          target.render(list);\n          \n          \n        });\n        \n        }\n        \n      });\n    }\n  }\n}"
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 4,
                                                "children": [
                                                  {
                                                    "label": "控件组",
                                                    "type": "ctrlgroup",
                                                    "source": "CTRLGROUP",
                                                    "advance": {
                                                      "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var label = target.$repeatData.province;\n      var description = target.$repeatData.description || 0;\n      var ctrlGroups = [[{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              wrap.css(\"height\", \"70px\");\n              wrap.css(\"border\", \"1px solid rgba(250,250,250,.3)\");\n              wrap.css(\"background-color\", \"rgba(0,100,250,.1)\");\n              var title = $(\"<div></div>\");\n              title.text(label);\n              title.css(\"font-size\", \"12px\");\n              title.css(\"color\", \"#fff\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"top\", \"12px\");\n              title.css(\"left\", \"15px\");\n              title.css(\"font-weight\", \"bold\");\n              var sub = $(\"<div></div>\");\n              sub.text(\"重要台数\");\n              sub.css(\"position\", \"absolute\");\n              sub.css(\"top\", \"30px\");\n              sub.css(\"left\", \"15px\");\n              sub.css(\"color\", \"#aaa\");\n              sub.css(\"font-size\", \"10px\");\n              var number = $(\"<div></div>\");\n              number.text(description);\n              number.css(\"position\", \"absolute\");\n              number.css(\"top\", \"45px\");\n              number.css(\"left\", \"15px\");\n              number.css(\"font-size\", \"14px\");\n              number.css(\"font-weight\", \"bold\");\n              wrap.append(title);\n              wrap.append(sub);\n              wrap.append(number);\n              return wrap;\n          }\n        }]];\n      target.render(ctrlGroups);\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "help": "../pdf/ctrlgroup.pdf",
                                                    "parameters": {}
                                                  },
                                                  {
                                                    "type": "row",
                                                    "source": "ROW",
                                                    "parameters": {
                                                      "alignment": "bootstrap"
                                                    },
                                                    "style": {},
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "children": [
                                                          {
                                                            "label": "控件组",
                                                            "type": "ctrlgroup",
                                                            "source": "CTRLGROUP",
                                                            "advance": {
                                                              "expression": "expression = {\n  on : {\n    repeat : function(event){\n      var target = event.target;\n      var global = event.global;\n      var colors = [target.getAlertColor(1), target.getAlertColor(2), target.getAlertColor(3)];\n      var ctrlGroups = [];\n      var createTr = function(index, element){\n        return [{\n          type : \"jquery\",\n          render : function(){\n              var wrap = $(\"<div></div>\");\n              var title = $(\"<div></div>\");\n              var bar = $(\"<div></div>\");\n              wrap.css(\"height\", \"25px\");\n              wrap.css(\"width\", \"40px\");\n              wrap.css(\"margin\", \"auto\");\n              bar.css(\"width\", \"10px\");\n              bar.css(\"height\", \"25px\");\n              bar.css(\"background-color\", colors[index]);\n              bar.css(\"position\", \"absolute\");\n              wrap.css(\"position\", \"relative\");\n              bar.css(\"left\", \"25px\");\n              wrap.append(bar);\n              title.css(\"text-align\", \"right\");\n              title.css(\"color\", \"#a0a0a0\");\n              title.css(\"margin-right\", \"15px\");\n              title.css(\"position\", \"absolute\");\n              title.css(\"font-size\", \"12px\");\n              title.text(element.name);\n              var value = $(\"<div></div>\");\n              value.css(\"color\", \"#fff\");\n              value.css(\"position\", \"absolute\");\n              value.css(\"font-size\", \"12px\");\n              value.css(\"text-align\", \"right\");\n              value.css(\"font-weight\", \"bold\");\n              value.text(element.value);\n              value.css(\"top\", \"12px\");\n              wrap.append(title);\n              wrap.append(value);\n              return wrap;\n          }\n        }]\n      }\n      for(var i = target.$repeatData.data.length - 1; i >= 0; i--){\n         ctrlGroups.push(createTr(i, target.$repeatData.data[i]));\n      }\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px"
                                                            },
                                                            "help": "../pdf/ctrlgroup.pdf",
                                                            "parameters": {}
                                                          }
                                                        ],
                                                        "col": 6
                                                      },
                                                      {
                                                        "type": "column",
                                                        "children": [
                                                          {
                                                            "label": "SVG视图",
                                                            "type": "svgchart",
                                                            "source": "SVGCHART",
                                                            "advance": {
                                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n        var  target = event.target;\n        var repeatData = target.$repeatData;\n        var barOption = {\n          title: {\n            text: 'svgChart入门示例'\n          },\n          grid : {\n              top : \"5%\",\n              left : \"10%\",\n              height : \"90%\"\n          },\n          legend: {\n            data: ['销量']\n          },\n          xAxis: {\n            show : false,\n            data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n          },\n          yAxis: {\n              show : false\n          },\n          series: [{\n            stack : \"总量\",\n            name: '销量1',\n            type: '3dbar',\n            data: [repeatData.data[0].value]\n          },{\n              stack : \"总量\",\n            name: '销量2',\n            type: '3dbar',\n            data: [repeatData.data[1].value]\n          },{\n              stack : \"总量\",\n            name: '销量3',\n            type: '3dbar',\n            data: [repeatData.data[2].value]\n          }]\n        };\n        target.render(barOption);\n     }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "0px",
                                                              "font-size": "12px",
                                                              "height": "150px"
                                                            },
                                                            "parameters": {}
                                                          }
                                                        ],
                                                        "col": 6
                                                      }
                                                    ],
                                                    "url": "images/map/map1.png"
                                                  }
                                                ]
                                              }
                                            ],
                                            "style": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "5px 5px 5px 5px",
                                      "padding": "10px",
                                      "height": "267px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "style": {
                                              "padding": "5px",
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"诊断绩效统计（当月内）\")\n        }\n    }\n}"
                                            },
                                            "data": {
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "modelDisable": true
                                            },
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "控件组",
                                            "type": "ctrlgroup",
                                            "source": "CTRLGROUP",
                                            "advance": {
                                              "expression": "expression = {\n    bootstrap : true,\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var workObj = target.getParameter(\"id\");\n       \n      var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n       \n      target.getDomainsByFilter(filter,function(returnData){\n          var baseName = [];\n          var mountain = [];\n            for(var i = 0; i < returnData.length;i++) {\n                baseName.push(returnData[i].name)\n                mountain.push(returnData[i].id)\n            }\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\":mountain,\"kpiCodes\":[6106]}];\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(returnData){\n                console.info( returnData.data)\n                var data = returnData.data;\n                var synthesize = [];\n                var capacity = [];\n                var big = [];\n                for(var j = 0; j < mountain.length; j++) {\n                    for(var i = 0; i < data.length; i++) {\n                        //console.log('2222')\n                        if(data[i].nodeId == mountain[j]) {\n                            //console.log(\"基地\")\n                            if(data[i].instance == '1,all,values') {\n                                synthesize.push(data[i].value.toFixed(0))\n                            }else if (data[i].instance == '2,all,values') {\n                                capacity.push(data[i].value.toFixed(0))\n                            }else if(data[i].instance == '3,all,values') {\n                                big.push(data[i].value.toFixed(0))\n                            }\n                        }\n                    }\n                    \n                    var jlength = (j + 1)\n                    if(synthesize.length != jlength) {\n                        var add = jlength - synthesize.length;\n                        for(var z = 0; z < add; z++) {\n                            synthesize.push(0)\n                        }\n                        \n                    }\n                    if(capacity.length != jlength) {\n                        var add = jlength - capacity.length;\n                        for(var x = 0; x < add; x++) {\n                            capacity.push(0)\n                        }\n                    }\n                    if(big.length != jlength) {\n                        var add = jlength - big.length;\n                        for(var y = 0; y < add; y++) {\n                            big.push(0)\n                        }\n                        \n                    }\n \n                    \n                }\n                \n                \n                \n      var column = ['区域','综合诊断准确率','智能诊断准确率','大数据预警准确率'];\n      var inx = 0;\n      var ctrlGroups = [\n        column.map(function(elem){\n          var a = {\n            type : \"label\",\n            value : elem,\n            class : inx ? (inx == 3 ?\"col-md-4\" : \"col-md-3\") : \"col-md-2\",\n            style : {\n              \"text-align\" : \"center\"\n            }\n          }\n          inx++;\n          return a;\n        })\n      ];\n      \n      //var row = ['宝山','东山','天山','湛江'];\n      var row = baseName;\n      for(var i in row){\n        var arr = [{\n          type : \"label\",\n          value : row[i],\n          class : \"col-md-2\",\n          style : {\n              \"text-align\" : \"center\",\n              \"color\":\"white\"\n            }\n        }];\n        var index = i;\n        for(var i in column.slice(1,4)){\n         if(i == '0') {\n            Array.prototype.push.apply(arr, [{\n                shownumber : true,\n            type : \"progressbar\",\n            //value : rnd,\n            value : synthesize[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\",\n            \n          }])\n         }else if(i == 1) {\n            Array.prototype.push.apply(arr, [{\n                shownumber : true,\n            type : \"progressbar\",\n            value : capacity[index],\n            class : i == 2 ? \"col-md-3\" : \"col-md-3\",\n            \n          }]) \n         }else if (i == 2) {\n            Array.prototype.push.apply(arr, [{\n                shownumber : true,\n            type : \"progressbar\",\n            value : big[index],\n            class : \"col-md-4\",\n            \n          }]) \n         }\n\n        }\n        ctrlGroups.push(arr);\n      };\n      \n      for(var i = 1; i < ctrlGroups.length; i++ ) {\n              if((!ctrlGroups[i][1].value || !ctrlGroups[i][2].value || !ctrlGroups[i][3].value) ) {\n                    var ctrlNum;\n                  ctrlNum = ctrlGroups[i];\n                  ctrlGroups.splice(i,1);\n                  ctrlGroups.splice(1,0,ctrlNum);\n              }\n          }\n    target.render(ctrlGroups);\n                \n\n                  \n            })\n            \n          \n            \n            \n            \n            \n            \n          \n      })\n      \n      \n      \n\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "font-size": "12px"
                                            },
                                            "help": "../pdf/ctrlgroup.pdf",
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "margin": "8px 7px 7px 5px",
                                      "height": "330px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "style": {
                                              "padding": "5px",
                                              "font-size": "12px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"异常预报分类（当月内）\")\n        }\n    }\n}"
                                            },
                                            "data": {
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "modelDisable": true
                                            },
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "SVG视图",
                                            "type": "svgchart",
                                            "source": "SVGCHART",
                                            "advance": {
                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var  target = event.target;\n      \n      \n       var workObj = target.getParameter(\"id\");\n        //515445641576272\n        //console.log('222' + workObj)\n       \n        var filter = {\"layer\":1,\"modelId\":301,\"domains\":workObj};\n       \n        target.getDomainsByFilter(filter,function(returnData){\n            var factoryName = [];\n            var factory = [];\n            for(var i = 0; i < returnData.length;i++) {\n                factoryName.push(returnData[i].label)\n                factory.push(returnData[i].id)\n            }\n            //console.log('产线' + factoryName)\n            var params = [\"kpi\",{\"isRealTimeData\":true,\"includeInstance\":true,\n            \"nodeIds\": factory,\"kpiCodes\":[6103]}];\n            var abnormal = [];\n            var values = []\n            target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n                console.log('异常类型')\n                console.log(returnData.data)\n                var data = returnData.data\n                for(var i = 0; i < data.length; i++) {\n                    if(data[i].value != 0) {\n                        abnormal.push(data[i].instance)\n                        values.push(data[i].value)\n                    }\n                    \n                }\n                \n                \n                \n                var repeatData = target.$repeatData;\n      var barOption = {\n        title: {\n          text: 'svgChart入门示例'\n        },\n        grid : {\n          left : \"10%\",\n          //height : \"80%\",\n          height : \"70%\",\n          top : \"5%\"\n        },\n        legend: {\n          data: ['销量']\n        },\n        xAxis: {\n          show : true,\n          base : {\n              show : true\n          },\n          data: abnormal,\n          axisLine : {\n            show : false,\n          },\n          axisTick : {\n            show : false\n          },\n          axisLabel : {\n            margin : 26,\n            color : \"#eee\",\n            \n          }\n        },\n        yAxis: {\n          show : true,\n          //max : 10,\n          //splitNumber : 2,\n          axisLine : {\n            show : true,\n            lineStyle : {\n              color : \"rgba(250,250,250,.3)\"\n            }\n          },\n          axisTick : {\n            color : \"#eee\",\n            show : true\n          },\n          axisLabel : {\n            margin : 20,\n            color : \"#eee\"\n          }\n        },\n        series: [{\n          stack : \"总量\",\n          name: '销量1',\n          barwidth : .4,\n          type: '3dbar',\n          colors : values.map(function(elem,index){\n              //debugger\n             console.log(index);\n            if(index == 0){\n            //   return \"#fc6161\";\n                return \"#2b97fc\"\n            } else if(index == 1){\n              return \"#b76efc\";\n            } else if(index == 2){\n              return \"#7dc5e2\";\n            } else if(index == 3){\n              return \"#e98b74\";\n            } else if(index == 4){\n              return \"#eaeaea\";\n            }else if(index == 5){\n              return \"#a9815d\";\n            }else if(index == 6){\n              return \"#7f8c3a\";\n            }\n            else {\n                return \"#fc6161\"\n            }\n          }),\n          data: values\n        }]\n      };\n      target.render(barOption);\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n            })\n        })\n      \n      \n      \n      \n  \n\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "font-size": "12px",
                                              "height": "280px"
                                            },
                                            "parameters": {},
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": {},
                                    "url": "images/map/map1.png"
                                  }
                                ],
                                "col": 4
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "url": "images/map/map1.png"
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "4",
      "$$hashKey": "object:1364"
    },
    {
      "label": "虚拟大设备(层流和粗轧)",
      "path": "virtual",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "0px",
                              "margin": "0px",
                              "border": "0",
                              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                              "background-color": "rgba(250,250,250,0)",
                              "height": "calc(100vh - 170px)",
                              "overflow-y": "auto",
                              "overflow-x": "hidden"
                            },
                            "advance": {
                              "expression": "{}"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "组态视图",
                                                    "type": "topo",
                                                    "source": "TOPO",
                                                    "advance": {
                                                      "variable": "",
                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.$on(\"$loadCiKpiComplete\", function(cells){\n              //var position = {x:550,y:0};\n              var position = {x:250,y:0};\n              var is = target.createCurrentStatus(find.label, position, find.status);\n              find.$on(\"statusChanged\", function(nd){\n                     is.setAlarmStatus(find.status)\n                  });\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              var createAlarm = function(index, node){\n                var cell = cells[index] || {};\n                var position;\n                if(cell){\n                  position = cell.position();\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                }\n                target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.setAlarmStatus(node.status);\n                  node.$on(\"statusChanged\", function(nd){\n                     ins.setAlarmStatus(node.status);\n                  });\n                  ins.on(\"click\", function(event){\n            target.createCurrentStatusByItem(node.id, position);return;\n           target.createSystemPopupByLocalPath(\"page8\", {\n                         width : \"400px\",\n                         title: node.label,\n                        },node.id);\n                  })\n                });\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n\n      });\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px",
                                                      "background-repeat": "no-repeat"
                                                    },
                                                    "viewId": 469973748826064,
                                                    "parameters": {},
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 7
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控制板1",
                                                    "type": "block",
                                                    "source": "BLOCK",
                                                    "style": {
                                                      "margin": "5px",
                                                      "padding": "10px"
                                                    },
                                                    "advance": {
                                                      "expression": {}
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "col": 12,
                                                        "children": [
                                                          {
                                                            "label": "文字",
                                                            "type": "text",
                                                            "source": "TEXT",
                                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                            "data": {
                                                              "applied": false,
                                                              "multipleCi": false,
                                                              "multipleKpi": false,
                                                              "resource": [],
                                                              "modelType": 300,
                                                              "resfilltype": "parameter",
                                                              "series": {
                                                                "manual": "新建文字",
                                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                                              },
                                                              "modelDisable": true
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "padding": "0",
                                                              "font-size": "14px",
                                                              "font-weight": "bold",
                                                              "text-align": "left",
                                                              "color": "rgb(255, 255, 255)"
                                                            },
                                                            "advance": {
                                                              "getfunction": "kpiDataService.getValueList",
                                                              "category": "ci",
                                                              "condition": [
                                                                "kpi",
                                                                "{object:kpiQueryModel}"
                                                              ],
                                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"设备状态\")\n        }\n    }\n}"
                                                            },
                                                            "parameters": {}
                                                          },
                                                          {
                                                            "label": "控制板1",
                                                            "type": "block",
                                                            "source": "BLOCK",
                                                            "style": {
                                                              "padding": "0px",
                                                              "margin": "0px",
                                                              "border": "0",
                                                              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                                                              "background-color": "rgba(250,250,250,0)",
                                                              "height": "500px",
                                                              "overflow-y": "auto"
                                                            },
                                                            "advance": {
                                                              "expression": {}
                                                            },
                                                            "children": [
                                                              {
                                                                "type": "column",
                                                                "col": 12,
                                                                "children": [
                                                                  {
                                                                    "label": "高级列表",
                                                                    "type": "dataTableAdvance",
                                                                    "source": "DATATABLEADVANCE",
                                                                    "parameters": {
                                                                      "col": 1,
                                                                      "pageSize": 5,
                                                                      "listbottom": "pageOnly"
                                                                    },
                                                                    "advance": {
                                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var nodeId = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(tree){\n        var find = tree.find(function(node){\n          return node.id == nodeId;\n        });\n        if(find){\n          var children = find.children;\n          var ci = children.map(function(elem){\n            return elem.id;\n          });\n          target.render({\n            pageSize : 1000,\n            data : children,\n            on : {\n              rowClick : function(event){\n                var data = event.row;\n                var find = children.find(function(elem){\n                    return elem.id == data.id;\n                });\n                find.click();\n              }\n            },\n            \"format\" : [\n              {\n                \"name\": \"设备名称\",\n                \"value\": \"label\",\n                \"type\": \"text\"\n              },{\n                \"name\": \"状态\",\n                \"value\": \"status\",\n                \"type\": \"jquery\",\n                \"render\" : function(elem){\n                  var wrap = $(\"<div></div>\");\n                  var circle = $(\"<div></div>\");\n                  //var text = $(\"<div></div>\");\n                  var t = $(\"<div></div>\");\n                  var el = tree.find(function(nd){\n                      return nd.id == elem.id;\n                  })\n                  circle.css(\"width\", \"20px\");\n                  circle.css(\"margin-right\", \"5px\");\n                  circle.css(\"height\", \"20px\");\n                  circle.css(\"border-radius\", \"50%\");\n                  circle.css(\"display\", \"inline-block\");\n                  circle.attr(\"id\", \"circle_\" + elem.id);\n                  circle.css(\"background-color\", target.getAlertColor(elem.status));\n                //   text.css(\"position\", \"relative\");\n                //   text.attr(\"id\", \"text_\" + elem.id);\n                //   text.css(\"display\", \"inline-block\");\n                //   text.css(\"color\", target.getAlertColor(elem.status));\n                //   text.css(\"font-weight\", \"bold\");\n                //   t.attr(\"id\", \"t_\" + elem.id);\n                //   t.text(target.getAlertWord(elem.status));\n                  //text.append(t);\n                  t.css(\"position\", \"absolute\");\n                  t.css(\"top\", \"-20px\");\n                  wrap.append(circle);\n                  //wrap.append(text);\n                  //text.css(\"line-height\", \"20px\");\n                  el.$on(\"statusChanged\", function statusChanged(node){\n                      var circle = $(\"#circle_\" + node.id);\n                    //   var text = $(\"#text_\" + node.id);\n                    //   var text = $(\"#t_\" + node.id);\n                    //   debugger;\n                      circle.css(\"background-color\", target.getAlertColor(node.status));\n                      //text.css(\"color\", target.getAlertColor(node.status));\n                      t.css(\"color\", target.getAlertColor(node.status));\n                      t.text(target.getAlertWord(node.status));\n                  })\n                  return wrap;\n                }\n              },\n            ]\n          })\n        }\n      });\n    }\n  }\n}"
                                                                    },
                                                                    "style": {
                                                                      "margin": "5px",
                                                                      "font-size": "12px"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            ],
                                                            "parameters": {}
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 5
                                              }
                                            ],
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "background-color": "",
                                      "margin": "5px",
                                      "padding": "10px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "文字",
                                            "type": "text",
                                            "source": "TEXT",
                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                            "data": {
                                              "applied": false,
                                              "multipleCi": false,
                                              "multipleKpi": false,
                                              "resource": [],
                                              "modelType": 300,
                                              "resfilltype": "parameter",
                                              "series": {
                                                "manual": "新建文字",
                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                              },
                                              "modelDisable": true
                                            },
                                            "style": {
                                              "margin": "auto",
                                              "padding": "0",
                                              "font-size": "16px",
                                              "font-weight": "bold",
                                              "text-align": "left",
                                              "color": "rgb(255, 255, 255)"
                                            },
                                            "advance": {
                                              "getfunction": "kpiDataService.getValueList",
                                              "category": "ci",
                                              "condition": [
                                                "kpi",
                                                "{object:kpiQueryModel}"
                                              ],
                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"报警通知\")\n        }\n    }\n}"
                                            },
                                            "parameters": {},
                                            "echart": {},
                                            "url": "images/map/map1.png"
                                          },
                                          {
                                            "label": "高级列表",
                                            "type": "dataTableAdvance",
                                            "source": "DATATABLEADVANCE",
                                            "parameters": {
                                              "col": 1,
                                              "pageSize": 10,
                                              "listbottom": "standard"
                                            },
                                            "advance": {
                                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var projectModel;\n      var projectAttr;\n      var render = function(){\n          var projectId = target.getParameter(\"id\");\n          target.getResourceById(projectId, function(resource){\n              target.queryFromDb({\n                  domain : resource.domains\n              }, function(alerts){\n                console.log(alerts)\n                var alertsDevice = [];\n             for(var i = 0; i < alerts.length; i++ ) {\n                 if(alerts[i].state == 0 || alerts[i].state == 5 || alerts[i].state == 10) {\n                    if(alerts[i].severity != -1) {\n                      alertsDevice.push(alerts[i]) \n                    }\n                 }\n             }\n             target.setValue(\"device/alerts\",alertsDevice.map(function(alert){\n              alert.label = alert.devName + \"(\" + alert.message + \")\";\n              alert.valueStr = target.getAlertWord(alert.severity);\n              alert.status = alert.severity;\n              return alert;\n            }));\n              target.render({\n                data : alertsDevice,\n                on : {\n                    rowClick : function(event){\n                      console.log(event)\n                    }   \n                },\n                format : [\n                  {\n                    \"name\": \"设备名称\",\n                    \"value\": \"devName\",\n                    \"type\": \"text\",\n                    //\"width\" : 300\n                  }, {\n                    \"name\": \"报警来源\",\n                    \"value\": \"appName\",\n                    \"type\": \"text\",\n                    \"format\":function (elem) {\n                        if(elem == \"1\") {\n                            return \"在线预警\"\n                        }else if(elem == \"2\") {\n                            return \"智能诊断\"\n                        }else if(elem == \"3\") {\n                            return \"大数据分析\"\n                        }else if(elem == \"4\") {\n                            return \"离线诊断\"\n                        }\n                    }\n                  },{\n                    \"name\": \"报警消息\",\n                    \"value\": \"message\",\n                    \"type\": \"text\"\n                  },{\n                    \"name\": \"报警级别\",\n                    \"type\":\"priority\",\n                    \"value\" : \"severity\",\n                    \"format\":function (elem) {\n                        console.log(elem);\n                        if(elem == -1){\n                             return \"正常\";\n                        } else if(elem == 2){\n                             return \"注意\";\n                        }else if(elem == 3){\n                             return \"异常\";\n                        }else if(elem == 4){\n                             return \"警告\";\n                        }\n                    }\n                  },{\n                    \"name\": \"报警时间\",\n                    \"value\": \"firstArisingTime\",\n                    \"type\": \"date\"\n                  },{\n                    \"name\": \"报警状态\",\n                    \"value\": \"state\",\n                    \"type\": \"text\",\n                    \"format\":function (elem) {\n                     if(elem == 0){\n                             return \"新产生\";\n                        } else if(elem == 5){\n                             return \"已确认\";\n                        }else if(elem == 10){\n                             return \"待处理\";\n                        }else if(elem == 20){\n                             return \"已解决\";\n                        }else if(elem == 30){\n                             return \"已忽略\";\n                        }\n                    }\n                  },{\n                      \"name\":\"操作\",\n                      \"type\" : \"buttonGroup\",\n                      \"content\" : [{\n                        type : \"button\",\n                        label : \"过程跟踪\",\n                        icon : \"glyphicon glyphicon-cog\",\n                        btnclass : \"btn btn-primary\",\n                        on : {\n                          click : function(elem){\n                              event.target.postService(\"ticketTaskService\", \"getDealTicketListByPage\", [{\"attrs\": {\"origId\": elem.row.alertId}},\n                              {\"start\": 0, \"length\": 10}], function (dt) {\n                              if (dt.data.data.length>0) {\n                                  target.navigateToTracker(dt.data.data[0].ticketNo);\n                              }else{\n                                target.growl(\"告警未转工单\",\"warning\")\n                              }\n                            })\n                          }\n                        }\n                      }]\n                    }\n                ]\n              });\n            })\n          })\n        \n      }\n      target.getEditorStatus(\"PROJECTMODEL\", function(pmodel){\n          var dt = pmodel || {}\n          projectModel = dt.projectModel || [];\n          projectAttr = dt.projectAttr || {};\n          render();\n        });\n    }\n  }\n}"
                                            },
                                            "style": {
                                              "margin": "5px",
                                              "font-size": "12px"
                                            },
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png",
                                    "parameters": {}
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    },
                    "url": "images/map/map1.png"
                  }
                ]
              }
            ],
            "url": "images/map/map1.png",
            "parameters": {}
          }
        ],
        "col": 12,
        "alertParams": {}
      },
      "id": "5",
      "$$hashKey": "object:1810"
    },
    {
      "label": "设备总览",
      "path": "devicegroup",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "10px",
              "margin": "5px",
              "border": "0",
              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
              "background-color": "rgba(250,250,250,0)"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)",
                      "height": "calc(100vh - 170px)",
                      "overflow-y": "auto",
                      "overflow-x": "hidden"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "10px",
                              "margin": "5px",
                              "border": "0",
                              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                              "background-color": "rgba(250,250,250,0)"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "组态视图",
                                                    "type": "topo",
                                                    "source": "TOPO",
                                                    "advance": {
                                                      "variable": "",
                                                      "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          var viewId = find.$attr(\"view/viewId\");\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n              //var position = {x:550,y:0};\n              var position = {x:250,y:0};\n              var is = target.createCurrentStatus(find.label, position, find.status);\n              find.$on(\"statusChanged\", function(nd){\n                     is.setAlarmStatus(find.status)\n                  });\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n                cells[i].attr(\".connection/stroke\", \"#1f8fd8\");\n                cells[i].attr(\".connection/stroke-width\", 2);\n                cells[i].attr(\".marker-target/visibility\", \"hidden\");\n               \n              }\n              var createAlarm = function(index, node){\n                var cell = cells.find(function(c){\n                    return c.attr(\"text/text\") == node.label;\n                });\n                var position;\n                if(cell){\n                //   console.log('cell',cell);\n                //   debugger\n                  position = cell.position();\n                \n                  target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.setAlarmStatus(node.status);\n                  node.$on(\"statusChanged\", function(nd){\n                     ins.setAlarmStatus(node.status);\n                  });\n                  ins.on(\"textClick\",function (event) {\n                      \n                      \n                    var find = children.find(function(elem){\n                        return elem.id == node.id;\n                    });\n                    console.log(\"findNode -- \", find);\n                    find.click();\n                      \n                     \n                  })\n                   position = {\n                        x : position.x,\n                        y : position.y - 50\n                    }\n                  ins.on(\"click\", function(event){ \n                    // console.log(position)\n                    // debugger\n                   \n                    target.createCurrentStatusByItem(node.id, position);\n                    return;\n                    // target.createSystemPopupByLocalPath(\"page8\", {\n                    //          width : \"400px\",\n                    //          title: node.label,\n                    //         },node.id);\n                    \n                      })\n                    });\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                };\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n\n      });\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "font-size": "12px",
                                                      "background-repeat": "no-repeat"
                                                    },
                                                    "viewId": 469973748826064,
                                                    "parameters": {},
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 7
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控制板1",
                                                    "type": "block",
                                                    "source": "BLOCK",
                                                    "style": {
                                                      "margin": "5px",
                                                      "padding": "10px",
                                                      "height": "600px",
                                                      "overflow-y": "scroll"
                                                    },
                                                    "advance": {
                                                      "expression": {}
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "col": 12,
                                                        "children": [
                                                          {
                                                            "label": "文字",
                                                            "type": "text",
                                                            "source": "TEXT",
                                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                            "data": {
                                                              "applied": false,
                                                              "multipleCi": false,
                                                              "multipleKpi": false,
                                                              "resource": [],
                                                              "modelType": 300,
                                                              "resfilltype": "parameter",
                                                              "series": {
                                                                "manual": "新建文字",
                                                                "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                                              },
                                                              "modelDisable": true
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "padding": "0",
                                                              "font-size": "14px",
                                                              "font-weight": "bold",
                                                              "text-align": "left",
                                                              "color": "rgb(255, 255, 255)"
                                                            },
                                                            "advance": {
                                                              "getfunction": "kpiDataService.getValueList",
                                                              "category": "ci",
                                                              "condition": [
                                                                "kpi",
                                                                "{object:kpiQueryModel}"
                                                              ],
                                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"设备状态\")\n        }\n    }\n}"
                                                            },
                                                            "parameters": {}
                                                          },
                                                          {
                                                            "label": "高级列表",
                                                            "type": "dataTableAdvance",
                                                            "source": "DATATABLEADVANCE",
                                                            "parameters": {
                                                              "col": 1,
                                                              "pageSize": 5,
                                                              "listbottom": "none"
                                                            },
                                                            "advance": {
                                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var nodeId = target.getParameter(\"id\");\n      var main = target.getParameter(\"main\");\n      target.getDomainAreaLineTree(function(tree){\n        var find = tree.find(function(node){\n          return node.id == nodeId;\n        });\n        if(find){\n          var children = find.children;\n          //console.log(children)\n          var ci = children.map(function(elem){\n            return elem.id;\n          });\n          //获取告警状态\n          var params = [\"kpi\",{\"isRealTimeData\":true,\"timePeriod\":0,\"nodeIds\":ci,\"kpiCodes\":[999999]}]\n          target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function (returnData) {\n            for(var i = 0; i < children.length;i++) {\n              for(var j = 0; j < returnData.data.length;j++) {\n                if(returnData.data[j].nodeId == children[i].id) {\n                  children[i].status = returnData.data[j].value\n                }\n              }\n            }\n            target.render({\n              pageSize : 100,\n              data : children,\n              on : {\n                rowClick : function(event){\n                  var data = event.row;\n                  var find = children.find(function(elem){\n                    return elem.id == data.id;\n                  });\n                  console.log(\"findNode -- \", find);\n                  find.click();\n                }\n              },\n              \"format\" : [\n                {\n                  \"name\": \"设备名称\",\n                  \"value\": \"label\",\n                  \"type\": \"label\",\n                  \"style\":{\n                      cursor:\"pointer\",\n                  },\n                },{\n                  \"name\": \"状态\",\n                  \"value\": \"status\",\n                  \"type\": \"jquery\",\n                  \"render\" : function(elem){\n                      var el = tree.find(function(nd){\n                          return nd.id == elem.id;\n                      })\n                    var wrap = $(\"<div></div>\");\n                    var circle = $(\"<div></div>\");\n                    var text = $(\"<div></div>\");\n                    var t = $(\"<div></div>\");\n                    circle.css(\"width\", \"20px\");\n                    circle.css(\"margin-right\", \"5px\");\n                    circle.css(\"height\", \"20px\");\n                    circle.css(\"border-radius\", \"50%\");\n                    circle.css(\"display\", \"inline-block\");\n                    circle.css(\"cursor\", \"pointer\");\n                    circle.css(\"background-color\", target.getAlertColor(elem.status));\n                    // text.css(\"position\", \"relative\");\n                    // text.css(\"color\", target.getAlertColor(elem.status));\n                    // text.css(\"font-weight\", \"bold\");\n                    // text.css(\"cursor\", \"pointer\"); \n                    // t.text(target.getAlertWord(elem.status));\n                    // text.append(t);\n                    t.css(\"position\", \"absolute\");\n                    t.css(\"top\", \"-20px\");\n                    circle.attr(\"id\", \"circle_\" + elem.id);\n                    //text.attr(\"id\", \"text_\" + elem.id);\n                    //t.attr(\"id\", \"t_\" + elem.id);\n                    wrap.append(circle);\n                    //wrap.append(text);\n                    el.$on(\"statusChanged\", function statusChanged(node){\n                      var circle = $(\"#circle_\" + node.id);\n                      //var text = $(\"#text_\" + node.id);\n                      //var text = $(\"#t_\" + node.id);\n                      //debugger;\n                      circle.css(\"background-color\", target.getAlertColor(node.status));\n                      //text.css(\"color\", target.getAlertColor(node.status));\n                      t.css(\"color\", target.getAlertColor(node.status));\n                      //t.text(target.getAlertWord(node.status));\n                  })\n                    //text.css(\"line-height\", \"20px\");\n                    return wrap;\n                  }\n                },\n              ]\n            })\n          })\n        }\n      });\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px"
                                                            },
                                                            "url": "images/map/map1.png"
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "url": "images/map/map1.png",
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 5
                                              }
                                            ],
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "background-color": "",
                                      "margin": "5px",
                                      "padding": "10px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "label": "控制板1",
                                            "type": "block",
                                            "source": "BLOCK",
                                            "style": {
                                              "background-color": "",
                                              "margin": "5px",
                                              "padding": "10px"
                                            },
                                            "advance": {
                                              "expression": {}
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "label": "文字",
                                                    "type": "text",
                                                    "source": "TEXT",
                                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                    "data": {
                                                      "applied": false,
                                                      "multipleCi": false,
                                                      "multipleKpi": false,
                                                      "resource": [],
                                                      "modelType": 300,
                                                      "resfilltype": "parameter",
                                                      "series": {
                                                        "manual": "新建文字",
                                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                                      },
                                                      "modelDisable": true
                                                    },
                                                    "style": {
                                                      "margin": "auto",
                                                      "padding": "0",
                                                      "font-size": "16px",
                                                      "font-weight": "bold",
                                                      "text-align": "left",
                                                      "color": "rgb(255, 255, 255)"
                                                    },
                                                    "advance": {
                                                      "getfunction": "kpiDataService.getValueList",
                                                      "category": "ci",
                                                      "condition": [
                                                        "kpi",
                                                        "{object:kpiQueryModel}"
                                                      ],
                                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"报警通知\")\n        }\n    }\n}"
                                                    },
                                                    "parameters": {},
                                                    "echart": {},
                                                    "url": "images/map/map1.png"
                                                  },
                                                  {
                                                    "label": "控制板1",
                                                    "type": "block",
                                                    "source": "BLOCK",
                                                    "style": {
                                                      "padding": "5px",
                                                      "margin": "5px",
                                                      "border": "0",
                                                      "height": "225px",
                                                      "overflow-y": "scroll"
                                                    },
                                                    "advance": {
                                                      "expression": {}
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "col": 12,
                                                        "children": [
                                                          {
                                                            "label": "高级列表",
                                                            "type": "dataTableAdvance",
                                                            "source": "DATATABLEADVANCE",
                                                            "parameters": {
                                                              "col": 1,
                                                              "pageSize": 5,
                                                              "listbottom": "none"
                                                            },
                                                            "advance": {
                                                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var projectModel;\n      var projectAttr;\n      var render = function(){\n        var projectId = target.getParameter(\"id\");\n        target.getResourceById(projectId, function(resource){\n          target.queryFromDb({\n            domain : resource.domains\n          }, function(alerts){\n            var alertsDevice = [];\n            for(var i = 0; i < alerts.length; i++ ) {\n              if(alerts[i].state == 0 || alerts[i].state == 5 || alerts[i].state == 10) {\n                  if(alerts[i].severity != -1) {\n                      alertsDevice.push(alerts[i]) \n                  }\n               \n              }\n            }\n            target.setValue(\"device/alerts\",alertsDevice.map(function(alert){\n              alert.label = alert.devName + \"(\" + alert.message + \")\";\n              alert.valueStr = target.getAlertWord(alert.severity);\n              alert.status = alert.severity;\n              return alert;\n            }));\n            target.render({\n              data : alertsDevice,\n              format : [\n                {\n                  \"name\": \"设备名称\",\n                  \"value\": \"devName\",\n                  \"type\": \"text\",\n                  //\"width\" : 300\n                },  {\n                \"name\": \"报警来源\",\n                 \"value\": \"appName\",\n                \"type\": \"text\",\n                //\"width\" : 300\n                \"format\":function (elem) {\n                    if(elem == 1){\n                    return \"在线预警\";\n                    }else if(elem == 2){\n                      return \"智能诊断\";\n                    }else if(elem == 3){\n                    return \"大数据分析\";\n                    } else {\n                    return \"离线诊断\";\n                    }\n              }\n            }, {\n                  \"name\": \"报警消息\",\n                  \"value\": \"message\",\n                  \"type\": \"text\",\n                  \"style\":{\n                     \"white-space\" : \"pre-wrap\"\n                  }\n                },{\n                  \"name\": \"报警级别\",\n                  \"type\":\"priority\",\n                  \"value\" : \"severity\",\n                  \"format\":function (elem) {\n                    console.log(elem);\n                    if(elem == -1){\n                      return \"正常\";\n                    } else if(elem == 2){\n                      return \"注意\";\n                    }else if(elem == 3){\n                      return \"异常\";\n                    }else if(elem == 4){\n                      return \"警告\";\n                    }\n                  }\n                },{\n                  \"name\": \"报警时间\",\n                  \"value\": \"firstArisingTime\",\n                  \"type\": \"date\"\n                },{\n                  \"name\": \"报警状态\",\n                  \"value\": \"state\",\n                  \"type\": \"text\",\n                  \"format\":function (elem) {\n                    if(elem == 0){\n                      return \"新产生\";\n                    } else if(elem == 5){\n                      return \"已确认\";\n                    }else if(elem == 10){\n                      return \"待处理\";\n                    }else if(elem == 20){\n                      return \"已解决\";\n                    }else if(elem == 30){\n                      return \"已忽略\";\n                    }\n                  }\n                },{\n                  \"name\":\"操作\",\n                  \"type\" : \"buttonGroup\",\n                  \"content\" : [{\n                    type : \"button\",\n                    label : \"过程跟踪\",\n                    icon : \"glyphicon glyphicon-cog\",\n                    btnclass : \"btn btn-primary\",\n                    on : {\n                      click : function(elem){\n                       event.target.postService(\"ticketTaskService\", \"getDealTicketListByPage\", [{\"attrs\": {\"origId\": elem.row.alertId}},\n                          {\"start\": 0, \"length\": 10}], function (dt) {\n                          if (dt.data.data.length>0) {\n                              target.navigateToTracker(dt.data.data[0].ticketNo);\n                          }else{\n                            target.growl(\"告警未转工单\",\"warning\")\n                          }\n                        })\n                      }\n                    }\n                  }]\n                }\n              ]\n            });\n          })\n        })\n      }\n      target.getEditorStatus(\"PROJECTMODEL\", function(pmodel){\n        var dt = pmodel || {}\n        projectModel = dt.projectModel || [];\n        projectAttr = dt.projectAttr || {};\n        render();\n      });\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px"
                                                            },
                                                            "url": "images/map/map1.png"
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "parameters": {}
                                                  }
                                                ]
                                              }
                                            ],
                                            "url": "images/map/map1.png",
                                            "parameters": {}
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png",
                                    "parameters": {}
                                  }
                                ]
                              }
                            ],
                            "advance": {
                              "expression": {}
                            },
                            "url": "images/map/map1.png"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "url": "images/map/map1.png",
            "parameters": {}
          }
        ],
        "col": 12,
        "alertParams": {}
      },
      "id": "6",
      "$$hashKey": "object:1904"
    },
    {
      "label": "电机",
      "path": "motor",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "控制板1",
            "type": "block",
            "source": "BLOCK",
            "style": {
              "padding": "8px",
              "margin": "5px"
            },
            "advance": {
              "expression": {}
            },
            "children": [
              {
                "type": "column",
                "col": 12,
                "children": [
                  {
                    "type": "row",
                    "source": "ROW",
                    "parameters": {
                      "alignment": "bootstrap"
                    },
                    "style": {},
                    "children": [
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "数结构导航",
                            "type": "navitree",
                            "source": "NAVITREE",
                            "advance": {
                              "expression": ""
                            }
                          }
                        ],
                        "col": 8
                      },
                      {
                        "type": "column",
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var ctrlGroups = [\n       [{\n          type : \"clock\",\n          icon : \"glyphicon glyphicon-search\",\n          value : function(time){\n              return \"当前时间 ： \" + time\n          },\n          btnclass : \"btn btn-primary\",\n          class : \"col-md-12\",\n          style : {\n              \"float\" : \"right\",\n              \"font-weight\" : \"bold\"\n          }\n        }]\n      ];\n      event.target.render(ctrlGroups);\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "14px",
                              "font-weight": "bold"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png"
                          }
                        ],
                        "col": 4
                      }
                    ]
                  },
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "0px",
                      "margin": "0px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)",
                      "height": "calc(100vh - 130px)",
                      "overflow-y": "auto",
                      "overflow-x": "hidden"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控制板1",
                            "type": "block",
                            "source": "BLOCK",
                            "style": {
                              "padding": "0px",
                              "margin": "0px",
                              "border": "0",
                              "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                              "background-color": "rgba(250,250,250,0)"
                            },
                            "children": [
                              {
                                "type": "column",
                                "col": 12,
                                "children": [
                                  {
                                    "label": "控制板1",
                                    "type": "block",
                                    "source": "BLOCK",
                                    "style": {
                                      "padding": "5px",
                                      "margin": "5px"
                                    },
                                    "advance": {
                                      "expression": {}
                                    },
                                    "children": [
                                      {
                                        "type": "column",
                                        "col": 12,
                                        "children": [
                                          {
                                            "type": "row",
                                            "source": "ROW",
                                            "parameters": {
                                              "alignment": "bootstrap"
                                            },
                                            "style": {},
                                            "children": [
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控制板1",
                                                    "type": "block",
                                                    "source": "BLOCK",
                                                    "style": {
                                                      "padding": "5px",
                                                      "margin": "5px",
                                                      "border": "0px"
                                                    },
                                                    "advance": {
                                                      "expression": {}
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "col": 12,
                                                        "children": [
                                                          {
                                                            "label": "组态视图",
                                                            "type": "topo",
                                                            "source": "TOPO",
                                                            "advance": {
                                                              "variable": "",
                                                              "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter(\"id\");\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        var find = domaintree.find(function(node){\n          return node.id == id;\n        });\n        if(find){\n          var children = find.getChildren();\n          debugger;\n          var viewId = find.$attr(\"view/viewId\");\n          if(!viewId){\n              viewId = find.$attr(\"_view/viewId\");\n          }\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            var json = JSON.parse(content);\n            target.render(json);\n            target.on(\"$loadCiKpiComplete\", function(cells){\n                var position = {x:90,y:0};\n                 var is = target.createCurrentStatus(find.label, position, find.status);\n                find.$on(\"statusChanged\", function(nd){\n                     is.setAlarmStatus(find.status)\n                  });\n              for(var i in cells){\n                cells[i].attr(\"circle/opacity\", 0);\n                cells[i].attr(\"text/opacity\", 0);\n                cells[i].attr(\"rect/opacity\", 0);\n              }\n              var createAlarm = function(index, node){\n                var cell = cells[index] || {};\n                var position;\n                if(cell){\n                  position = cell.position();\n                } else {\n                  position = {\n                    x : Math.floor(100 + Math.random() * 300),\n                    y : Math.floor(100 + Math.random() * 200)\n                  }\n                }\n                target.createAlarm(node.label, function(ins){\n                  ins.setPos(position);\n                  ins.on(\"click\", function(event){\n                       target.createSystemPopupByLocalPath(\"page8\", {\n                         width : \"400px\",\n                         title: node.label,\n                        },node.id);\n                  })\n                });\n              };\n              for(var i in children){\n                createAlarm(i, children[i])\n              }\n            });\n          });\n        }\n      });\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "margin": "5px",
                                                              "font-size": "12px",
                                                              "background-repeat": "no-repeat"
                                                            },
                                                            "viewId": 469973748826064,
                                                            "parameters": {},
                                                            "url": "images/map/map1.png"
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "url": "images/map/map1.png"
                                                  }
                                                ],
                                                "col": 4
                                              },
                                              {
                                                "type": "column",
                                                "children": [
                                                  {
                                                    "label": "控制板1",
                                                    "type": "block",
                                                    "source": "BLOCK",
                                                    "style": {
                                                      "padding": "5px",
                                                      "margin": "5px",
                                                      "border": "0",
                                                      "border-left": "1px solid #25729D",
                                                      "height": "450px"
                                                    },
                                                    "advance": {
                                                      "expression": {}
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "column",
                                                        "col": 12,
                                                        "children": [
                                                          {
                                                            "label": "文字",
                                                            "type": "text",
                                                            "source": "TEXT",
                                                            "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                            "style": {
                                                              "margin": "5px",
                                                              "padding": "0",
                                                              "font-size": "15px",
                                                              "font-weight": "bold",
                                                              "color": "rgb(255, 255, 255)"
                                                            },
                                                            "advance": {
                                                              "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"电机电流趋势\")\n        }\n    }\n}"
                                                            },
                                                            "data": {
                                                              "modelType": 300,
                                                              "resfilltype": "parameter",
                                                              "modelDisable": true
                                                            },
                                                            "parameters": {}
                                                          },
                                                          {
                                                            "label": "高级视图",
                                                            "type": "advanceEchart",
                                                            "source": "ADVANCEECHART",
                                                            "parameters": {
                                                              "theme": "default"
                                                            },
                                                            "advance": {
                                                              "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var global = event.global;\n      var deviceId = target.getParameter('id');\n      var series = [];\n      var time = [];\n      var minDate;\n      var ins;\n      target.getDevicesByCondition({'resourceId':deviceId},function (returnData) {\n        console.log(\"returnData\",returnData)\n        var kpiCodes = [], kpis = [];\n        for(var i=0;i<returnData[0].physicalConfig.accessConfigs.length;i++){\n          kpiCodes.push(returnData[0].physicalConfig.accessConfigs[i].dataItemId);\n          kpis.push(returnData[0].physicalConfig.accessConfigs[i]);\n        };\n        var kpiQueryModel = {\n          \"statisticType\": \"\",\n          \"category\": \"time\",\n          \"isRealTimeData\": true,\n          \"nodeIds\": [deviceId],\n          \"kpiCodes\": kpiCodes,\n          \"queryInstances\":null,\n          \"startTime\": null,\n          \"endTime\": null,\n          //\"timePeriod\":3000000,\n          \"timePeriod\":120000,\n          \"timeRange\": \"\",\n          \"statisticType\": \"psiot\",\n          \"includeInstance\": true,\n          //\"condList\": []\n        }\n        var params = [\"kpi\",kpiQueryModel];\n        var render = function(series){\n          var option = {\n            // title: {\n            //   text: '电机电流趋势',\n            //   textStyle:{\n            //     color:\"white\"\n            //   }\n            // },\n            tooltip : {\n              trigger: 'axis',\n              axisPointer: {\n                label: {\n                  backgroundColor: '#6a7985'\n                }\n              },\n              formatter : function(params, b, c){\n                var str = \"\";\n                for(var i in params){\n                  var time = params[i].value[0];\n                  var val = params[i].value[1];\n                  var marker = params[i].marker;\n                  var seriesIndex = params[i].seriesIndex;\n                  var d = minDate.clone().addTimeStamp(time)\n                  if(kpis){\n                    str += marker + series[seriesIndex].name;\n                    // console.log('str',val)\n                    // debugger\n                    if(val == false  || val == true) {\n                        if(val == false) {\n                            val = '关'\n                        }else {\n                            val = '开'\n                        }\n                        str += \":\" + val + \"[\" + d.getDateString(\"MM/dd,hh:mm:ss\") + \"]<br>\";\n                    }else {\n                        str += \":\" + val + \"[\" + d.getDateString(\"MM/dd,hh:mm:ss\") + \"]<br>\";\n                    }\n                    \n                  };\n                }\n                return str;\n              }\n            },\n            legend: {\n              data:series.map(function(kpi){\n                return kpi.name;\n              })\n            },\n            grid: {\n              left: '5%',\n              right: '5%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: {\n              boundaryGap: false,\n              type: 'value',\n              axisLabel : {\n                formatter : function(params){\n                  var d = minDate.clone().addTimeStamp(params)\n                  //return d.getDateString(\"MM/dd,hh:mm:ss\");\n                  return d.getDateString(\"hh:mm:ss\");\n                }\n              }\n            },\n            yAxis : [\n              {\n                type : 'value'\n              }\n            ],\n            series : series\n          };\n          console.log(\"option\", option);\n          target.render(option);\n        }\n\n        //实时推送\n        target.postService(\"kpiDataFlexService\",\"getKpiValueList\",params,function(d){\n          var returnData = d.data;\n          //热输出辊道电机\n          if(returnData.length > 0){\n            minDate = returnData.reduce(function(a, b){\n              var dt = target.dateHandler(b.arisingTime)\n              if(a){\n                if(dt.before(a)){\n                  return dt;\n                } else {\n                  return a;\n                }\n              } else {\n                return dt\n              }\n            }, null);\n          };\n          var inx = 0;\n          var colors = ['#2b97fc', '#b76efc', '#7dc5e2', '#e98b74', '#eaeaea']\n          series = kpis.filter(function(kpi){\n            var rdata = returnData.filter(function(vdata){\n              var kpiCode = vdata.kpiCode;\n              //var instance = vdata.instance;\n              return kpi.dataItemId == kpiCode //&& kpi.instance == instance;\n            });\n            return rdata.length > 0;\n          }).map(function(kpi){\n            var rdata = returnData.filter(function(vdata){\n              var kpiCode = vdata.kpiCode;\n              //var instance = vdata.instance;\n              return kpi.dataItemId == kpiCode //&& kpi.instance == instance;\n            })\n            rdata.sort(function(a, b){\n              var dt1 = new Date(a.arisingTime);\n              var dt2 = new Date(b.arisingTime);\n              return dt1.getTime() - dt2.getTime();\n            });\n\n            var rs = {\n              name : kpi.kpiName,\n              dataItemId : kpi.dataItemId,\n              type : \"line\",\n              //stack: '数值',\n              data : rdata.map(function(elem){\n                var dt = new Date(elem.arisingTime);\n                var dh = target.dateHandler(dt);\n                var result = dh.minus(minDate);\n                return [result,elem.value]\n              }),\n              symbolSize : 0,\n              lineStyle:{\n                normal:{\n                  color : colors[inx]\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color : colors[inx],  // 会设置点和线的颜色，所以需要下面定制 line\n                  borderColor : colors[inx]  // 点边线的颜色\n                }\n              }\n            };\n            inx++;\n            return rs;\n          });\n          target.webSocket([deviceId],kpiCodes,function(data){\n            //var originalDate = target.dateHandler(time[0]);\n            //var date = target.dateHandler(data.arisingTime);\n            for(var i in series){\n              var time = series[i]['data'][0][0];\n              if(time > 20 * 60 * 1000){\n                series[i]['data'].shift();\n              }\n            };\n            var find = series.find(function(elem){\n              return elem.dataItemId == data.kpiCode;\n            });\n            if(find){\n              var dt = new Date(data.arisingTime);\n              var dh = target.dateHandler(dt);\n              var result = dh.minus(minDate);\n              find.data.push([result, data.value]);\n            };\n            render(series);\n          });\n          console.log(series);\n          render(series);\n        })\n      })\n    }\n  }\n}"
                                                            },
                                                            "style": {
                                                              "width": "100%",
                                                              "height": "400px"
                                                            },
                                                            "url": "images/map/map1.png"
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "parameters": {}
                                                  }
                                                ],
                                                "col": 8
                                              }
                                            ],
                                            "url": "images/map/map1.png"
                                          }
                                        ]
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  },
                                  {
                                    "type": "row",
                                    "source": "ROW",
                                    "parameters": {
                                      "alignment": "bootstrap"
                                    },
                                    "style": {},
                                    "children": [
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "控制板1",
                                            "type": "block",
                                            "source": "BLOCK",
                                            "style": {
                                              "margin": "5px"
                                            },
                                            "advance": {
                                              "expression": {}
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "label": "文字",
                                                    "type": "text",
                                                    "source": "TEXT",
                                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                    "data": {
                                                      "applied": false,
                                                      "multipleCi": false,
                                                      "multipleKpi": false,
                                                      "resource": [],
                                                      "modelType": 300,
                                                      "resfilltype": "parameter",
                                                      "series": {
                                                        "manual": "新建文字",
                                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                                      },
                                                      "modelDisable": true
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "padding": "0",
                                                      "font-size": "14px",
                                                      "font-weight": "bold",
                                                      "line-height": "30px",
                                                      "text-align": "left",
                                                      "color": "rgb(238, 238, 238)"
                                                    },
                                                    "advance": {
                                                      "getfunction": "kpiDataService.getValueList",
                                                      "category": "ci",
                                                      "condition": [
                                                        "kpi",
                                                        "{object:kpiQueryModel}"
                                                      ],
                                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"报警通知\");\n        }\n    }\n}"
                                                    },
                                                    "parameters": {},
                                                    "url": "images/map/map1.png"
                                                  },
                                                  {
                                                    "label": "高级列表",
                                                    "type": "dataTableAdvance",
                                                    "source": "DATATABLEADVANCE",
                                                    "parameters": {
                                                      "col": 1,
                                                      "pageSize": 10,
                                                      "listbottom": "standard"
                                                    },
                                                    "advance": {
                                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var deviceId = target.getParameter('id')\n      var queryParams = {\n        \"domain\":\"\",\n        \"nodeType\":\"\",\n        \"pageSize\":1000,\n        \"severities\":\"1,2,3,4\",\n        \"states\":\"0,5,10,20\",\n        \"nodeIds\":deviceId\n      };\n      var queryParams4Page = {\n        \"start\": 0,\n        \"length\": \"\",\n        \"sort\": \"createTime\",\n        \"sortType\": \"desc\",\n        \"statCount\": true,\n        \"total\": 0\n      };\n      var params = [queryParams,queryParams4Page]\n      target.postService(\"alertQueryFlexService\",\"getAlertByPage\",params,function (returnData) {\n        var alertsDevice = [];\n        var alerts = returnData.data.data;\n        for(var i = 0; i < alerts.length; i++ ) {\n          if(alerts[i].state == 0 || alerts[i].state == 5 || alerts[i].state == 10) {\n            alertsDevice.push(alerts[i])\n          }\n        }\n        target.render({\n          data : alertsDevice,\n          on : {\n            rowClick : function(event){\n              //target.navigateTo('production', {});\n            }\n          },\n          format : [\n            //   {\n            //     \"name\": \"设备名称\",\n            //     \"value\": \"devName\",\n            //     \"type\": \"text\",\n            //     //\"width\" : 300\n            //   },\n            {\n              \"name\": \"报警来源\",\n              \"value\": \"appName\",\n              \"type\": \"text\",\n              \"format\":function (elem) {\n                if(elem == \"1\") {\n                  return \"采集系统\"\n                }else if(elem == \"2\") {\n                  return \"智能诊断\"\n                }else if(elem == \"3\") {\n                  return \"大数据分析\"\n                }else if(elem == \"4\") {\n                  return \"离线诊断\"\n                }\n              }\n            },\n            {\n              \"name\": \"报警消息\",\n              \"value\": \"message\",\n              \"type\": \"text\"\n            },{\n              \"name\": \"报警级别\",\n              \"type\":\"priority\",\n              \"value\" : \"severity\",\n              \"format\":function (elem) {\n                console.log(elem);\n                if(elem == -1){\n                  return \"正常\";\n                } else if(elem == 2){\n                  return \"注意\";\n                }else if(elem == 3){\n                  return \"异常\";\n                }else if(elem == 4){\n                  return \"警告\";\n                }\n              }\n            },{\n              \"name\": \"报警时间\",\n              \"value\": \"firstArisingTime\",\n              \"type\": \"date\"\n            },{\n              \"name\":\"操作\",\n              \"type\" : \"buttonGroup\",\n              \"content\" : [{\n                type : \"button\",\n                label : \"过程跟踪\",\n                icon : \"glyphicon glyphicon-cog\",\n                btnclass : \"btn btn-primary\",\n                on : {\n                  click : function(elem){\n                    event.target.postService(\"ticketTaskService\", \"getDealTicketListByPage\", [{\"attrs\": {\"origId\": elem.row.alertId}},\n                      {\"start\": 0, \"length\": 10}], function (dt) {\n                      if (dt.data.data.length>0) {\n                        target.navigateToTracker(dt.data.data[0].ticketNo);\n                      }else{\n                        target.growl(\"告警未转工单\",\"warning\")\n                      }\n                    })\n                  }\n                }\n              }]\n            }\n          ]\n        });\n      })\n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ]
                                              }
                                            ],
                                            "parameters": {}
                                          }
                                        ],
                                        "col": 7
                                      },
                                      {
                                        "type": "column",
                                        "children": [
                                          {
                                            "label": "控制板1",
                                            "type": "block",
                                            "source": "BLOCK",
                                            "style": {
                                              "margin": "5px"
                                            },
                                            "advance": {
                                              "expression": {}
                                            },
                                            "children": [
                                              {
                                                "type": "column",
                                                "col": 12,
                                                "children": [
                                                  {
                                                    "label": "文字",
                                                    "type": "text",
                                                    "source": "TEXT",
                                                    "help": "http://localhost/app-free-style/index.html#/help/index%7Ctext/%5B%220%22,%7B%7D%5D",
                                                    "data": {
                                                      "applied": false,
                                                      "multipleCi": false,
                                                      "multipleKpi": false,
                                                      "resource": [],
                                                      "modelType": 300,
                                                      "resfilltype": "parameter",
                                                      "series": {
                                                        "manual": "新建文字",
                                                        "bind": "(function (source){\n  var formatter=function(elem){\n    return elem.value\n   }\n  return source.ci.getSeries(formatter);\n})"
                                                      },
                                                      "modelDisable": true
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "padding": "0",
                                                      "font-size": "14px",
                                                      "font-weight": "bold",
                                                      "line-height": "30px",
                                                      "text-align": "left",
                                                      "color": "rgb(238, 238, 238)"
                                                    },
                                                    "advance": {
                                                      "getfunction": "kpiDataService.getValueList",
                                                      "category": "ci",
                                                      "condition": [
                                                        "kpi",
                                                        "{object:kpiQueryModel}"
                                                      ],
                                                      "expression": "expression = {\n    on : {\n        init : function(event){\n            var target = event.target;\n            target.setText(\"离线诊断\");\n        }\n    }\n}"
                                                    },
                                                    "parameters": {},
                                                    "url": "images/map/map1.png"
                                                  },
                                                  {
                                                    "label": "高级列表",
                                                    "type": "dataTableAdvance",
                                                    "source": "DATATABLEADVANCE",
                                                    "parameters": {
                                                      "col": 1,
                                                      "pageSize": 10,
                                                      "listbottom": "none"
                                                    },
                                                    "advance": {
                                                      "expression": "expression = {\n  \"theme\" : \"dark\",\n  \"on\" : {\n    \"init\" : function(event){\n      var target = event.target;\n      var id = target.getParameter('id')\n      \n      \n    target.getDomainAreaLineTree(function(domaintree){\n    var find = domaintree.find(function(node){\n        return node.id == id\n    });\n    if(find){\n        var deviceCode = find.externalDevId;\n        //console.log(find.externalDevId)\n        target.postService(\"deviceResumeUIService\",\"getDeviceOfflineReportListByCondition\",{devId:deviceCode},function(returnData){\n        target.render({\n        data : returnData.data,\n        on : {\n          rowClick : function(event){\n            //target.navigateTo('production', {});\n          }\n        },\n        format : [\n          {\n            \"name\": \"状态\",\n            \"value\": \"conclusion\",\n            \"type\": \"text\",\n            \"format\":function (elem) {\n                if(elem == '1') {\n                    return '正常'\n                }else if(elem == '2') {\n                    return '注意'\n                }else if(elem == '3') {\n                    return '异常'\n                }else if(elem == '4') {\n                    return '警告'\n                }\n            }\n          },{\n            \"name\": \"专业\",\n            \"value\": \"specialty\",\n            \"type\": \"text\",\n             \"format\":function (elem) {\n                if(elem == 'Z') {\n                    return '振动'\n                }else if(elem == 'N') {\n                    return '扭矩'\n                }else if(elem == 'D') {\n                    return '电机电流'\n                }else if(elem == 'Q') {\n                    return '清洁度监测'\n                }else if(elem == 'J') {\n                    return '绝缘油分析'\n                }else if(elem == 'M') {\n                    return '磨损分析'\n                }else if(elem == 'H') {\n                    return '红外热成像检测'\n                }else if(elem == 'K') {\n                    return '开关温度'\n                }else if(elem == 'W') {\n                    return '表面温度'\n                }else if(elem == 'P') {\n                    return '液压'\n                }else if(elem == 'Y') {\n                    return '油液'\n                }else {\n                    return '工艺指标'\n                }\n             }\n          },{\n            \"name\": \"报告编号\",\n            \"value\": \"rptNo\",\n            \"type\": \"text\"\n          },{\n            \"name\": \"时间\",\n            \"value\": \"rptDate\",\n            \"type\": \"date\"\n          }\n        ]\n      });\n         \n         \n         \n         \n         \n         \n     })\n        \n        \n\n      \n        }\n    })\n    \n\n     \n   \n    }\n  }\n}"
                                                    },
                                                    "style": {
                                                      "margin": "5px",
                                                      "font-size": "12px"
                                                    },
                                                    "url": "images/map/map1.png"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ],
                                        "col": 5
                                      }
                                    ],
                                    "url": "images/map/map1.png"
                                  }
                                ]
                              }
                            ],
                            "advance": {
                              "expression": {}
                            },
                            "url": "images/map/map1.png"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "url": "images/map/map1.png"
          }
        ],
        "col": 12
      },
      "id": "7",
      "$$hashKey": "object:2323"
    },
    {
      "label": "分析诊断",
      "path": "analysis",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "高级视图",
            "type": "advanceEchart",
            "source": "ADVANCEECHART",
            "advance": {
              "expression": "express = {\n  on: {\n    init: function (event) {\n      var target = event.target;\n      var global = event.global;\n      var color = \"#ffe400\";\n      var LENGTH = 50;\n      var pdata = target.getPopupData();\n      var resource = pdata.resource;\n      var sensor = pdata.sensor || {};\n      var kpiName;\n      var endTime = target.dateHandler();\n      var startTime = endTime.clone();\n      startTime.addDay(-2);\n      endTime = endTime.getUTCDateString();\n      startTime = startTime.getUTCDateString();\n      // 渲染echart图\n      var renderEchart = function (ci, kpi) {\n        // 扩展参数\n        target.showLoading();\n        target.hideNoData();\n        var extension = {\n          includeInstance : true,\n          queryInstances : sensor.instance,\n          isRealTimeData : false,\n          startTime:startTime,\n          endTime:endTime\n        };\n        var xAxis = [];\n        target.getKpiValueList(ci, kpi, 0, function (returnData) {\n          if(returnData.length > 0){\n            target.hideLoading();\n            var xAxisData = [];\n            target.setValue(\"global/sensor\", {\n              kpiId : returnData[0].kpiCode,\n              instance : returnData[0].instance\n            });\n            target.setValue(\"global/dt\", returnData[0]);\n            target.setValue(\"global/time\", target.dateHandler(returnData[0].arisingTime));\n            var seriesData = [];\n            var minDate = target.dateHandler(returnData[0].arisingTime).getTime();\n            if (returnData) {\n              for (var i in kpi) {\n                var item = {\n                  name: kpiName,\n                  data: returnData.map(function (elem) {\n                    var arisingTime = target.dateHandler(elem.arisingTime).getTime();\n                    return [arisingTime - minDate, elem.value];\n                  })\n                }\n                seriesData.push(item);\n              }\n            }\n            var option = {\n              title: {\n                textStyle: {color: \"#fff\"}\n              },\n              tooltip : {\n                trigger: 'axis',\n                axisPointer: {\n                  type: 'cross',\n                  label: {\n                    backgroundColor: '#6a7985'\n                  }\n                }\n              },\n              legend: {\n                data: seriesData.map(function (elem) {\n                  return elem.name;\n                })\n              },\n              grid : {\n                top : \"5%\",\n                height : \"70%\"\n              },\n              xAxis: {\n                boundaryGap: false,\n                type: 'value',\n                max : \"dataMax\",\n                axisLabel : {\n                    formatter : function(item){\n                        return target.dateHandler(minDate + item).getDateString(\"yy/MM/dd,hh:mm:ss\");\n                    }\n                }\n              },\n              yAxis: {\n                type: 'value'\n              },\n              toolbox: {\n                feature: {\n                  dataZoom: {},\n                  restore: {},\n                  saveAsImage:{\n                    type:\"png\",\n                    name:\"振动分析图\",\n                    backgroundColor:\"#0b2232\"\n                  },\n                },\n                iconStyle:{\n                  normal:{\n                    borderColor:\"#fff\"\n                  },\n                  emphasis:{\n                    borderColor:\"#e6e2e2\"\n                  }\n                }\n              },\n              series: seriesData.map(function (elem) {\n                elem.type = \"line\";\n                elem.symbolSize = 8;\n                elem.data = elem.data;\n                return elem;\n              })\n            };\n            var ins = target.render(option);\n          } else {\n            target.showNoData();\n          }\n        }, extension)\n      }\n      target.off(\"drawDiagnoseFeatureEchart1\");\n      target.on(\"drawDiagnoseFeatureEchart1\", function (condition) {\n        startTime = condition.dateRangeTime[0].getUTCDateString();\n        endTime = condition.dateRangeTime[1].getUTCDateString();\n        var ci = [resource.id];\n        var kpi = [];\n        if(condition.kpi.dataItemId){\n          kpi.push(condition.kpi.dataItemId);\n          kpiName = condition.kpi.label;\n        }\n        renderEchart(ci, kpi);\n      });\n      renderEchart([resource.id], [sensor.id]);\n    }\n  }\n};"
            },
            "style": {
              "margin": "auto",
              "width": "100%",
              "height": "500px"
            },
            "parameters": {
              "theme": "macarons"
            },
            "url": "images/map/map1.png"
          }
        ],
        "col": 12
      },
      "id": "8",
      "$$hashKey": "object:2714"
    },
    {
      "label": "分析诊断复制",
      "path": "page9",
      "layout": {
        "type": "column",
        "children": [
          {
            "label": "TAB标签",
            "type": "tab",
            "source": "TAB",
            "style": {
              "padding": "5px",
              "min-height": "100px"
            },
            "children": [
              {
                "tabName": "特征趋势",
                "tabId": "0",
                "default": true,
                "display": "block",
                "type": "tabItem",
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "10px",
                      "margin": "5px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "advance": {
                      "expression": {}
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n    width : \"auto\",\n  on: {\n    init: function (event) {\n      var target = event.target;\n      var global = event.global;\n      var dItem,kpi;\n      var pdata = target.getPopupData();\n      var resource = pdata.resource;\n      var sensor = pdata.sensor || {};\n      //var time = target.getValue(\"global/time\");\n      var subaccessConfigValues;\n      var startDate = target.dateHandler(\"2017/11/23,08:13:26\");\n      var endDate = target.dateHandler();\n      var dateRangeTime = [startDate, endDate];\n      var all = [];\n      debugger;\n      var success = function () {\n        if(!resource){\n          target.navigateTo(\"index\", {\n            main : 2,\n            sub : 0\n          },\"self\");\n        };\n        var ci = [resource.id]; // 设备 526443915616079\n        var modelId = [resource.modelId] // 获取modelId\n        target.getKpiTypeByFilter({\n          hasSingnal : true\n        }, function(kpis){\n            var CONDITIONA = function(value){\n                console.log(\"dItem1\",dItem, sensor);\n              return value.instance == dItem.name && kpis.some(function(elem){\n                  return elem.id == value.dataItemId;\n                });\n            };\n            var CONDITIONB = function(value){\n              return value.instance == dItem.name;\n            };\n          var accessConfigValues = resource.physicalConfig.accessConfigs;\n          condition = CONDITIONA;\n          target.getAttrsByModelId(modelId, function (attrs) {\n            var MeasurePointLocate = attrs.find(function (elem) {\n                return elem.name == \"MeasurePointLocate\";\n              }) || {};\n            var triggerEvent = function () {\n              debugger;\n              target.trigger(\"drawDiagnoseFeatureEchart1\", {\n                ins: dItem,\n                kpi: kpi,\n                dateRangeTime:dateRangeTime\n              })\n            }\n            // 设备的属性表达式\n            var sourceValue = eval(MeasurePointLocate.sourceValue)|| \"\";\n            var sourceValueArr = [];\n            for (var i in sourceValue) {\n              for (var j in sourceValue[i]) {\n                for(var k in sourceValue[i][j]){\n                  sourceValueArr.push(sourceValue[i][j][k])\n                }\n              }\n            };\n            // 默认第一个选中\n            dItem = sourceValueArr.find(function(elem){\n                if(sensor) {\n                    return sensor.instance == elem.name;\n                } else {\n                    return false;\n                }\n              }) || sourceValueArr[0];\n              debugger;\n            subaccessConfigValues = accessConfigValues.filter(condition)\n            kpi = subaccessConfigValues.find(function(elem){\n              return elem.dataItemId == sensor.kpiId;\n            }) || subaccessConfigValues[0];\n            kpi = kpi || {};\n            triggerEvent();\n            var render = function () {\n              var ctrlGroups = [\n                [{\n                  value : startDate,\n                  type: \"dateTimePicker\",\n                  style : {\n                      width : \"200px\"\n                  },\n                  on: {\n                    change: function (elem) {\n                      startDate = elem.value;\n                      triggerEvent();\n                    }\n                  },\n                }, {\n                  type: \"label\",\n                  value: \"至\",\n                  style: {\n                    textAlign: \"center\",\n                     width : \"30px\"\n                  }\n                },{\n                  value : endDate,\n                  type: \"dateTimePicker\",\n                  style : {\n                      width : \"200px\"\n                  },\n                  on: {\n                    change: function (elem) {\n                      endDate = elem.value;\n                      triggerEvent();\n                    }\n                  },\n                }/**, {\n                  type: \"button\",\n                  class: \"col-md-1\",\n                  btnclass: \"btn btn-primary\",\n                  value: \"信号分析\",\n                  btnStyle: {\n                    width: \"100%\",\n                  },\n                  on: {\n                    click: function (elem) {\n                        \n                    }\n                  }\n                }*/]\n              ];\n              target.render(ctrlGroups);\n            };\n            render();\n          })\n        })\n      }\n      if(resource){\n        success();\n      };\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "url": "images/map/map1.png",
                            "parameters": {}
                          }
                        ]
                      }
                    ],
                    "url": "images/map/map1.png"
                  },
                  {
                    "label": "高级视图",
                    "type": "advanceEchart",
                    "source": "ADVANCEECHART",
                    "advance": {
                      "expression": "express = {\n  on: {\n    init: function (event) {\n      var target = event.target;\n      var global = event.global;\n      var color = \"#ffe400\";\n      var LENGTH = 50;\n      var pdata = target.getPopupData();\n      var resource = pdata.resource;\n      var sensor = pdata.sensor || {};\n      var kpiName;\n      var endTime = target.dateHandler().getUTCDateString();\n      var startTime = target.dateHandler(\"2017/11/23,08:13:26\").getUTCDateString();\n      // 渲染echart图\n      debugger;\n      var renderEchart = function (ci, kpi) {\n        // 扩展参数\n        debugger;\n        target.showLoading();\n        target.hideNoData();\n        var extension = {\n          hasSingnal : true,\n          isRealTimeData : false,\n          startTime:startTime,\n          endTime:endTime\n        };\n        var xAxis = [];\n        target.getKpiValueList(ci, kpi, 0, function (returnData) {\n          debugger;\n          if(returnData.length > 0){\n            target.hideLoading();\n            var xAxisData = [];\n            target.setValue(\"global/sensor\", {\n              kpiId : returnData[0].kpiCode,\n              instance : returnData[0].instance\n            });\n            target.setValue(\"global/dt\", returnData[0]);\n            target.setValue(\"global/time\", target.dateHandler(returnData[0].arisingTime));\n            returnData.forEach(function (ele) {\n              xAxisData.push(target.dateHandler(ele.arisingTime).getDateString(\"yy/MM/dd,hh:mm:ss\"));\n            });\n            var seriesData = []\n            if (returnData) {\n              for (var i in kpi) {\n                var item = {\n                  name: kpiName,\n                  data: returnData.map(function (elem) {\n                    return elem.value;\n                  })\n                }\n                seriesData.push(item);\n              }\n            }\n            var option = {\n              title: {\n                textStyle: {color: \"#fff\"}\n              },\n              tooltip: {\n                triggerOn: 'none',\n                position: function (pt, param) {\n                  var dataIndex = param[0].dataIndex;\n                  var dt = returnData[dataIndex];\n                  target.setValue(\"global/sensor\", {\n                    kpiId : dt.kpiCode,\n                    instance : dt.instance\n                  });\n                  target.setValue(\"global/dt\", dt);\n                  target.setValue(\"global/time\", target.dateHandler(dt.arisingTime));\n                }\n              },\n              legend: {\n                data: seriesData.map(function (elem) {\n                  return elem.name;\n                })\n              },\n              grid : {\n                top : \"5%\",\n                height : \"70%\"\n              },\n              xAxis: {\n                boundaryGap: false,\n                type: 'category',\n                data: xAxisData,\n                axisPointer: {\n                  value: xAxisData[0],\n                  snap: false,\n                  lineStyle: {\n                    color: '#126296',\n                    opacity: 0.5,\n                    width: 2\n                  },\n                  label: {\n                    show: true,\n                    backgroundColor: '#126296'\n                  },\n                  handle: {\n                    shadowBlur : 0,\n                    shadowColor : \"#fff\",\n                    show: true,\n                    color: '#126296'\n                  }\n                },\n              },\n              yAxis: {\n                type: 'value'\n              },\n              toolbox: {\n                      feature: {\n                          dataZoom: {},\n                          restore: {},\n                          saveAsImage:{\n                              type:\"png\",\n                              name:\"分析诊断图\",\n                              backgroundColor:\"#0b2232\"\n                          },\n                      },\n                      iconStyle:{\n                          normal:{\n                              borderColor:\"#fff\"\n                          },\n                          emphasis:{\n                              borderColor:\"#e6e2e2\"\n                          }\n                      }\n              },\n              dataZoom: [{\n                show: false,\n                realtime: true,\n                start: 0,\n                end: 10,\n              }],\n              series: seriesData.map(function (elem) {\n                elem.type = \"line\";\n                elem.symbolSize = 8;\n                elem.data = elem.data;\n                return elem;\n              })\n            };\n            var ins = target.render(option);\n          } else {\n            target.showNoData();\n          }\n        }, extension)\n      }\n      target.off(\"drawDiagnoseFeatureEchart1\");\n      target.on(\"drawDiagnoseFeatureEchart1\", function (condition) {\n        startTime = condition.dateRangeTime[0].getUTCDateString();\n        endTime = condition.dateRangeTime[1].getUTCDateString();\n        var ci = [resource.id];\n        var kpi = [];\n        if(condition.kpi.dataItemId){\n          kpi.push(condition.kpi.dataItemId);\n          kpiName = condition.kpi.label;\n        }\n        renderEchart(ci, kpi);\n      });\n      renderEchart([resource.id], [sensor.id]);\n    }\n  }\n};"
                    },
                    "style": {
                      "margin": "auto",
                      "width": "100%",
                      "height": "500px"
                    },
                    "parameters": {
                      "theme": "macarons"
                    },
                    "url": "images/map/map1.png"
                  }
                ]
              },
              {
                "tabName": "时域分析",
                "tabId": "1",
                "type": "tabItem",
                "display": "none",
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "10px",
                      "margin": "5px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n  width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      target.setValue(\"type\", 0);\n      target.setValue(\"x0\", undefined);\n      target.setValue(\"x1\", undefined);\n      var render = function(){\n          var x0 = target.getValue(\"x0\") || 0;\n          var y0 = target.getValue(\"y0\") || 0;\n          var x1 = target.getValue(\"x1\") || 0;\n          var y1 = target.getValue(\"y1\") || 0;\n          var ctrlGroups = [\n           [{\n               type : \"jquery\",\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"background-color\", \"blue\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"width\" : \"10px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : parseFloat(x0).toFixed(4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : parseFloat(y0).toFixed(4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n               type : \"jquery\",\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"margin-left\", \"50px\");\n                   div.css(\"background-color\", \"red\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : parseFloat(x1).toFixed(4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : parseFloat(y1).toFixed(4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"△X\",\n              style : {\n                  \"margin-left\" : \"50px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : (x1-x0).toFixed(4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"△Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : (y1-y0).toFixed(4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\",\n                  \"margin-right\" : \"50px\"\n              }\n            }]\n          ];\n          target.render(ctrlGroups);\n      }\n      target.on(\"handleChange\", function(){\n          render();\n      })\n      render();\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "parameters": {}
                          },
                          {
                            "label": "高级视图",
                            "type": "advanceEchart",
                            "source": "ADVANCEECHART",
                            "advance": {
                              "expression": "express = {\n  on: {\n    init: function (event) {\n      var target = event.target;\n      var global = event.global;\n      var pdata = target.getPopupData();\n      var resource = pdata.resource;\n      var sensor = pdata.sensor || {};\n      var ci = [resource.id];\n      var kpi = [sensor.id];\n      var time = target.getValue(\"global/time\");\n      var renderROWEchart = function (ci, kpi, time) {\n          time = time || target.dateHandler();\n        var params = {\n            time:0,\n            kpiCodes:kpi,\n            isRealTimeData:false,\n            nodeIds:ci,\n            startTime:time.getUTCDateString(),\n            endTime:time.getUTCDateString(),\n            transformerType:\"ROW\",\n        }\n        target.showLoading();\n        target.hideNoData();\n         event.target.postService(\"kpiDataFlexService\", \"getKpiValueList\", [\"kpi\",params], function(returnData){\n             target.hideLoading();\n             debugger;\n          if (returnData.data.length > 0) {\n            var data = eval(returnData.data[0].value);\n            var dataList = data[0];\n            var valueList = data[1];\n            //console.log(valueList[0], valueList[180])\n            target.setValue(\"x0\", dataList[0]);\n            target.setValue(\"y0\", valueList[0]);\n            target.setValue(\"x1\", dataList[180]);\n            target.setValue(\"y1\", valueList[180]);\n            target.trigger(\"handleChange\");\n            var render = function (init, sub) {\n              var x0 = target.getValue(\"x0\") || 0;\n              var x1 = target.getValue(\"x1\") || 180;\n              var markLine = undefined;\n              var markPoint = undefined;\n              var option = {\n                grid: [{\n                  \"top\": \"10%\",\n                  \"width\": \"90%\",\n                  \"left\": \"5%\",\n                  \"height\": \"65%\"\n                }, {\n                  \"top\": \"10%\",\n                  \"width\": \"90%\",\n                  \"left\": \"5%\",\n                  \"height\": \"65%\"\n                }],\n                tooltip: {\n                  \"alwaysShowContent\": true,\n                  triggerOn: 'none'\n                },\n                xAxis: [{\n                  data: dataList,\n                  axisPointer: {\n                    label: {\n                      show: true,\n                      formatter: function (val) {\n                        if (val.seriesData[0]) {\n                          target.setValue(\"x0\", val.value);\n                          target.setValue(\"y0\", val.seriesData[0].data);\n                          target.trigger(\"handleChange\");\n                          if (type == 1) {\n                            if (init == false) {\n                              render();\n                            };\n                            init = false;\n                          };\n                        }\n                        return target.toFix(val.value, 4);\n                      }\n                    },\n                    lineStyle: {\n                      color: \"#2285d3\",\n                      width: 2\n                    },\n                    handle: {\n                      show: true,\n                      size: 30,\n                      margin: 40,\n                    },\n                    \"value\": x0,\n                    snap: true,\n                  }\n                }, {\n                  data: dataList,\n                  axisPointer: {\n                    label: {\n                      formatter: function (val) {\n                        if (val.seriesData[0]) {\n                          target.setValue(\"x1\", val.value)\n                          target.setValue(\"y1\", val.seriesData[0].data);\n                          target.trigger(\"handleChange\");\n                        }\n                        return target.toFix(val.value, 4);\n                      }\n                    },\n                    lineStyle: {\n                      color: \"#ff3a3a\",\n                      width: 2\n                    },\n                    handle: {\n                      show: true,\n                      size: 30,\n                      margin: 40,\n\n                    },\n                    \"value\": 180,\n                    snap: true,\n                  },\n                  gridIndex: 1\n                }],\n                yAxis: [{\n                  splitLine: {show: true}\n\n                }, {\n                  splitLine: {show: false},\n                  gridIndex: 1\n                }],\n                dataZoom: [\n                  {\n                    show: true,\n                    realtime: true,\n                    start: 0,\n                    end: 10,\n                    xAxisIndex: [0, 1]\n                  }\n                ],\n                series: [{\n                  type: 'line',\n                  showSymbol: false,\n                  data: valueList,\n                  markLine: markLine,\n                  markPoint: markPoint,\n                  xAxisIndex: 1,\n                  yAxisIndex: 1\n                }, {\n                  type: 'line',\n                  showSymbol: false,\n                  lineStyle: {\n                    normal: {\n                      opacity: 0\n                    }\n                  },\n                  data: valueList\n                }]\n              };\n              target.render(option);\n            };\n            render();\n            target.on(\"renderChart\", function () {\n              render(undefined, \"renderChart\");\n            })\n          } else {\n              target.showNoData();\n          }\n         });\n      };\n      renderROWEchart(ci, kpi, time);\n    }\n  }\n}\n"
                            },
                            "style": {
                              "margin": "auto",
                              "width": "100%",
                              "height": "500px"
                            },
                            "url": "images/map/map1.png",
                            "parameters": {
                              "theme": "dark"
                            }
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": {}
                    },
                    "url": "images/map/map1.png"
                  }
                ]
              },
              {
                "tabName": "频域分析",
                "tabId": "2",
                "type": "tabItem",
                "display": "none",
                "children": [
                  {
                    "label": "控制板1",
                    "type": "block",
                    "source": "BLOCK",
                    "style": {
                      "padding": "10px",
                      "margin": "5px",
                      "border": "0",
                      "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                      "background-color": "rgba(250,250,250,0)"
                    },
                    "children": [
                      {
                        "type": "column",
                        "col": 12,
                        "children": [
                          {
                            "label": "控件组",
                            "type": "ctrlgroup",
                            "source": "CTRLGROUP",
                            "advance": {
                              "expression": "expression = {\n    width : \"auto\",\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      target.setValue(\"type\", 0);\n      target.setValue(\"x0\", undefined);\n      target.setValue(\"x1\", undefined);\n      var render = function(){\n          var x0 = target.getValue(\"x0\") || 0;\n          var y0 = target.getValue(\"y0\") || 0;\n          var x1 = target.getValue(\"x1\") || 0;\n          var y1 = target.getValue(\"y1\") || 0;\n          var type = target.getValue(\"type\") || 0;\n          var feature = target.getValue(\"type\") || 0;\n          var ctrlGroups = [\n           [{\n               type : \"jquery\",\n               style : {\n                  \"width\" : \"30px\"\n              },\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"background-color\", \"blue\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"width\" : \"10px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : target.toFix(x0, 4),\n              style : {\n                  \"width\" : \"60px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : target.toFix(y0, 4),\n              style : {\n                  \"width\" : \"60px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n               type : \"jquery\",\n               style : {\n                  \"width\" : \"30px\"\n              },\n               render : function(){\n                   var div = $(\"<div></div>\");\n                   div.width(25);\n                   div.height(10);\n                   div.css(\"background-color\", \"red\");\n                   return div;\n               }\n           },{\n              type : \"label\",\n              value : \"X\",\n              style : {\n                  \"width\" : \"10px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : target.toFix(x1, 4) || \"0.0000\",\n              style : {\n                  \"width\" : \"50px\",\n                  \"padding\" : \"3px 10px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"Y\",\n              style : {\n                  \"width\" : \"10px\",\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : target.toFix(y1, 4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"△X\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : target.toFix(x1-x0, 4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\"\n              }\n            },{\n              type : \"label\",\n              value : \"△Y\",\n              style : {\n                  \"padding\" : \"3px\"\n              }\n            },{\n              type : \"label\",\n              value : target.toFix(y1-y0, 4),\n              style : {\n                  \"width\" : \"50px\",\n                  \"background-color\" : \"rgba(0,0,0,.1)\",\n                  \"margin-right\" : \"50px\"\n              }\n            },{\n              type : \"buttonGroup\",\n              style : {\n                  \"width\" : \"250px\"\n              },\n              content : [/**{\n                type : \"button\",\n                value : \"显示谱峰\",\n                icon : \"glyphicon glyphicon-indent-right\",\n                btnclass : type == 3 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 3){\n                          target.setValue(\"type\", 3);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              },*/{\n                type : \"button\",\n                value : \"倍频\",\n                icon : \"glyphicon glyphicon-indent-right\",\n                btnclass : type == 1 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 1){\n                          target.setValue(\"type\", 1);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              },{\n                type : \"button\",\n                value : \"边带\" + ((type == 2) ? \"(\" + target.toFix(x1-x0, 4) + \")\" : \"\"),\n                icon : \"glyphicon glyphicon-list\",\n                btnclass : type == 2 ? \"btn btn-primary\" : \"btn btn-default\",\n                on : {\n                  click : function(elem){\n                      if(target.getValue(\"type\") != 2){\n                          target.setValue(\"type\", 2);\n                      } else {\n                          target.setValue(\"type\", 0);\n                      };\n                      target.trigger(\"renderChart\");\n                      render();\n                  }\n                }\n              }]\n            }]\n          ];\n          target.render(ctrlGroups);\n      }\n      target.on(\"handleChange\", function(){\n          render();\n      })\n      render();\n    }\n  }\n}"
                            },
                            "style": {
                              "margin": "5px",
                              "font-size": "12px"
                            },
                            "help": "../pdf/ctrlgroup.pdf",
                            "parameters": {}
                          },
                          {
                            "label": "高级视图",
                            "type": "advanceEchart",
                            "source": "ADVANCEECHART",
                            "advance": {
                              "expression": "express = {\n  on: {\n    init: function (event) {\n      var target = event.target;\n      var global = event.global;\n      var color = \"#ff3a3a\";\n      var kpi;\n      var LENGTH = 50;\n      var pdata = target.getPopupData();\n      var resource = pdata.resource;\n      var sensor = pdata.sensor || {};\n      var ci = [resource.id];\n      var kpi = [sensor.id];\n      var time = target.getValue(\"global/time\");\n      var renderFFTEchart = function (ci, kpi, time) {\n        time = time || target.dateHandler();\n        var params = {\n          time:0,\n          kpiCodes:kpi,\n          isRealTimeData:false,\n          nodeIds:ci,\n          startTime:time.getUTCDateString(),\n          endTime:time.getUTCDateString(),\n          transformerType:\"FFT\"\n        }\n        target.showLoading();\n        target.hideNoData();\n        var x0_inx = 0;\n        var x1_inx = 180;\n        event.target.postService(\"kpiDataFlexService\", \"getKpiValueList\", [\"kpi\",params], function(returnData){\n          target.hideLoading();\n          if (returnData.data.length > 0) {\n            var data = eval(returnData.data[0].value);\n            var dataList = data[0];\n            var valueList = data[1];\n            var render = function (init, sub) {\n              var type = target.getValue(\"type\") || 0;\n              var x0 = dataList[x0_inx];\n              var x1 = dataList[x1_inx];\n              if (type == 0) {\n                var markLine = undefined;\n                var markPoint = undefined;\n              } else if (type == 1) {\n                var markLine = {\n                  animation: false,\n                  symbol: 'none',\n                  silent: false,\n                  lineStyle: {\n                    normal: {\n                      width: 1,\n                      color: \"#2285d3\",\n                      type: 'solid'\n                    }\n                  },\n                  label: {\n                    normal: {\n                      show: true,\n                      position: 'end',\n                      formatter: function (elem) {\n                        return target.toFix(elem.value, 1) + \"Hz\";\n                      }\n                    }\n                  },\n                  data: (function () {\n                    var rs = [];\n                    for (i = 0; i < 10; i++) {\n                      var item = {\n                        xAxis: dataList[x0_inx * (i + 1)] + ''\n                      };\n                      rs.push(item)\n                    };\n                    return rs;\n                  })()\n                }\n                var markPoint = {\n                  symbol: \"circle\",\n                  symbolSize: 8,\n                  animation: false,\n                  silent: false,\n                  label: {\n                    normal: {\n                      show: false\n                    }\n                  },\n                  itemStyle: {\n                    normal: {\n                      color: \"#fff\",\n                      borderColor: \"#2285d3\"\n                    }\n                  },\n                  data: (function () {\n                    var rs = [];\n                    for (i = 0; i < 10; i++) {\n                      var yData = data[x0_inx * (i + 2)];\n                      if (yData) {\n                        var item = {\n                          xAxis: x0_inx * (i + 2) + '',\n                          yAxis: yData[1]\n                        };\n                        rs.push(item)\n                      }\n                    }\n                    return rs;\n                  })()\n                }\n              } else if (type == 2) {\n                var markLine = {\n                  animation: false,\n                  symbol: 'none',\n                  silent: false,\n                  lineStyle: {\n                    normal: {\n                      color: \"#ff3a3a\",\n                      type: 'solid'\n                    }\n                  },\n                  label: {\n                    normal: {\n                      show: true,\n                      position: 'end',\n                      formatter: function (elem) {\n                        console.log(elem);\n                        var inx = elem.value;\n                        return target.toFix(dataList[inx], 1) + \"Hz\";\n                      }\n                    }\n                  },\n                  data: (function () {\n                    var rs = [];\n                    for (var i = -5; i < 6; i++) {\n                      var d = x0_inx + i * (x1_inx - x0_inx);\n                      if(d){\n                        rs.push({\n                          xAxis: d\n                        })\n                      }\n                    };\n                    return rs;\n                  })()\n                };\n                var markPoint = {\n                  symbol: \"circle\",\n                  symbolSize: 8,\n                  animation: false,\n                  silent: false,\n                  label: {\n                    normal: {\n                      show: false\n                    }\n                  },\n                  itemStyle: {\n                    normal: {\n                      color: \"#fff\",\n                      borderColor: \"#ff3a3a\"\n                    }\n                  },\n                  data: (function () {\n                    var rs = [];\n                    for (var i = -5; i < 6; i++) {\n                      rs.push({\n                        xAxis: x0_inx + i * (x1_inx - x0_inx),\n                        yAxis: valueList[x0_inx + i * (x1_inx - x0_inx)]\n                      })\n                    }\n                    ;\n                    return rs;\n                  })()\n                }\n              };\n              var option = {\n                grid: [{\n                  \"top\": \"10%\",\n                  \"width\": \"90%\",\n                  \"left\": \"5%\",\n                  \"height\": \"65%\"\n                }, {\n                  \"top\": \"10%\",\n                  \"width\": \"90%\",\n                  \"left\": \"5%\",\n                  \"height\": \"65%\"\n                }],\n                tooltip: {\n                  \"alwaysShowContent\": true,\n                  triggerOn: 'none'\n                },\n                xAxis: [{\n                  data: dataList,\n                  axisPointer: {\n                    show: true,\n                    label : {\n                      formatter: function (val) {\n                        if (val.seriesData[0]) {\n                          x0_inx = val.seriesData[0].dataIndex;\n                          target.setValue(\"x0\", val.value);\n                          target.setValue(\"y0\", val.seriesData[0].data);\n                          target.trigger(\"handleChange\");\n                          //console.log(\"a--init\", init);\n                          if (type == 1 || type == 2) {\n                            if (init == false) {\n                              render();\n                            };\n                            init = false;\n                          };\n                        }\n                        return target.toFix(val.value, 4)\n                      }\n                    },\n                    lineStyle: {\n                      color: \"#2285d3\",\n                      width: 2\n                    },\n                    handle: {\n                      show: true,\n                      size: 30,\n                      margin: 40,\n                    },\n                    \"value\": x0_inx,\n                    snap: false\n                  }\n                }, {\n                  data: dataList,\n                  axisPointer: {\n                    label: {\n                      formatter: function(val) {\n                        if (val.seriesData[0]) {\n                          x1_inx = val.seriesData[0].dataIndex;\n                          target.setValue(\"x1\", val.value)\n                          target.setValue(\"y1\", val.seriesData[0].data);\n                          target.trigger(\"handleChange\");\n                          if (type == 2) {\n                            if (init == false) {\n                              render();\n                            };\n                            init = false;\n                          };\n                        }\n                        return target.toFix(val.value, 4)\n                      }\n                    },\n                    lineStyle: {\n                      color: \"#ff3a3a\",\n                      width: 2\n                    },\n                    handle: {\n                      show: true,\n                      size: 30,\n                      margin: 40,\n\n                    },\n                    \"value\": x1_inx,\n                    snap: false,\n                  },\n                  gridIndex: 1\n                }],\n                yAxis: [{\n                  splitLine: {show: true}\n                }, {\n                  splitLine: {show: false},\n                  gridIndex: 1\n                }],\n                dataZoom: [\n                  {\n                    show: true,\n                    realtime: true,\n                    start: 0,\n                    end: 10,\n                    xAxisIndex: [0, 1]\n                  }\n                ],\n                series: [{\n                  type: 'line',\n                  showSymbol: false,\n                  data: valueList,\n                  markLine: markLine,\n                  markPoint: markPoint,\n                  xAxisIndex: 1,\n                  yAxisIndex: 1\n                }, {\n                  type: 'line',\n                  showSymbol: false,\n                  lineStyle: {\n                    normal: {\n                      opacity: 0\n                    }\n                  },\n                  data: valueList\n                }]\n              };\n              option\n              target.render(option);\n            };\n            render();\n            target.on(\"renderChart\", function () {\n              render(undefined, \"renderChart\");\n            })\n          } else {\n            target.showNoData();\n          }\n        })\n      };\n      renderFFTEchart(ci, kpi, time);\n    }\n  }\n};"
                            },
                            "style": {
                              "margin": "auto",
                              "width": "100%",
                              "height": "500px"
                            },
                            "url": "images/map/map1.png",
                            "parameters": {
                              "theme": "dark"
                            }
                          }
                        ]
                      }
                    ],
                    "advance": {
                      "expression": "{}"
                    },
                    "url": "images/map/map1.png"
                  }
                ]
              }
            ]
          }
        ],
        "col": 12
      },
      "id": "9",
      "$$hashKey": "object:943"
    }
  ],
  "setting": "{\n  \"showNavi\": false,\n  \"theme\": \"steel\",\n  \"style\": {\n    \"padding\": \"15px\"\n  }\n}"
}