{
  "layout": {
    "type": "column",
    "children": [
      {
        "type": "row",
        "source": "ROW",
        "parameters": {
          "alignment": "bootstrap"
        },
        "style": {},
        "children": [
          {
            "type": "column",
            "children": [
              {
                "label": "控制板1",
                "type": "block",
                "source": "BLOCK",
                "style": {
                  "padding": "5px",
                  "overflow": "hidden",
                  "background-color": "#04131e",
                  "border": "0",
                  "height": "calc( 100vh - 115px)"
                },
                "advance": {
                  "expression": "{}"
                },
                "children": [
                  {
                    "type": "column",
                    "col": 12,
                    "children": [
                      {
                        "label": "控件组",
                        "type": "ctrlgroup",
                        "source": "CTRLGROUP",
                        "advance": {
                          "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var inp = \"\"\n      var render = function(){\n          var ctrlGroups = [\n           [{\n               type : \"input\",\n               value : inp,\n               class : \"col-md-6\",\n               on : {\n                change : function(elem){\n                  inp = elem.value;\n                }\n              }\n           },{\n              type : \"button\",\n              value : \"搜索\",\n              icon : \"glyphicon glyphicon-search\",\n              btnclass : \"btn btn-primary\",\n              class : \"col-md-5\",\n              on : {\n                click : function(elem){\n                    console.log(\"===\", inp);\n                  target.trigger(\"searchtree\", inp);\n                }\n              }\n            }]\n          ];\n          event.target.render(ctrlGroups);\n      }\n      render();\n    }\n  }\n}"
                        },
                        "style": {
                          "margin": "5px",
                          "font-size": "12px"
                        },
                        "help": "../pdf/ctrlgroup.pdf"
                      },
                      {
                        "label": "控制板1",
                        "type": "block",
                        "source": "BLOCK",
                        "style": {
                          "padding": "0px",
                          "margin": "0px",
                          "border": "0",
                          "box-shadow": "0px 0px 0px 0px rgba(0,0,0,0)",
                          "background-color": "rgba(250,250,250,0)",
                          "height": "calc( 100vh - 135px)",
                          "overflow-y": "auto",
                          "overflow-x": "auto"
                        },
                        "advance": {
                          "expression": {}
                        },
                        "children": [
                          {
                            "type": "column",
                            "col": 12,
                            "children": [
                              {
                                "label": "数结构目录",
                                "type": "treemenu",
                                "source": "TREEMENU",
                                "advance": {
                                  "expression": "var expression = {\n  on : {\n    init : function(event){\n      var models = {}\n      var target = event.target;\n\n      target.getDomainAreaLineTree_alertStatus(function(domaintree){\n        domaintree.traverse(function(node){\n          node.showfold = true;\n          node.searchable = true;\n          node.folderStyle = 1;\n          node.showDescription = false;\n          node.triggerEvent = \"fold\";\n\n          if(node.resourceType == \"device\"){\n            node.label;\n            node.on = {\n              click : function(node){\n                if(node.setHighlight){\n                  node.setHighlight(true);\n                };\n                var str = node.label;\n                node.traverseParents(function(parent){\n                  if(parent.parent ){\n                    str = parent.label + \" > \" + str;\n                  };\n                });\n                target.setValue(\"global/resource\", node);\n\n                target.trigger(\"tree_resourceChange\", {\n                  resource : node\n                });\n                target.trigger(\"changeNavString\", str);\n                target.trigger(\"analysisShakeNavigateTo\", 0);\n              }\n            }\n          }\n        });\n        var treeDataMap = target.render(domaintree);\n        target.on(\"searchtree\", function(str){\n          treeDataMap.search(function(node){\n            return node.label.indexOf(str) != -1;\n          })\n        });\n        treeDataMap.hideRootNode();\n\n\n\n        var resource = target.getValue(\"global/resource\");\n        if(!resource){\n          treeDataMap.traverse(function(node){\n            if(!resource && node.category == \"Device\"){\n              resource = node;\n            }\n          });\n          target.setValue(\"global/resource\", resource);\n        };\n        var str = resource.label;\n        resource.traverseParents(function(parent){\n          if(parent.parent ){\n            str = parent.label + \" > \" + str;\n          };\n        });\n        target.trigger(\"pathChange\", \"device\");\n        target.trigger(\"tree_resourceChange\", {\n          resource : resource\n        });\n        target.setValue(\"global/navistring\", str);\n        target.trigger(\"changeNavString\", str);\n        treeDataMap.traverse(function(node){\n          if(node.level > 2){\n            var find = node.find(function(nd){\n              return nd.id == resource.id;\n            });\n            if(find){\n              find.setHighlight(true);\n              if(typeof node.open == \"function\"){\n                node.open();\n              };\n            } else {\n              if(typeof node.close == \"function\"){\n                node.close();\n              };\n            }\n          } else {\n            if(typeof node.open == \"function\"){\n              node.open();\n            };\n          }\n          if(node == resource){\n            if(node.setHighlight){\n              node.setHighlight(true);\n            };\n          }\n        });\n      })\n    }\n  }\n}"
                                },
                                "style": {
                                  "padding": "5px",
                                  "min-height": "100px"
                                },
                                "parameters": {}
                              }
                            ]
                          }
                        ],
                        "url": "images/map/map1.png"
                      }
                    ]
                  }
                ],
                "url": "images/map/map1.png"
              }
            ],
            "col": 2
          },
          {
            "type": "column",
            "children": [
              {
                "label": "控制板1",
                "type": "block",
                "source": "BLOCK",
                "style": {
                  "padding": "0",
                  "margin": "0",
                  "border": "0",
                  "background-color": "rgba(250,250,250,0)",
                  "max-height": "calc( 100vh - 115px)",
                  "overflow-y": "scroll"
                },
                "advance": {
                  "expression": "{}"
                },
                "children": [
                  {
                    "type": "column",
                    "col": 12,
                    "children": [
                      {
                        "label": "控件组",
                        "type": "ctrlgroup",
                        "source": "CTRLGROUP",
                        "advance": {
                          "expression": "expression = {\n  on : {\n    init : function(event){\n      var target = event.target;\n      var global = event.global;\n      var render = function(str){\n          var ctrlGroups = [\n           [{\n              type : \"label\",\n              value : str || \"普通标签\",\n              style : {\n                  \"font-weight\" : \"bold\",\n                  \"color\" : \"#72b3d7\",\n                  \"line-height\" : \"20px\"\n              },\n              class : \"col-md-12\"\n            }]\n          ];\n          event.target.render(ctrlGroups);\n      }\n      var naviString = target.getValue(\"global/navistring\");\n      render(naviString || \"读取中请稍后。。。\");\n      target.off(\"changeNavString\");\n      target.on(\"changeNavString\", function(str){\n          render(str);\n      });;\n      \n    }\n  }\n}"
                        },
                        "style": {
                          "margin": "0 5px",
                          "font-size": "12px",
                          "color": "#72b3d7"
                        },
                        "help": "../pdf/ctrlgroup.pdf",
                        "url": "images/map/map1.png",
                        "parameters": {}
                      },
                      {
                        "label": "伪TAB样式",
                        "type": "faketab",
                        "source": "FAKETAB",
                        "advance": {
                          "getfunction": "kpiDataService.getValueList",
                          "category": "ci",
                          "condition": [
                            "kpi",
                            "{object:kpiQueryModel}"
                          ],
                          "expression": "expression = {\n  \"on\" : {\n    \"init\" : function(event){\n      // -------------- 初始化内容在这里设置;\n      debugger;\n      var TYPE = \"history\";\n      if(TYPE == \"analysis\"){\n        var tabs = [{\n          id : 0,\n          label : \"综合趋势\",\n          default : \"baogang/analysis/general\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 1,\n          label : \"特征趋势\",\n          default : \"baogang/analysis/feature\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 2,\n          label : \"时域分析\",\n          default : \"baogang/analysis/time\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 3,\n          label : \"频域波形\",\n          default : \"baogang/analysis/frequence\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 4,\n          label : \"诊断履历\",\n          default : \"baogang/analysis/diagnose\",\n          icon : \"glyphicon glyphicon-home\",\n        }];\n        var NAVIGATETO = \"analysisNavigateTo\";\n        var CACHEDVALUENAME = \"controlPanelAnalysisNavigation\";\n        var CHANGENAVEEVENT = \"analysisviewchange\";\n        var MOVETOEVENT = \"analysismoveTo\";\n      } else if(TYPE == \"diagnose\"){\n        var tabs = [{\n          id : 0,\n          label : \"多专业诊断\",\n          default : \"baogang/diagnose/multiArea\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 1,\n          label : \"协同诊断\",\n          default : \"baogang/diagnose/corporation\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 2,\n          label : \"视频诊断\",\n          default : \"baogang/diagnose/video\",\n          icon : \"glyphicon glyphicon-home\",\n        },{\n          id : 3,\n          label : \"报告编制\",\n          default : \"baogang/diagnose/report\",\n          icon : \"glyphicon glyphicon-home\",\n        }];\n        var NAVIGATETO =  \"diagnoseNavigateTo\";\n        var CACHEDVALUENAME = \"controlPanelDiagnoseNavigation\";\n        var CHANGENAVEEVENT = \"diagnoseviewchange\";\n        var MOVETOEVENT = \"diagnosemoveto\";\n      } else if(TYPE == \"history\"){\n        var tabs = [{\n          id : -1,\n          label : \"特征指标跟踪\",\n          default : \"baogang/history/characteristic\",\n          icon : \"proudsmart ps-bw_tezhengzhibiaogenzong\",\n        },{\n          id : 0,\n          label : \"诊断履历\",\n          default : \"baogang/history/diagnosehistory\",\n          icon : \"proudsmart ps-bw_zhenduanlvli\",\n        },{\n          id : 1,\n          label : \"故障履历\",\n          default : \"baogang/history/malfunctionhistory\",\n          icon : \"proudsmart ps-bw_guzhanglvli\",\n        },{\n          id : 2,\n          label : \"检修履历\",\n          default : \"baogang/history/checkhistory\",\n          icon : \"proudsmart ps-bw_jianxiulvli\",\n        },{\n          id : 3,\n          label : \"点检异常\",\n          default : \"baogang/history/detailcheckhistory\",\n          icon : \"proudsmart ps-bw_dianjianyichang\",\n        },{\n          id : 4,\n          label : \"报警记录\",\n          default : \"baogang/history/warninglist\",\n          icon : \"proudsmart ps-bw_baojingjilu\",\n        },{\n          id : 5,\n          label : \"离线诊断报告\",\n          default : \"baogang/history/offlinereport\",\n          icon : \"proudsmart ps-bw_lixianzhenduanbaogao\",\n        }];\n        var NAVIGATETO =  \"historyNavigateTo\";\n        var CACHEDVALUENAME = \"controlPanelHistoryNavigation\";\n        var CHANGENAVEEVENT = \"historyviewchange\";\n        var MOVETOEVENT = \"historymoveto\";\n      }\n      // ------------------- 初始化内容在这里设置\n      var target = event.target;\n      var main = target.getParameter(\"main\") || 0;\n      var param = target.getParameter(\"sub\");\n      /**\n      var main, sub, path, temp_view;\n      if(param instanceof Array){\n          sub = param[0];\n          path = param[1];\n      } else {\n          sub = param\n      }*/\n      \n      var main, sub, path, temp_view;\n      debugger;\n      if(param instanceof Array){\n          sub = param[0];\n          path = param[1];\n          if(path.indexOf(\"viewId:\") != -1){\n              temp_view = {\n                  viewId : path.split(\"viewId:\")[1]\n              }\n          }\n      } else {\n          sub = param\n      }\n      \n      \n      target.setScopeValue(\"CACHEDVALUENAME\", CACHEDVALUENAME);\n      target.setScopeValue(\"CHANGENAVEEVENT\", CHANGENAVEEVENT);\n      target.setScopeValue(\"MOVETOEVENT\", MOVETOEVENT);\n      var editMode = true;\n      var subTabs = [];\n      var updateNaviList = function(){\n        var obj = {\n          tabs : tabs,\n          subTabs : subTabs,\n          editMode : editMode\n        };\n        target.saveEditorStatus(CACHEDVALUENAME, obj);\n      }\n      var select = function(item, path){\n        debugger;\n        var viewId = item.viewId;\n        if(temp_view){\n            target.trigger(CHANGENAVEEVENT, {\n                item : temp_view,\n                path : \"index\"\n            });\n        } else {\n            target.trigger(CHANGENAVEEVENT, {\n                item : item,\n                path : path\n            });   \n        }\n      };\n      var saveView = function(item, callback){\n        var viewTitle = item.label;\n        var viewType = \"dashboard\";\n        var viewId = item.viewId;\n        if(viewId){\n          target.updateView({\n            viewId : viewId,\n            viewTitle : item.label,\n            viewType : \"dashboard\"\n          }, function(data){\n            callback(data);\n          })\n        } else {\n          var run = function(json){\n            //console.log(\"run\", json);\n            target.addView({\n              viewTitle : item.label + \"(工作台:\" + (item.default || \"自定义\")  + \")\",\n              viewType : \"dashboard\",\n              content : json ? json : null,\n            }, function(data){\n              item.viewId = data.data.viewId;\n              callback(data);\n            })\n          };\n          if(item.default){\n            target.Info(\"../../localdb/echartTemplate/\" + item.default + \".json\", function(json){\n              run(JSON.stringify(json));\n            })\n          } else {\n            run();\n          }\n        }\n      };\n      var deleteView = function(item){\n        if(item.viewId){\n          target.deleteView(item.viewId);\n        };\n      }\n      target.getEditorStatus(CACHEDVALUENAME, function(status){\n        var configGroupFound = function(){\n          if(status){\n            editMode = (status.editMode == undefined) ? true : status.editMode;\n\n            for(var i in tabs){\n              var find = status.tabs.find(function(elem){\n                return elem.id == tabs[i].id;\n              })\n              console.log(\"find\", find);\n              if(find){\n                tabs[i].viewId = find.viewId;\n              }\n            };\n            Array.prototype.push.apply(subTabs, status.subTabs);\n          };\n          var render = function(view){\n            var tabFilter = tabs.filter(function(elem){\n              return elem.show != false || editMode;\n            })\n            console.log(tabs);\n            var tabsClone = tabFilter.map(function(elem){\n              var clone = elem.$clone();\n              clone.on = {\n                click : function(el){\n                    target.navigateTo(\"index\", {\n                        main : main,\n                        sub : elem.id\n                    }, \"self\");\n                }\n              };\n              if(editMode){\n                clone.addOn = [{\n                  icon : \"glyphicon glyphicon-scale\",\n                  on : {\n                    click : function(el){\n                      var run = function(){\n                        var viewId = elem.viewId;\n                        target.linkTo(\"../app-freeboard/index.html#/freeboard/view/dashboard/\" + elem.viewId + \"/0\");\n                      }\n                      if(!elem.viewId){\n                        saveView(elem, function(){\n                          updateNaviList();\n                          run();\n                        });\n                      } else {\n                        run();\n                      }\n                    }\n                  }\n                },{\n                  icon : \"glyphicon glyphicon-edit\",\n                  on : {\n                    click : function(event){\n                      target.createPopupBypath(\"info\", {\n                        title : \"工作台信息\",\n                        theme : \"system\",\n                        width : 500,\n                        on : {\n                          submit : function(item){\n\n                          }\n                        }\n                      }, elem);\n                    }\n                  }\n                }/*,{\n                 icon : \"glyphicon glyphicon-refresh\",\n                 on : {\n                 click : function(event){\n                 deleteView(elem);\n                 delete elem.viewId;\n                 updateNaviList();\n                 render();\n                 }\n                 }\n                 }*/]\n              };\n              return clone;\n            });\n            var subTabsFilter = subTabs.filter(function(elem){\n              return elem.show || editMode;\n            })\n            var subTabsClone = subTabsFilter.map(function(elem){\n              var clone = elem.$clone();\n              clone.on = {\n                click : function(el){\n                  target.tabInx = tabFilter.length + subTabsFilter.indexOf(elem);\n                  //select(elem)\n                  render();\n                }\n              }\n              if(editMode){\n                clone.$extension({\n                  addOn : [{\n                    icon : \"glyphicon glyphicon-edit\",\n                    on : {\n                      click : function(){\n                        target.createPopupBypath(\"popup\", {\n                          title : \"编辑工作台\",\n                          theme : \"system\",\n                          width : 500,\n                          on : {\n                            submit : function(item){\n                              elem.label = item.name;\n                              elem.id = item.id;\n                              saveView(elem, function(){\n                                updateNaviList();\n                                render();\n                              });\n                            }\n                          }\n                        }, elem);\n                      }\n                    }\n                  },{\n                    icon : \"glyphicon glyphicon-scale\",\n                    on : {\n                      click : function(event){\n                        target.linkTo(\"../app-freeboard/index.html#/freeboard/view/dashboard/\" + elem.viewId + \"/0\");\n                      }\n                    }\n                  },{\n                    icon : \"proudsmart ps-delete-02\",\n                    on : {\n                      click : function(event){\n                        var inx = subTabs.indexOf(elem);\n                        subTabs.splice(inx, 1);\n                        deleteView(elem);\n                        updateNaviList();\n                        render();\n                      }\n                    }\n                  }]\n                });\n              }\n              return clone;\n            });\n            var concat = tabFilter.concat(subTabsFilter);\n\n            if(view){\n              target.tabInx = concat.indexOf(view);\n            };\n            var find = concat.find(function(elem){\n                return elem.id == sub;\n            });\n            if(find){\n                target.tabInx = concat.indexOf(find);\n            };\n            if(target.tabInx > concat.length - 1){\n              target.tabInx = concat.length - 1\n              //select(concat[target.tabInx]);\n            };\n            select(concat[target.tabInx], path);\n            if(editMode){\n              var clist = tabsClone.concat(subTabsClone).concat([{\n                id : -1,\n                label : \"\",\n                icon : \"glyphicon glyphicon-plus\",\n                on : {\n                  click : function(elem){\n                    target.createPopupBypath(\"popup\", {\n                      title : \"新建工作台\",\n                      theme : \"system\",\n                      width : 500,\n                      on : {\n                        submit : function(item){\n                          var item = {\n                            id : item.id,\n                            label : item.name\n                          };\n                          saveView(item, function(){\n                            subTabs.push(item);\n                            updateNaviList();\n                            render();\n                          });\n                        }\n                      }\n                    });\n                  }\n                }\n              },{\n                id : -1,\n                label : \"\",\n                icon : \"glyphicon glyphicon-cog\",\n                on : {\n                  click : function(elem){\n                    //console.log(\"editMode\", editMode);\n                    target.createPopupBypath(\"setting\", {\n                      title : \"设置\",\n                      theme : \"system\",\n                      width : 500,\n                      on : {\n                        submit : function(data){\n                          tabs = data.tabs;\n                          editMode = data.editMode;\n                          subTabs = data.subTabs;\n                          updateNaviList();\n                          render();\n                        }\n                      }\n                    }, {\n                      editMode : editMode,\n                      tabs : tabs,\n                      subTabs : subTabs\n                    });\n                  }\n                }\n              }])\n            } else {\n              var clist = tabsClone.concat(subTabsClone).concat([{\n                id : -1,\n                label : \"\",\n                icon : \"glyphicon glyphicon-cog\",\n                on : {\n                  click : function(elem){\n                    //console.log(\"editMode\", editMode);\n                    target.createPopupBypath(\"setting\", {\n                      title : \"设置\",\n                      theme : \"system\",\n                      width : 500,\n                      on : {\n                        submit : function(data){\n                          tabs = data.tabs;\n                          editMode = data.editMode;\n                          subTabs = data.subTabs;\n                          updateNaviList();\n                          render();\n                        }\n                      }\n                    }, {\n                      editMode : editMode,\n                      tabs : tabs,\n                      subTabs : subTabs\n                    });\n                  }\n                }\n              }]);\n            }\n            target.render(clist);\n          };\n          target.on(NAVIGATETO, function(id){\n            var concat = tabs.concat(subTabs);\n            var find = concat.find(function(elem){\n              return elem.id == id;\n            });\n            render(find);\n            if(find){\n              select(find);\n            }\n          })\n          render();\n        }\n        configGroupFound();\n      });\n    }\n  },\n  \"format\" : {\n    \"id\" : \"id\",\n    \"label\" : \"label\"\n  }\n};",
                          "customCategory": ""
                        },
                        "style": {
                          "color": "#fff",
                          "background-color": "#3c8dbc",
                          "margin": "5px"
                        },
                        "parameters": {},
                        "url": "images/map/map1.png"
                      },
                      {
                        "label": "控制板1",
                        "type": "block",
                        "source": "BLOCK",
                        "style": {
                          "padding": "5px",
                          "min-height": "calc(100vh - 200px)"
                        },
                        "advance": {
                          "expression": {}
                        },
                        "children": [
                          {
                            "type": "column",
                            "col": 12,
                            "children": [
                              {
                                "label": "视图嵌入",
                                "type": "injector",
                                "source": "INJECTOR",
                                "parameters": {
                                  "icon": {
                                    "id": 0,
                                    "perfix": "ion",
                                    "css": "ion-ios-gear-outline"
                                  }
                                },
                                "advance": {
                                  "getfunction": "",
                                  "expression": "expression = {\n  on : {\n    init : function(event){\n      var json;\n      var target = event.target;\n      var CHANGENAVEEVENT = target.getScopeValue(\"CHANGENAVEEVENT\");\n      var MOVETOEVENT = target.getScopeValue(\"MOVETOEVENT\");\n      target.off(MOVETOEVENT);\n      target.on(MOVETOEVENT, function(path){\n          \n        var find = json.groups.find(function(elem){\n          return elem.path == path;\n        });\n        json.layout = find.layout;\n        target.render(json);\n      });\n      target.off(CHANGENAVEEVENT);\n      target.on(CHANGENAVEEVENT, function(data){\n        var view = data.item;\n        var path = data.path;\n        var viewId = view.viewId;\n        target.off(\"tree_resourceChange\");\n        if(viewId){\n          target.getViewById(viewId, function(view){\n            var content = view.content;\n            //console.log(\"content\", content);\n            if(content){\n              json = JSON.parse(content);\n              if(path){\n                var find = json.groups.find(function(elem){\n                  return elem.path == path;\n                });\n                json.layout = find.layout;\n              }\n              target.render(json);\n            } else {\n              target.Info('../../localdb/echartTemplate/baogang/nographe.json', function(nographe){\n                target.render(nographe);\n              });\n            }\n          });\n        } else {\n          var viewPath = view.default;\n          target.Info('../../localdb/echartTemplate/' + view.default + \".json\", function(json){\n            if(path){\n              var find = json.groups.find(function(elem){\n                return elem.path == path;\n              });\n              json.layout = find.layout;\n            }\n            target.render(json);\n          });\n        };\n      });\n    }\n  }\n}"
                                },
                                "style": {},
                                "children": []
                              }
                            ]
                          }
                        ],
                        "url": "images/map/map1.png",
                        "parameters": {}
                      }
                    ]
                  }
                ],
                "url": "images/map/map1.png",
                "parameters": {}
              }
            ],
            "col": 10
          }
        ]
      }
    ],
    "col": 12,
    "CACHEDVALUENAME": "controlPanelAnalysisNavigation",
    "CHANGENAVEEVENT": "analysisviewchange",
    "MOVETOEVENT": "analysismoveTo"
  },
  "setting": "{\n  \"theme\": \"steel\"\n}"
}